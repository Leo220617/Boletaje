@page "{id}"
@model Boletaje.Pages.OfertaVenta.NuevoModel
@{
    ViewData["Title"] = "Generar Oferta Venta";
}

@section breadcrumb{

    <li class="breadcrumb-item">
        <a asp-page="./Index">Ofertas Venta</a>
    </li>
    <li class="breadcrumb-item active">
        <a>Generar Oferta</a>
    </li>

}
@using Newtonsoft.Json;
@section styles{
    <style>
        .input {
            width: 40%;
        }

        .input2 {
        }
    </style>

}
@section scripts
    {

    <script>
        $(document).ready(function () {

            jQuery(document).ready(function ($) {
                $(document).ready(function () {
                    $("#nombreArea").hide();

                });
            });

            Recuperar();

        });
        var ProdCadena = [];

        var Clientes = [];
        var Impuestos = [];
        var Productos = [];
        var subtotal = 0;
        var impuestos = 0;
        var descuentos = 0;
        var TipoCambio = 0;
        var Documento = [];
        var PersonasContactoG = [];
        var PersonasContacto = [];


        function formatDate(date) {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2)
                month = '0' + month;
            if (day.length < 2)
                day = '0' + day;

            return [year, month, day].join('-');
        }
        function TipodeCambio() {
            $.ajax({
                type: 'GET',
                dataType: 'json',
                url: 'https://tipodecambio.paginasweb.cr/api//' + formatDate(Date(Date.now())).split('-')[2] + '/' + formatDate(Date(Date.now())).split('-')[1] + '/' + formatDate(Date(Date.now())).split('-')[0],
                data: {},
                success: function (result) {

                    if (result == null) {
                        ids = 0;
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Ha ocurrido un error al intentar tomar el tipo de cambio'

                        })

                    } else {
                        TipoCambio = result.venta;
                        $("#TipoCambioBCCR").val(TipoCambio);
                    }
                },
                beforeSend: function () {

                }
            })
        }
        function Recuperar() {
            try {
                Clientes = JSON.parse($("#Clientes").val());
                Impuestos = JSON.parse($("#Impuestos").val());
                Documento = JSON.parse($("#Documento").val());
                PersonasContactoG = JSON.parse($("#PersonasContacto").val());


                $('.select2').select2({
                    width: 'resolve',
                    theme: "classic"
                });
                TipodeCambio();
                ModificaMoneda();
                if (Documento != null && Documento != undefined && Documento.Moneda != null) {
                    $("#cliente").val(Documento.CardCode);
                    cambiarCliente(1);

                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }



        }
        function RecuperarInformacion() {
            try {
                $("#moneda").val(Documento.Moneda);
                $("#tipoDocumento").val(Documento.TipoDocumento);
                $("#referencia").val(Documento.NumAtCard);
                $("#Comentario").val(Documento.Comentarios);


                for (var i = 0; i < Documento.Detalle.length; i++) {

                    var Prod = Productos.find(a => a.codigo == Documento.Detalle[i].ItemCode);

                    var detalle = {
                        id: 0,
                        idEncabezado: 0,
                        NumLinea: 0,
                        ItemCode: Documento.Detalle[i].ItemCode,
                        ItemName: Documento.Detalle[i].ItemName,
                        Bodega: Documento.Detalle[i].Bodega,
                        PorcentajeDescuento: Documento.Detalle[i].PorcentajeDescuento,
                        Cantidad: Documento.Detalle[i].Cantidad,
                        Impuesto: parseFloat(Documento.Detalle[i].Impuesto),
                        TaxOnly: Documento.Detalle[i].TaxOnly,
                        PrecioUnitario: Documento.Detalle[i].PrecioUnitario,
                        Total: 0,
                        Nombre: Documento.Detalle[i].ItemName, //Prod.nombre,
                        Moneda: Documento.Monedaa,
                        PrecioUnitario1: 0

                    };
                    var Moneda = $("#moneda").val();

                    //if (detalle.Moneda != Moneda) {
                    //    if (Moneda != "COL") {

                    //        detalle.Moneda = Moneda;
                    //        detalle.PrecioUnitario = parseFloat((detalle.PrecioUnitario / TipoCambio).toFixed(2));
                    //    } else {

                    //        detalle.Moneda = Moneda;
                    //        detalle.PrecioUnitario = parseFloat((detalle.PrecioUnitario * TipoCambio).toFixed(2));
                    //    }
                    //}


                    if (!detalle.TaxOnly) {

                        var subtotalL = detalle.Cantidad * detalle.PrecioUnitario;
                        var descuentosL = (subtotalL * (detalle.PorcentajeDescuento / 100));
                        var impuestosL = ((subtotalL - descuentosL) * (parseFloat(detalle.Impuesto) / 100));

                        detalle.Total = subtotalL - descuentosL + impuestosL;


                        subtotal += subtotalL;
                        descuentos += descuentosL;
                        impuestos += impuestosL;

                    } else {
                        var subtotalL = detalle.Cantidad * detalle.PrecioUnitario;
                        var descuentosL = (subtotalL * detalle.PorcentajeDescuento / 100);
                        var impuestosL = ((subtotalL - descuentosL) * (parseFloat(detalle.Impuesto) / 100));

                        detalle.Total = impuestosL;

                        impuestos += impuestosL;

                    }
                    ProdCadena.push(detalle);



                }


                ActualizaDatos();
                RellenaTabla();




            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar recuperar informacion ' + e

                })
            }
        }
        function cambiarCliente(primeraVez) {
            try {
                var idCliente = $("#cliente").val().split("/")[0].trim();
                if (primeraVez == 1) {
                    $("#cliente").val(idCliente + " / " + Clientes.find(a => a.CardCode == idCliente).CardName);
                }

                PersonasContacto = PersonasContactoG.filter(a => a.CardCode == idCliente);
                RellenaPersonasContacto();
                if (idCliente != "0") {
                    var ListaPrecio = Clientes.find(a => a.CardCode == idCliente).ListNum;
                    var Bodega = "@Model.Bodega";


                    $.ajax({
                        type: 'GET',

                        url: '@Url.Page("Nuevo", "Productos")',
                        dataType: 'json',
                        data: { codBodega: Bodega, codListaPrecios: ListaPrecio },
                        headers: {
                            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function (json) {

                            console.log(json);
                            var Prods = json;
                            Productos = Prods;
                            var categoriaAnterior = "";
                            console.log(Prods);
                            var sOptions = '';

                            $("#ProductoSeleccionado").html('');

                            sOptions += '<option value="0">Seleccione</option>';
                            for (var i = 0; i < Prods.length; i++) {

                                sOptions += ' <option value="' + Prods[i].codigo + '">  ' + Prods[i].codigo + ' - ' + Prods[i].nombre + " - Stock: " + Prods[i].stockReal + '</option>';

                            }

                            $("#ProductoSeleccionado").html(sOptions);
                            if (primeraVez == 1) {
                                RecuperarInformacion();
                                ModificaMoneda();

                            }

                        },

                        beforeSend: function (xhr) {


                        },
                        complete: function () {

                        },
                        error: function (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Ha ocurrido un error  ' + error

                            })
                        }
                    });




                }

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }
        }
        function RellenaPersonasContacto() {
            try {
                var html = "";
                $("#pContact").html(html);

                for (var i = 0; i < PersonasContacto.length; i++) {
                    html += '<option value="' + PersonasContacto[i].CardCode + ' / ' + PersonasContacto[i].NombreContacto + '">' + PersonasContacto[i].NombreContacto + '</option>';
                }

                $("#pContact").html(html);

                onChangePersonaContacto();

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }
        }

        function onChangePersonaContacto() {
            try {
                try {
                    var Persona = $("#pContact").val().split("/");
                    var CardCode = Persona[0].trimEnd();
                    var Nombre = Persona[1].trimStart();

                    var PP = PersonasContacto.find(a => a.CardCode == CardCode && a.NombreContacto == Nombre);

                    $("#emailContacto").val(PP.Correo);
                    $("#tContacto").val(PP.Telefono);
                } catch (e) {

                }




            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }
        }

        function onChangeProducto() {
            try {
                if ($("#ProductoSeleccionado").val() != "0") {
                    var Precio = Productos.find(a => a.codigo == $("#ProductoSeleccionado").val()).precioUnitario;
                    var Moneda = Productos.find(a => a.codigo == $("#ProductoSeleccionado").val()).moneda;
                    var Nombre = Productos.find(a => a.codigo == $("#ProductoSeleccionado").val()).nombre;
                    $("#inputPrecio").val(parseInt(Precio));
                    $("#inputMoneda").val(Moneda);
                    if (Productos.find(a => a.codigo == $("#ProductoSeleccionado").val()).editable == 1) {
                        $("#nombre").prop('readonly', false);
                        $("#nombre").hide();

                        $("#nombreArea").show();
                    } else {
                        $("#nombre").prop('readonly', true);
                        $("#nombreArea").hide();
                        $("#nombre").show();

                    }
                    $("#nombre").val(Nombre);
                    $("#nombreArea").val(Nombre);

                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }
        }
        function RellenaTabla() {
            try {
                var sOptions = '';

                $("#tbody").html('');

                for (var i = 0; i < ProdCadena.length; i++) {
                    var Prod = Productos.find(a => a.codigo == ProdCadena[i].ItemCode);
                    console.log(Prod);

                    sOptions += '<tr>';

                    sOptions += '<td align="center" style="padding-top:13px;">    <a style="margin-left: -1%; position: inherit !important;" onclick = "javascript: EliminaProducto(' + i + ')" title="Eliminar" class="btn btn-danger">X</a> ';
                    if (Prod.editable) {
                        sOptions += '<td align="center" style="padding-top:15px;">  <textarea class="form-control" readonly>' + ProdCadena[i].ItemCode + ' - ' + ProdCadena[i].Nombre + '</textarea></td>';

                    } else {
                        sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:13px;">' + ProdCadena[i].ItemCode + ' - ' + ProdCadena[i].Nombre + '</p></td>';

                    }
                    sOptions += '<td align="center" style="padding-top:15px;">   <input class="form-control" type="number" id="cantidadProd' + i + '" onchange="javascript: onChangePrecio(' + i + ')" value="' + ProdCadena[i].Cantidad + '"/> </td>';
                    sOptions += '<td align="center" style="padding-top:15px;">   <input class="form-control" type="number" id="precioProd' + i + '" onchange="javascript: onChangePrecio(' + i + ')" value="' + ProdCadena[i].PrecioUnitario + '"/></td > ';

                    sOptions += '<td align="right" style="padding-top:15px;">  <p style="font-size:13px;">' + formatoDecimal(ProdCadena[i].PorcentajeDescuento) + '% </p></td>';
                    sOptions += '<td align="center" style="padding-top:13px;">  <p style="font-size:13px;">' + ProdCadena[i].Impuesto + '</p></td>';
                    sOptions += '<td align="right" style="padding-top:15px;">  <p style="font-size:13px;">' + formatoDecimal(ProdCadena[i].Total) + '</p></td>';





                    sOptions += '</tr>'
                }
                $("#tbody").html(sOptions);
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }

        }

        function onChangePrecio(campo) {
            try {
                var cantidad = parseFloat($("#cantidadProd" + campo).val());
                var precio = parseFloat($("#precioProd" + campo).val());

                if (!ProdCadena[campo].TaxOnly) {

                    var subtotalL = ProdCadena[campo].Cantidad * ProdCadena[campo].PrecioUnitario;
                    var descuentosL = (subtotalL * (ProdCadena[campo].PorcentajeDescuento / 100));
                    var impuestosL = ((subtotalL - descuentosL) * (parseFloat(ProdCadena[campo].Impuesto) / 100));


                    subtotal -= subtotalL;
                    descuentos -= descuentosL;
                    impuestos -= impuestosL;

                } else {
                    var subtotalL = ProdCadena[campo].Cantidad * ProdCadena[campo].PrecioUnitario;
                    var descuentosL = (subtotalL * ProdCadena[campo].PorcentajeDescuento / 100);
                    var impuestosL = ((subtotalL - descuentosL) * (parseFloat(ProdCadena[campo].Impuesto) / 100));


                    impuestos -= impuestosL;

                }


                ProdCadena[campo].Cantidad = cantidad;
                ProdCadena[campo].PrecioUnitario = precio;

                var Moneda = $("#moneda").val();




                if (!ProdCadena[campo].TaxOnly) {

                    var subtotalL = ProdCadena[campo].Cantidad * ProdCadena[campo].PrecioUnitario;
                    var descuentosL = (subtotalL * (ProdCadena[campo].PorcentajeDescuento / 100));
                    var impuestosL = ((subtotalL - descuentosL) * (parseFloat(ProdCadena[campo].Impuesto) / 100));

                    ProdCadena[campo].Total = subtotalL - descuentosL + impuestosL;


                    subtotal += subtotalL;
                    descuentos += descuentosL;
                    impuestos += impuestosL;

                } else {
                    var subtotalL = ProdCadena[campo].Cantidad * ProdCadena[campo].PrecioUnitario;
                    var descuentosL = (subtotalL * ProdCadena[campo].PorcentajeDescuento / 100);
                    var impuestosL = ((subtotalL - descuentosL) * (parseFloat(ProdCadena[campo].Impuesto) / 100));

                    ProdCadena[campo].Total = impuestosL;

                    impuestos += impuestosL;

                }

                ActualizaDatos();
                RellenaTabla();

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }
        }

        function EliminaProducto(campo) {
            try {

                Swal.fire({
                    title: '¿Desea eliminar este producto?',
                    showDenyButton: true,
                    showCancelButton: false,
                    confirmButtonText: `Aceptar`,
                    denyButtonText: `Cancelar`,
                    customClass: {
                        confirmButton: 'swalBtnColor',
                        denyButton: 'swalDeny'
                    },
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        var subtotalL = ProdCadena[campo].Cantidad * ProdCadena[campo].PrecioUnitario;
                        var descuentosL = (subtotalL * ProdCadena[campo].PorcentajeDescuento / 100);
                        var impuestosL = ((subtotalL - descuentosL) * (ProdCadena[campo].Impuesto / 100));
                        if (!ProdCadena[campo].TaxOnly) {
                            subtotal -= subtotalL;
                            descuentos -= descuentosL;
                            impuestos -= impuestosL;
                        } else {
                            impuestos -= impuestosL;

                        }


                        ProdCadena.splice(campo, 1);
                        ActualizaDatos();
                        RellenaTabla();
                    }
                })
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }


        }
        function AgregarProducto() {
            try {
                if (ValidarAntesTabla()) {

                    var Prod = Productos.find(a => a.codigo == $("#ProductoSeleccionado").val());

                    var detalle = {
                        id: 0,
                        idEncabezado: 0,
                        NumLinea: 0,
                        ItemCode: $("#ProductoSeleccionado").val(),
                        ItemName: $("#nombreArea").val(),
                        Bodega: Prod.idBodega,
                        PorcentajeDescuento: $("#descuento").val(),
                        Cantidad: $("#cantidad").val(),
                        Impuesto: parseFloat($("#impuesto").val()),
                        TaxOnly: document.getElementById("taxonly").checked,
                        PrecioUnitario: parseFloat($("#inputPrecio").val()),
                        Total: 0,
                        Nombre: $("#nombreArea").val(),
                        Moneda: Prod.moneda,
                        PrecioUnitario1: 0

                    };
                    var Moneda = $("#moneda").val();

                    if (detalle.Moneda != Moneda) {
                        if (Moneda != "COL") {

                            detalle.Moneda = Moneda;
                            detalle.PrecioUnitario = parseFloat((detalle.PrecioUnitario / TipoCambio).toFixed(2));
                        } else {

                            detalle.Moneda = Moneda;
                            detalle.PrecioUnitario = parseFloat((detalle.PrecioUnitario * TipoCambio).toFixed(2));
                        }
                    }


                    if (!detalle.TaxOnly) {

                        var subtotalL = detalle.Cantidad * detalle.PrecioUnitario;
                        var descuentosL = (subtotalL * (detalle.PorcentajeDescuento / 100));
                        var impuestosL = ((subtotalL - descuentosL) * (parseFloat(detalle.Impuesto) / 100));

                        detalle.Total = subtotalL - descuentosL + impuestosL;


                        subtotal += subtotalL;
                        descuentos += descuentosL;
                        impuestos += impuestosL;

                    } else {
                        var subtotalL = detalle.Cantidad * detalle.PrecioUnitario;
                        var descuentosL = (subtotalL * detalle.PorcentajeDescuento / 100);
                        var impuestosL = ((subtotalL - descuentosL) * (parseFloat(detalle.Impuesto) / 100));

                        detalle.Total = impuestosL;

                        impuestos += impuestosL;

                    }
                    ProdCadena.push(detalle);
                    LimpiarDatos();
                    ActualizaDatos();
                    RellenaTabla();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Pareciera que aún falta un campo por llenar'

                    });
                }


            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }
        }

        function ActualizaDatos() {
            try {
                $("#subtotalG").text(formatoDecimal(Math.abs(subtotal)));
                $("#descuentoG").text(formatoDecimal(Math.abs(descuentos)));
                $("#impuestoG").text(formatoDecimal(Math.abs(impuestos)));
                var total = subtotal - descuentos + impuestos;
                $("#totalG").text(formatoDecimal(Math.abs(total)));
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }


        }

        function LimpiarDatos() {
            try {
                $("#descuento").val(0);

                $("#cantidad").val(1);
                $("#inputPrecio").val(1);
                $("#ProductoSeleccionado").val("0").trigger('change.select2');
                $("#impuesto").val("0").trigger('change.select2');
                $("#nombreArea").val("");
                $("#nombre").val("");

                $("#comentario").val("");
                document.getElementById("taxonly").checked = false;
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }


        }
        function ValidarAntesTabla() {
            try {
                if ($("#ProductoSeleccionado").val() == "0") {
                    return false;
                } else if ($("#cantidad").val() <= 0) {
                    return false;
                }
                else if ($("#impuesto").val() == "0") {
                    return false;
                }
                else if ($("#inputPrecio").val() < 0) {
                    return false;
                }
                else {
                    return true;
                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }

        }
        function onChangeMoneda() {
            try {

                ModificaMoneda();

                var Moneda = $("#moneda").val();

                for (var i = 0; i < ProdCadena.length; i++) {
                    var Produc = Productos.find(a => a.codigo == ProdCadena[i].ItemCode);
                    var subtotalL = ProdCadena[i].Cantidad * ProdCadena[i].PrecioUnitario;
                    var descuentosL = (subtotalL * ProdCadena[i].PorcentajeDescuento / 100);
                    var impuestosL = ((subtotalL - descuentosL) * (ProdCadena[i].Impuesto / 100));

                    if (!ProdCadena[i].TaxOnly) {
                        subtotal -= subtotalL;
                        descuentos -= descuentosL;
                        impuestos -= impuestosL;
                    } else {
                        impuestos -= impuestosL;

                    }
                    if (ProdCadena[i].Moneda != Moneda) {


                        if (Moneda != "COL") {

                            ProdCadena[i].Moneda = Moneda;
                            ProdCadena[i].PrecioUnitario = parseFloat((ProdCadena[i].PrecioUnitario / TipoCambio).toFixed(2));
                            // ProdCadena[i].Descuento = ProdCadena[i].PorcentajeDescuento / TipoCambio;
                            //ProdCadena[i].Impuesto = ProdCadena[i].Impuesto /TipoCambio;
                            ProdCadena[i].Total = parseFloat((ProdCadena[i].Total / TipoCambio).toFixed(2));





                        } else {

                            ProdCadena[i].Moneda = Moneda;
                            ProdCadena[i].PrecioUnitario = parseFloat((ProdCadena[i].PrecioUnitario * TipoCambio).toFixed(2));
                            // ProdCadena[i].Descuento = ProdCadena[i].Descuento * TipodeCambio.TipoCambio;
                            // ProdCadena[i].TotalImpuesto = ProdCadena[i].TotalImpuesto * TipodeCambio.TipoCambio;
                            ProdCadena[i].Total = parseFloat((ProdCadena[i].Total * TipoCambio).toFixed(2));

                        }


                    }





                    if (!ProdCadena[i].TaxOnly) {

                        subtotalL = ProdCadena[i].Cantidad * ProdCadena[i].PrecioUnitario;
                        descuentosL = (subtotalL * (ProdCadena[i].PorcentajeDescuento / 100));
                        impuestosL = ((subtotalL - descuentosL) * (parseFloat(ProdCadena[i].Impuesto) / 100));

                        ProdCadena[i].Total = parseFloat(subtotalL - descuentosL + impuestosL);


                        subtotal += subtotalL;
                        descuentos += descuentosL;
                        impuestos += impuestosL;

                    } else {
                        subtotalL = ProdCadena[i].Cantidad * ProdCadena[i].PrecioUnitario;
                        descuentosL = (subtotalL * ProdCadena[i].PorcentajeDescuento / 100);
                        impuestosL = ((subtotalL - descuentosL) * (parseFloat(ProdCadena[i].Impuesto) / 100));

                        ProdCadena[i].Total = parseFloat(impuestosL);

                        impuestos += impuestosL;

                    }
                }

                ActualizaDatos();
                RellenaTabla();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar imprimir ' + e

                })
            }
        }

        function GenerarPrecioUnitario1() {
            try {
                for (var i = 0; i < ProdCadena.length; i++) {
                    ProdCadena[i].PrecioUnitario1 = ProdCadena[i].PrecioUnitario.toString();
                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar guardar ' + e

                })
            }
        }
        function onGuardar() {
            try {
                let button = document.getElementById("Guardar");
                GenerarPrecioUnitario1();
                var Nombre = "";
                try {
                    var Persona = $("#pContact").val().split("/");
                    var CardCode = Persona[0].trimEnd();
                    var Nombre = Persona[1].trimStart();
                } catch (e) {

                }


                var recibidos = {
                    id: 0,
                    idCondPago: $("#condPago").val(),
                    idGarantia: $("#tipoGarantia").val(),
                    idTiemposEntregas: $("#tiemposEntrega").val(),
                    DocEntry: 0,
                    DocNum: 0,
                    CardCode: $("#cliente").val(),
                    Moneda: $("#moneda").val(),

                    Fecha: $("#fecha").val(),
                    FechaVencimiento: $("#fechaVencimiento").val(),
                    FechaEntrega: $("#fechaEntrega").val(),
                    TipoDocumento: $("#tipoDocumento").val(),
                    NumAtCard: $("#referencia").val(),
                    Series: 0,
                    Comentarios: $("#Comentario").val(),
                    CodVendedor: 0,
                    ProcesadaSAP: false,
                    PersonaContacto: Nombre,
                    TelefonoContacto: $("#tContacto").val(),
                    CorreoContacto: $("#emailContacto").val(),
                    Detalle: ProdCadena

                }

                if (validar(recibidos)) {
                    Swal.fire({
                        title: '¿Desea guardar los cambios de esta oferta de venta?',
                        showDenyButton: true,
                        showCancelButton: false,
                        confirmButtonText: `Aceptar`,
                        denyButtonText: `Cancelar`,
                        customClass: {
                            confirmButton: 'swalBtnColor',
                            denyButton: 'swalDeny'
                        },
                    }).then((result) => {
                        if (result.isConfirmed) {
                            button.disabled = true;

                            $.ajax({
                                type: 'POST',

                                url: '@Url.Page("Nuevo", "Generar")',
                                dataType: 'json',
                                data: { recibido: recibidos },
                                headers: {
                                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                },
                                success: function (json) {

                                    $("#divProcesando").hide();

                                    console.log("resultado " + json);
                                    if (json.success == true) {
                                        Swal.fire({
                                            title: "Ha sido generado con éxito",

                                            icon: 'success',
                                            showCancelButton: false,

                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swalBtnColor',

                                            },
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                window.location.href = window.location.href.split("/Nuevo")[0];
                                            }
                                        })

                                    } else {
                                        button.disabled = false;
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                        });
                                        $("#divProcesando").hide();

                                    }
                                },

                                beforeSend: function (xhr) {

                                    $("#divProcesando").modal("show");

                                },
                                complete: function () {

                                },
                                error: function (error) {
                                    button.disabled = false;
                                    $("#divProcesando").hide();

                                }
                            });
                        }

                        button.disabled = false;
                        $("#divProcesando").hide();

                    })
                }

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar guardar ' + e

                })
            }
        }
        function validar(e) {
            try {
                if (e.CardCode == "" || e.CardCode == null) {

                    return false;
                } else if (e.Fecha == "" || e.Fecha == null) {
                    return false;
                } else if (e.Moneda == "NULL") {
                    return false;
                }
                else {
                    return true;
                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar validar ' + e

                })
            }
        }

        function ModificaMoneda() {
            try {
                if ($("#moneda").val() == "COL") {


                    $(".monedaSIG").text("₡");
                } else {

                    $(".monedaSIG").text("$")
                }
            } catch (e) {

            }



        }
        function EditarCliente() {
            try {
                var id = $("#cliente").val();
                if (id == null || id == undefined || id == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Seleccione primero un cliente'

                    })
                } else {

                    var id2 = id.split("/")[0].trimEnd().trim();

                    window.location.href = window.location.href.toString().replace("OfertaVenta/Nuevo/" + window.location.href.split("/")[window.location.href.split("/").length - 1], "Client/Actualizar/" + id2);
                }

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }
        }
    </script>




}
<div class="row">
    <div class=" col-md-12 col-sm-12 col-12">
        <div class="card">
            <div class="card-header p-4">

                <input hidden id="Clientes" value="@JsonConvert.SerializeObject(Model.Clientes.Clientes)" />
                <input hidden id="Impuestos" value="@JsonConvert.SerializeObject(Model.Impuestos)" />
                <input hidden id="Documento" value="@JsonConvert.SerializeObject(Model.Orden)" />
                <input hidden id="PersonasContacto" value="@JsonConvert.SerializeObject(Model.PContactos.PersonasContacto)" />



                <div class="row">
                    <div class="col-sm-6">
                        <h5 class="title">Oferta de Venta</h5>
                    </div>

                    <div class="col-sm-6" style="text-align: right">

                        <a asp-page="/OfertaVenta/Index" class="nav-link text-dark" style="text-decoration: underline;"><i class="fas fa-reply "></i>  Regresar</a>

                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Fecha:</label>
                            <input type="date" class="form-control form-control-lg" id="fecha" asp-for="Orden.Fecha">

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Fecha Entrega:</label>
                            <input type="date" class="form-control form-control-lg" id="fechaEntrega" asp-for="Orden.FechaEntrega">

                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Fecha Vencimiento:</label>
                            <input type="date" class="form-control form-control-lg" id="fechaVencimiento" asp-for="Orden.FechaVencimiento">

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Cliente:</label>

                            <input type="text" list="cardcodes" class="form-control form-control-lg" id="cliente" placeholder="Nombre Cliente" onchange="javascript: cambiarCliente();">

                            <datalist id="cardcodes">
                                @foreach (var item in Model.Clientes.Clientes)
                                {
                                    <option value="@item.CardCode / @item.CardName">@item.CardCode / @item.CardName </option>
                                }
                            </datalist>




                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <a asp-page="/Client/Nuevo" style="text-decoration: underline;" class="nav-link" target="_blank">Crear Cliente</a>

                            </div>
                            <div class="col-md-6">
                                <a onclick="javascript: EditarCliente();" style="text-decoration: underline;" class="nav-link">Editar Cliente</a>

                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Persona Contacto:</label>
                            <select id="pContact" class="form-control" required onchange="javascript: onChangePersonaContacto()">
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Teléfono Contacto:</label>
                            <input type="text" class="form-control form-control-lg" id="tContacto">

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Correo Contacto:</label>
                            <input type="text" class="form-control form-control-lg" id="emailContacto">

                        </div>
                    </div>



                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Moneda:</label>
                            <select id="moneda" class="form-control" required onchange="javascript: onChangeMoneda()">

                                <option value="COL" selected>Colones</option>
                                <option value="USD">Dólares</option>


                            </select>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Tipo Documento:</label>
                            <select id="tipoDocumento" class="form-control" required>

                                <option value="I" selected>Item</option>
                                <option value="S">Servicios</option>


                            </select>
                        </div>
                    </div>


                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Condiciones de Pago:</label>
                            <select id="condPago" class="form-control" required asp-for="Orden.idCondPago">

                                @foreach (var item in Model.Condiciones)
                                {
                                    <option value="@item.id">@item.Nombre</option>
                                }

                            </select>

                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Tipo de Garantia:</label>
                            <select id="tipoGarantia" class="form-control" required asp-for="Orden.idGarantia">


                                @foreach (var item in Model.Garantias)
                                {
                                    <option value="@item.id">@item.Nombre</option>
                                }


                            </select>

                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Tiempos de Entrega:</label>
                            <select id="tiemposEntrega" class="form-control" required asp-for="Orden.idTiemposEntregas">

                                @foreach (var item in Model.Tiempos)
                                {
                                    <option value="@item.id">@item.Nombre</option>
                                }


                            </select>

                        </div>
                    </div>


                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Referencia:</label>
                            <input type="text" class="form-control form-control-lg" id="referencia">

                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Tipo de Cambio:</label>
                            <input type="text" class="form-control form-control-lg" id="TipoCambioBCCR" readonly>

                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-sm-6">
                        <h5 class="title">Productos</h5>
                    </div>

                    <div class="col-sm-6" style="text-align: right">
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <select id="ProductoSeleccionado" class="form-control select2" onchange="javascript: onChangeProducto()">
                            <option value="0"> Seleccione Productos</option>



                        </select>
                    </div>

                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Nombre</label>
                            <input type="text" class="form-control" id="nombre" placeholder="Nombre" readonly>
                            <textarea class="form-control" id="nombreArea" placeholder="Nombre"> </textarea>


                        </div>
                    </div>
                    <br />
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Cantidad</label>
                            <input type="number" class="form-control" id="cantidad" placeholder="Cantidad" value="1">


                        </div>


                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Impuesto</label>
                            <br />
                            <select id="impuesto" class="form-control " style="width: 100%">
                                <option value="0">Seleccione</option>
                                @foreach (var item in Model.Impuestos)
                                {
                                    <option value="@item.Tarifa">@item.CodSAP</option>

                                }
                            </select>

                        </div>


                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>% Descuento</label>
                            <input type="number" class="form-control" id="descuento" placeholder="Descuento" value="0">


                        </div>


                    </div>
                    <div class="col-md-3 pr-1">
                        <div class="form-group">
                            <label>Precio de Venta</label>
                            <input id="inputPrecio" type="number" class="form-control" placeholder="Precio Unitario" value="0">


                        </div>


                    </div>
                </div>

                <br />

                <div class="row">

                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Moneda</label>
                            <input type="text" readonly class="form-control" id="inputMoneda">


                        </div>


                    </div>
                    <div class="col-md-6">
                        <div class="form-check" style="margin-top: 13%;">
                            <label class="form-check-label">
                                <input class="form-check-input" type="checkbox" id="taxonly">
                                <span class="form-check-sign"></span>
                                Solo Impuesto
                            </label>
                        </div>


                    </div>

                    <div class="col-sm-12 pl-1" style="text-align: right;">

                        <a id="agregar" onclick="javascript: AgregarProducto();" class="btn btn-primary" style="color: white !important;">+ Agregar </a>
                    </div>



                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">


            <div class="card-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive tableFixHead" style=" overflow-y:scroll;    z-index: 5; height: 300px;">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th align="center" style=" text-align: center;">Eliminar</th>
                                        <th align="center" style=" text-align: center;">Item</th>
                                        <th align="center" style=" text-align: center;">Cantidad </th>
                                        <th align="center" style=" text-align: center;">Precio Uni </th>

                                        <th align="center" style=" text-align: center;">Descuento</th>
                                        <th align="center" style=" text-align: center;">Impuesto</th>
                                        <th align="center" style=" text-align: center;">Total</th>


                                    </tr>

                                </thead>
                                <tbody id="tbody">
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
                <hr />

                <div class="row">
                    <div class="col-sm-6 pr-1">
                    </div>

                    <div class="col-sm-6 pl-1 " style="text-align: right;">
                        <div class="row">

                            <div class="col-sm-12">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <td style="text-align: center;">
                                                <label class="col-form-label" style="display: inline-table; font-weight: 500 !important; font-style: normal;">SubTotal:</label>

                                            </td>
                                            <td>
                                                <span class="monedaSIG"></span>
                                                <label id="subtotalG" style="display: inline-table;  font-weight: bold !important; font-style: normal;">0</label>
                                            </td>

                                        </tr>
                                        <tr>

                                            <td style="text-align: center;">
                                                <label class="col-form-label" style="display: inline-table;  font-weight: 500 !important; font-style: normal;"> Descuento:</label>

                                            </td>
                                            <td>
                                                <span class="monedaSIG"></span>

                                                <label id="descuentoG" style="display: inline-table;  font-weight: bold !important; font-style: normal;">0</label>
                                            </td>
                                        </tr>
                                        <tr>

                                            <td style="text-align: center;">
                                                <label class="col-form-label" style="display: inline-table;  font-weight: 500 !important; font-style: normal;"> Impuesto:</label>

                                            </td>
                                            <td>
                                                <span class="monedaSIG"></span>

                                                <label id="impuestoG" style="display: inline-table;  font-weight: bold !important; font-style: normal;">0</label>
                                            </td>


                                        </tr>

                                        <tr>

                                            <td style="text-align: center;">
                                                <label class="col-form-label" style="display: inline-table;  font-weight: 500 !important; font-style: normal;"> Total:</label>

                                            </td>
                                            <td>
                                                <span class="monedaSIG"></span>

                                                <label id="totalG" style="display: inline-table;  font-weight: bold !important; font-style: normal;">0</label>
                                            </td>


                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <div class="col-sm-12">
        <label class="col-form-label">Comentario:</label>
    </div>
    <div class="col-sm-12">
        <textarea rows="5" class="form-control" id="Comentario"></textarea>
    </div>

</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <button type="button" id="Guardar" class="btn btn-rounded btn-outline-success" onclick="javascript: onGuardar()">Guardar Cambios</button>
        </div>
    </div>
</div>
