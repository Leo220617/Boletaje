@page "{id}"
@model Boletaje.Pages.Reparacion.EditarModel
@{
    ViewData["Title"] = "Editar Repuestos";
}
@section breadcrumb{

    <li class="breadcrumb-item">
        <a asp-page="./Index">Repuestos</a>
    </li>
    <li class="breadcrumb-item active">
        <a>Listado de Repuestos</a>
    </li>

}

@using System.Globalization;
@using Microsoft.AspNetCore.Http
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Security.Claims;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Configuration;
@using Refit;
@inject IHttpContextAccessor httpContextAccessor
@using Newtonsoft.Json;
@{
    var Roles = ((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == "Roles").Select(s1 => s1.Value).FirstOrDefault().Split("|");
}
@{
    NumberFormatInfo formato = new CultureInfo("en-US").NumberFormat;
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";


}
@section styles{

    <style>
        /* Estilo para el botón de cerrar (X) */
        .close {
            position: absolute;
            top: 9%;
            right: 35px;
            color: #f1f1f1;
            font-size: 40px;
            font-weight: bold;
            transition: 0.3s;
            cursor: pointer;
        }

            /* Cambiar el color de la X al pasar el cursor */
            .close:hover,
            .close:focus {
                color: #bbb;
            }

        #menu {
            float: left;
            width: 100%;
            background-color: #fff;
        }

            #menu img {
                width: 12%;
                margin: 2%;
                cursor: pointer;
            }

        #principal {
            float: left;
            width: 75%;
        }

        #visor {
            width: 60%;
            margin: 10%
        }

            #visor img {
                width: 100%
            }



        h4 {
            font-size: 22px !important;
        }

        body {
            margin: 0;
        }

        img {
            border: none;
        }

        button, h1 {
            margin: 0;
            padding: 0;
        }

        #wrapper {
            width: 100%;
        }

        h1 {
            padding: 50px 0;
            text-align: center;
        }



        .preload {
            padding-top: 20px;
            text-align: center;
            display: none;
        }

        .activate-preload {
            display: block;
        }

        #container-input {
            width: 640px;
            margin: 0 auto;
            border: solid 1px #CCC;
            position: relative;
            overflow: hidden;
        }

            #container-input .wrap-file .content-icon-camera {
                width: 55px;
                overflow: hidden;
            }

                #container-input .wrap-file .content-icon-camera:hover {
                    background-color: #e6e6e6;
                }

                #container-input .wrap-file .content-icon-camera .icon-camera {
                    width: 36px;
                    height: 36px;
                    background: url('../../camera.png') no-repeat;
                    cursor: pointer;
                    position: absolute;
                    top: 8px;
                    left: 8px;
                }

                #container-input .wrap-file .content-icon-camera #file {
                    padding: 15px;
                    opacity: 0;
                    position: relative;
                    cursor: pointer;
                    left: -120px;
                    z-index: 1;
                }

            #container-input .wrap-file #preview-images .thumbnail {
                width: 120px;
                height: 120px;
                display: inline-block;
                vertical-align: middle;
                border: solid 2px #CCC;
                background-size: cover;
                position: relative;
            }

                #container-input .wrap-file #preview-images .thumbnail:not(:last-child) {
                    margin-right: 5px;
                }

                #container-input .wrap-file #preview-images .thumbnail .close-button {
                    width: 20px;
                    height: 20px;
                    background-color: black;
                    color: white;
                    text-align: center;
                    position: absolute;
                    top: 5px;
                    right: 5px;
                    border-radius: 100px;
                    cursor: pointer;
                }

            #container-input #publish {
                padding: 15px 35px;
                font-size: 1.1em;
                float: right;
                border: none;
                cursor: pointer;
                background-color: #8ECA67;
                color: #FFF;
            }

                #container-input #publish:hover {
                    background-color: #6EAD45;
                }
    </style>

}

@section scripts{
    @*@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@

    <script>
        $(document).ready(function () {

            jQuery(document).ready(function ($) {
                $(document).ready(function () {
                });
            });
            RecuperarProductosGenerales();
            $("#idTraslado").val("5");
            onChangeTipoMovimiento();
        });


        var ProdCadena = [];
        var ProdCadenaM = [];
        var ErroresP = [];
        var Errores = [];
        var Control = [];
        var ProductosGenerales = [];
        var RepuestosAprobados = [];
        var ProductoPadre = [];


        function onAbrirModalDetallado() {
            try {
                $("#exampleModal").modal("show");
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar abrir el modal ' + e

                })
            }
        }
        function RecuperarProductosGenerales() {
            try
            {
                $.ajax({
                    type: 'GET',
                    dataType: 'json',
                    url: '@Url.Page("Editar", "Productos")',
                    data: {},
                    success: function (result) {

                        if (result == null) {
                            
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Ha ocurrido un error al intentar tomar los productos generales'

                            })

                        } else {
                            console.log(result);
                             for(var i = 0; i < result.length; i++)
                             {
                                 var detalle = {
                                     id: result[i].id,
                                    codSAP: result[i].codSAP,
                                    Cantidad: result[i].cantidad,
                                    Costo: result[i].costo,
                                    Localizacion: result[i].localizacion,
                                    Nombre: result[i].nombre,
                                    Precio: result[i].precio,
                                    Stock: result[i].stock
                                }
                                ProductosGenerales.push(detalle);
                             }
                            Recuperar();

                        }
                    },
                    beforeSend: function () {

                    }
                })
            }catch(e)
            {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
           
        }


        function Recuperar() {
            try {
                ProdCadena = [];
                ProdCadenaM = [];
                ErroresP = [];
                Errores = [];

                var disponibles = JSON.parse($("#HijosDisponibles").val());
                var seleccionados = JSON.parse($("#HijosSeleccionados").val());  //Viene de input
                Errores = JSON.parse($("#Errores").val());
                //ProductosGenerales = JSON.parse($("#ProductosGenerales").val());
                RepuestosAprobados = JSON.parse($("#RepuestosAprobados").val());
                ProductoPadre = JSON.parse($("#ProductoPadre").val());


                Control = JSON.parse($("#Control").val());
                var idError = '@Model.Encabezado.idDiagnostico';

                console.log(disponibles);
                if (disponibles != null) {
                    for (var i = 0; i < disponibles.length; i++) {
                        var detalle = {
                            id: 0,
                            idEncabezado: "",
                            idProducto: disponibles[i].id,
                            ItemCode: disponibles[i].codSAP + " | " + disponibles[i].Nombre,
                            Cantidad: disponibles[i].Cantidad,
                            idError: disponibles[i].idError,
                            Stock: disponibles[i].Stock,
                            Opcional: false

                        };
                        ProdCadena.push(detalle);

                    }
                }

                for (var i = 0; i < seleccionados.length; i++) {
                    var detalle = {
                        id: 0,
                        idEncabezado: "",
                        idProducto: seleccionados[i].idProducto,
                        ItemCode: seleccionados[i].ItemCode,
                        Cantidad: seleccionados[i].Cantidad,
                        idError: seleccionados[i].idError,
                        Stock: seleccionados[i].Stock, 
                        Opcional: seleccionados[i].Opcional



                    };
                    ProdCadenaM.push(detalle);

                }
                if (RepuestosAprobados != null) {
                    for (var i = 0; i < RepuestosAprobados.length; i++) {
                        var valor = RepuestosAprobados[i].ItemCode.split("|")[0].trimEnd();
                        var Prod = ProductosGenerales.find(a => a.codSAP == valor);
                        var detalle = {
                            id: 0,
                            idEncabezado: "",
                            idProducto: Prod.id,
                            ItemCode: RepuestosAprobados[i].ItemCode,
                            Cantidad: RepuestosAprobados[i].Cantidad, 
                            Stock: Prod.Stock,
                            idError: RepuestosAprobados[i].idError,
                            Opcional: RepuestosAprobados[i].Opcional




                        };
                        ProdCadenaM.push(detalle);
                        

                    }
                    RellenaTablaMia2();
                    RellenaTablaM();
                }

                if (parseInt(idError) > 0) {
                    var ErroresTemp = Errores.filter(a => a.idDiagnostico == parseInt(idError));
                    for (var i = 0; i < ErroresTemp.length; i++) {
                        var detalle = {
                            id: ErroresTemp[i].id,
                            idDiagnostico: ErroresTemp[i].idDiagnostico,
                            Descripcion: ErroresTemp[i].Descripcion,
                            Diagnostico: ErroresTemp[i].Diagnostico


                        };
                        ErroresP.push(detalle);

                    }

                }
                $("#rowRepDevolver").hide();
                RellenaTablaG();
                RellenaTablaM();

                if (ProductoPadre.Precio == 0) {
                    //$('#PrecioProductoPadre').prop('readonly', false);
                    Swal.fire({
                        icon: 'warning',
                        title: 'Precio Producto',
                        text: 'El Precio del Producto a Reparar es 0, por lo tanto, se debe investigar para poder calcular el precio contra el total del documento '

                    })
                } else {
                    $('#PrecioProductoPadre').prop('readonly', true);
                }
                $("#PrecioProductoPadre").val(parseFloat(ProductoPadre.Precio));

                if ($("#idDiag").val() != '0') {
                    onChangeDiagnostico();
                }


            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function onChangeDiagnostico() {
            try {

                var idError = $("#idDiag").val();
                ErroresP = [];
                if (parseInt(idError) > 0) {
                    var ErroresTemp = Errores.filter(a => a.idDiagnostico == parseInt(idError));
                    for (var i = 0; i < ErroresTemp.length; i++) {
                        var detalle = {
                            id: ErroresTemp[i].id,
                            idDiagnostico: ErroresTemp[i].idDiagnostico,
                            Descripcion: ErroresTemp[i].Descripcion,
                            Diagnostico: ErroresTemp[i].Diagnostico


                        };
                        ErroresP.push(detalle);

                    }

                }
                
                RellenaTablaG();
                RellenaTablaM();
                RellenaTablaMia2();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e + ' - ' + e.stack

                })
            }

        }

        function InsertarProductoTablaMia(i) {
            try {
                var detalle =
                {
                    id: 0,
                    idEncabezado: "",
                    idProducto: ProdCadena[i].idProducto,
                    ItemCode: ProdCadena[i].ItemCode,
                    Cantidad: ProdCadena[i].Cantidad,
                    Stock: ProdCadena[i].Stock,
                    idError: 0,
                    Opcional: false


                }
                ProdCadenaM.push(detalle);

                ProdCadena.splice(i, 1);
                RellenaTablaM();
                RellenaTablaG();

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e + ' - ' + e.stack

                })
            }

        }

        function InsertarProductoTablaG(i) {
            try {
                var detalle =
                {
                    id: 0,
                    idEncabezado: "",
                    idProducto: ProdCadenaM[i].idProducto,
                    ItemCode: ProdCadenaM[i].ItemCode,
                    Cantidad: ProdCadenaM[i].Cantidad,
                    Stock: ProdCadenaM[i].Stock,
                    Opcional: false

                }
                ProdCadena.push(detalle);

                ProdCadenaM.splice(i, 1);
                RellenaTablaM();
                RellenaTablaG();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }


        }


        function EliminarProductoDevolver(i) {
            try {

                ProdCadenaM.splice(i, 1);
                RellenaTablaRD(false);
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function PasarTodasDerecha() {
            try {
                var tam = ProdCadenaM.length;
                var tam2 = ProdCadena.length;


                for (var i = 0; i < ProdCadena.length; i++) {

                    var detalle =
                    {
                        id: 0,
                        idEncabezado: "",
                        idProducto: ProdCadena[i].idProducto,
                        ItemCode: ProdCadena[i].ItemCode,
                        Cantidad: ProdCadena[i].Cantidad,
                        Stock: ProdCadena[i].Stock,
                        idError: 0,
                        Opcional: false

                    }
                    ProdCadenaM.push(detalle);
                }

                ProdCadena = [];


                RellenaTablaM();
                RellenaTablaG();

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }

        }

        function PasarTodasIzquierda() {
            try {
                var tam = ProdCadena.length;
                var tam2 = ProdCadenaM.length;

                console.log(tam2);
                for (var i = 0; i < tam2; i++) {

                    var detalle =
                    {
                        id: 0,
                        idEncabezado: "",
                        idProducto: ProdCadenaM[i].idProducto,
                        ItemCode: ProdCadenaM[i].ItemCode,
                        Cantidad: ProdCadenaM[i].Cantidad,
                        Stock: ProdCadenaM[i].Stock,
                        Opcional: false

                    }
                    ProdCadena.push(detalle);
                }


                ProdCadenaM = [];


                RellenaTablaM();
                RellenaTablaG();

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function RellenaTablaG() {
            try {
                var sOptions = '';

                $("#tbody1").html('');

                for (var i = 0; i < ProdCadena.length; i++) {
                    sOptions += '<tr>'
                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadena[i].ItemCode + '</p></td>';
                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + formatoDecimal(ProdCadena[i].Cantidad) + '</p></td>';
                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadena[i].Stock + '</p></td>';


                    sOptions += '<td align="center" style="padding-top:15px;"><a  onclick="javascript: InsertarProductoTablaMia(' + i + ')" style="cursor: pointer; font-size: 25px; line-height: 0px;"  title="Pasar Modulo" > > </a></td> ';



                    sOptions += '</tr>'
                }
                $("#tbody1").html(sOptions);

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }
        function GuardarCantidad(i) {
            try {
                ProdCadenaM[i].Cantidad = $("#cantidad-" + i).val();
                CalculaSemaforo();

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e + ' - ' + e.stack

                })
            }
        }
        function GuardarCantidad2(i) {
            try {
                ProdCadenaM[i].Cantidad = $("#cantidad2-" + i).val();
                CalculaSemaforo();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }
        function GuardarCantidadDevolucion(i) {
            try {
                ProdCadenaM[i].Cantidad = $("#cantidadDevuelta-" + i).val();
                CalculaSemaforo();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }
        function ModificaOpcional(i) {
            try {
                var checkbox1 = document.getElementById(i + "check");
                ProdCadenaM[i].Opcional = checkbox1.checked;

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function RellenaTablaM() {
            try {
                CalculaSemaforo();

                var sOptions = '';

                $("#tbody2").html('');

                for (var i = 0; i < ProdCadenaM.length; i++) {
                    sOptions += '<tr>'
                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].ItemCode + '</p></td>';
                    sOptions += '<td align="left" style="padding-top:15px;">  <input id="cantidad-' + i + '" value="' + formatoDecimal(ProdCadenaM[i].Cantidad) + '" onchange="javascript: GuardarCantidad(' + i + ')"  type="number" /> </td>';
                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].Stock + '</p></td>';


                    sOptions += '<td align="left" style="padding-top:15px;">  <select id="error-' + i + '" onchange="javascript: onChangeError(' + i + ')" class="form-control" >  <option value="0">Sin Diagnostico</option> ';
                    for (var a = 0; a < ErroresP.length; a++) {
                        if (ProdCadenaM[i].idError == ErroresP[a].id) {
                            sOptions += '<option value="' + ErroresP[a].id + '" selected>' + ErroresP[a].Descripcion + '</option>';

                        } else {
                            sOptions += '<option value="' + ErroresP[a].id + '">' + ErroresP[a].Descripcion + '</option>';

                        }

                    }

                    sOptions += '</select> </td>';

                    sOptions += '<td align="center" style="padding-top:15px;"><a  onclick="javascript: InsertarProductoTablaG(' + i + ')" style="cursor: pointer; font-size: 25px; line-height: 0px;" title="Pasar Modulo" > < </a> </td>';



                    sOptions += '</tr>'
                }
                $("#tbody2").html(sOptions);

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function RellenaTablaRD(bit) {
            try {
                if (bit) {
                    ProdCadenaM = [];
                    for (var i = 0; i < Control.length; i++) {

                        var detalle =
                        {
                            id: 0,
                            idEncabezado: "",
                            idProducto: Control[i].idProducto,
                            ItemCode: Control[i].Item + " | " + Control[i].ItemName,
                            Cantidad: 1,
                            idError: 0,
                            Stock: Control[i].CantidadUsado

                        }
                        ProdCadenaM.push(detalle);
                    }
                }



                var sOptions = '';

                $("#tbody3").html('');

                for (var i = 0; i < ProdCadenaM.length; i++) {
                    sOptions += '<tr>'
                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].ItemCode + '</p></td>';
                    if (parseInt($("#idTraslado").val()) == 3) {

                        sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">N/A</p></td>';

                    } else {
                        sOptions += '<td align="center" style="padding-top:15px;">  <input id="cantidadDevuelta-' + i + '" onchange="javascript: GuardarCantidadDevolucion(' + i + ')" value="' + formatoDecimal(ProdCadenaM[i].Cantidad) + '"  type="number" /> </td>';

                    }

                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].Stock + '</p></td>';



                    if (parseInt($("#idTraslado").val()) == 3) {
                        sOptions += '<td align="center" style="padding-top:15px;"> </td> ';

                    } else {
                        sOptions += '<td align="center" style="padding-top:15px;"><a  onclick="javascript: EliminarProductoDevolver(' + i + ')" style="cursor: pointer; font-size: 25px; line-height: 0px;" title="Eliminar Producto" > X </a> </td>';

                    }



                    sOptions += '</tr>'
                }
                $("#tbody3").html(sOptions);

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function Generar() {
            try {
                var btn = document.getElementById('Guardar');

                var idGeneral = $("#idGeneral").val();
                var tipo = $("#idTraslado").val();
                var status = $("#status").val();
                var comentarios = $("#comentarios").val();
                var BodegaOrigen = $("#bodegaOrigen").val();
                var BodegaFinal = $("#bodegaFinal").val();
                var idDiag = $("#idDiag").val();

                var Cadena = [];


                for (var i = 0; i < ProdCadenaM.length; i++) {
                    var det = {
                        id: 0,
                        idEncabezado: 0,
                        idProducto: ProdCadenaM[i].idProducto,
                        ItemCode: ProdCadenaM[i].ItemCode,
                        Cantidad: ProdCadenaM[i].Cantidad,//$("#cantidad-" + i).val(),
                        idError: $("#error-" + i).val(),
                        Opcional: ProdCadenaM[i].Opcional

                    };
                    Cadena.push(det);
                }

                var bases64 = [];

                for (var i = 0; i < documentosbase64.length; i++) {
                    var det = {
                        id: 0,
                        idEncabezado: 0,
                        base64: documentosbase64[i].base64

                    };
                    bases64.push(det);
                }


                var recibido =
                {
                    id: idGeneral,
                    Tipo: tipo,
                    Status: status,
                    StatusLlamada: $("#statusLlamada").val(),
                    HorasLlamada: $("#horasLlamada").val(),
                    idLlamada: $("#idLlamada").val(),
                    comentarios: comentarios,
                    BodegaInicial: BodegaOrigen,
                    BodegaFinal: BodegaFinal,
                    idDiagnostico: idDiag,
                    DetReparacion: Cadena,
                    Adjuntos: bases64
                }
                var cantidadAdjuntos = parseFloat("@Model.Encabezado.Adjuntos.Count()");
                if (recibido.StatusLlamada == "48" && documentosbase64.length == 0)
                {
                    throw new Error("Llamada en status POR PROCESAR, debe llevar adjuntos");
                }
                console.log(JSON.stringify(recibido));

                Swal.fire({
                    title: '¿Desea guardar los cambios de esta ' + (tipo == 4 ? 'Cotizacion a BackOffice' : tipo == 1 ? 'Solicitud de Traslado' : tipo == 2 ? 'Devolución': tipo == 0 ? 'Reparacion' : 'Preliminar') + '?',
                    showDenyButton: true,
                    showCancelButton: false,
                    confirmButtonText: `Aceptar`,
                    denyButtonText: `Cancelar`,
                    customClass: {
                        confirmButton: 'swalBtnColor',
                        denyButton: 'swalDeny'
                    },
                }).then((result) => {
                    if (result.isConfirmed) {
                        var recibidos = JSON.stringify(recibido);
                        var jsonString = JSON.stringify(recibido);
                        // Comprimir la cadena JSON utilizando gzip
                        var compressedData = pako.gzip(jsonString);

                        // Convertir los datos comprimidos a un ArrayBuffer (opcional, depende de tu caso de uso)
                        var compressedArrayBuffer = compressedData.buffer;
                        $.ajax({
                            type: 'POST',

                            url: '@Url.Page("Editar", "Generar")',
                            dataType: 'json',
                            contentType: 'application/json',
                            data: compressedArrayBuffer,
                            processData: false,
                          
                            headers: {
                                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                            },
                            success: function (json) {

                                btn.disabled = false;

                                $("#divProcesando").hide();

                                if ($('.modal-backdrop').is(':visible')) {

                                    $('body').removeClass('modal-open');
                                    $('.modal-backdrop').hide();
                                }
                                console.log("resultado " + json.mensaje);
                                if (json.success == true) {
                                    Swal.fire({
                                        title: "Ha sido generado con éxito",

                                        icon: 'success',
                                        showCancelButton: false,

                                        confirmButtonText: 'OK',
                                        customClass: {
                                            confirmButton: 'swalBtnColor',

                                        },
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            if ($("#status").val() == "0") {
                                                location.reload();
                                            } else {
                                                window.location.href = window.location.href.split("/Editar")[0];
                                            }


                                        }
                                    })

                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                    })
                                }
                            },

                            beforeSend: function (xhr) {
                                btn.disabled = true;

                                $("#divProcesando").modal("show");
                            },
                            complete: function () {

                            },
                            error: function (error) {
                                btn.disabled = false;

                            }
                        });
                    }
                }
                )
            } catch (e) {
                btn.disabled = false;

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }




        }

        function onChangeFinal(){
            try{
                var status = $("#status").val();

                if(status == "2" && (parseInt($("#idTraslado").val()) == 4 || parseInt($("#idTraslado").val()) == 1) )
                {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'No se puede cotizar y cerrar al mismo tiempo ' 
                    });
                    $("#status").val("0");
                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function onChangeTipoMovimiento() {
            try {
                onChangeFinal();
                if (parseInt($("#idTraslado").val()) == 0) {
                    $("#rowRepUti").hide();
                    $("#rowRepUtilizados").hide();
                    $("#rowRepDevolver").hide();
                    $("#rowRepAprobados").hide();
                    $("#rowSolicitud2").hide();

                } else if (parseInt($("#idTraslado").val()) == 2 || parseInt($("#idTraslado").val()) == 3 ) {
                    $("#rowRepAprobados").hide();
                    $("#rowSolicitud2").hide();

                    $("#rowRepUti").hide();
                    $("#rowRepUtilizados").hide();
                    $("#rowRepDevolver").show();
                    RellenaTablaRD(true);
                    $("#titleRepDevolver").text("Repuestos a devolver");
                    if (parseInt($("#idTraslado").val()) == 3) {
                        $("#titleRepDevolver").text("Repuestos a cotizar");
                    }


                } else {
                    //Recuperar();
                    $("#rowRepAprobados").hide();
                    if ("@string.IsNullOrEmpty(Roles.Where(a => a == "49").FirstOrDefault())" == "True")//$("#RolSolicitudNuevo").val() != "value")
                    {
                        $("#rowSolicitud2").hide();

                        $("#rowRepUti").show();
                        $("#rowRepUtilizados").show();
                        $("#rowRepDevolver").hide();
                    } else {
                        $("#rowRepUti").hide();
                        $("#rowRepUtilizados").hide();
                        $("#rowRepDevolver").hide();

                        $("#rowSolicitud2").show();

                    }

                    $("#titleRepUti").text("Repuestos Utilizados");

                    if (parseInt($("#idTraslado").val()) == 1 || parseInt($("#idTraslado").val()) == 5) {
                        $("#rowRepAprobados").show();
                    }
                }
                onChangeDiagnostico();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }

        }


        function onChangeProducto() {
            try {
                var valorDigitado = $("#Busqueda").val();
                valorDigitado = valorDigitado.split("_")[0].trim();
                var Prod = ProductosGenerales.find(a => a.codSAP == valorDigitado);
                if (Prod != undefined) {

                    $("#codigoSAPProducto").val(Prod.codSAP);
                    $("#Nombre").text(Prod.Nombre);
                    $("#StockProd").text(Prod.Stock); 
                    $("#cantidad").val(1);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Producto no existe'

                    });
                    $("#codigoSAPProducto").val(0);
                    $("#StockProd").text("");   
                    $("#Nombre").text("");
                    $("#cantidad").val(0);
                }




            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function InsertarProductoTabla() {
            try {
                var valorDigitado = $("#codigoSAPProducto").val();
                var Prod = ProductosGenerales.find(a => a.codSAP == valorDigitado);

                if ($("#idTraslado").val() == "1" && Prod.Stock == 0)
                {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Producto sin stock disponible, debe pasar a cotizacion para poder añadirlo'

                    })
                }else
                {
                    var detalle =
                    {
                        id: 0,
                        idEncabezado: "",
                        idProducto: Prod.id,
                        ItemCode: Prod.codSAP + " | " + Prod.Nombre,
                        Cantidad: $("#cantidad").val(),
                        Stock: Prod.Stock,
                        idError: 0,
                        Opcional: false



                    }
                    ProdCadenaM.push(detalle);
                    RellenaTablaMia2();
                    LimpiarDatosPH();
                }

               
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }
        function RellenaTablaMia2() {
            try {
                CalculaSemaforo();
                var sOptions = '';

                $("#tbodySolicitud2").html('');

                for (var i = 0; i < ProdCadenaM.length; i++) {
                    sOptions += '<tr>'
                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].ItemCode + '</p></td>';
                    sOptions += '<td align="left" style="padding-top:15px;">  <input id="cantidad2-' + i + '" value="' + formatoDecimal(ProdCadenaM[i].Cantidad) + '" onchange="javascript: GuardarCantidad2(' + i + ')"  type="number" /> </td>';
                    sOptions += '<td align="center" style="padding-top:15px;">  <p style="font-size:15px;">' + ProdCadenaM[i].Stock + '</p></td>';


                    sOptions += '<td align="left" style="padding-top:15px;">  <select id="error-' + i + '" class="form-control" onchange="javascript: onChangeError(' + i + ')" >  <option value="0">Sin Diagnostico</option> ';
                    for (var a = 0; a < ErroresP.length; a++) {
                        if (ProdCadenaM[i].idError == ErroresP[a].id) {
                            sOptions += '<option value="' + ErroresP[a].id + '" selected>' + ErroresP[a].Descripcion + '</option>';

                        } else {
                            sOptions += '<option value="' + ErroresP[a].id + '">' + ErroresP[a].Descripcion + '</option>';

                        }

                    }

                    sOptions += '</select> </td>';
                    sOptions += '<td align="center">  <input class="form-check-input" type="checkbox" onclick="javascript: ModificaOpcional(' + i + ')" style="position: unset;" id="' + i + 'check"><span class="form-check-sign"></span> </td>';

                    sOptions += '<td align="center" style="padding-top:15px;"><a  onclick="javascript: EliminaProductoHijo(' + i + ')" style="margin-left: -1%; position: inherit !important;" title="Eliminar Producto" class="btn btn-danger" > X </a> </td>';



                    sOptions += '</tr>'
                }
                $("#tbodySolicitud2").html(sOptions);
                for (var i = 0; i < ProdCadenaM.length; i++) {
                    var checkbox1 = document.getElementById(i + "check");
                    if (ProdCadenaM[i].Opcional) {
                        checkbox1.checked = true;
                    }
                 }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function EliminaProductoHijo(i) {
            try {
                ProdCadenaM.splice(i, 1);
                RellenaTablaMia2();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }
        function LimpiarDatosPH() {
            try {
                $("#Busqueda").val("");
                $("#codigoSAPProducto").val(0);
                $("#StockProd").text(""); 
                $("#Nombre").text("");
                $("#cantidad").val(0);
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }

        function onChangeError(i)
        {
            try{
                ProdCadenaM[i].idError = $("#error-" + i).val();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }
        }
        function DevuelveTotal() {
            try {
                var total = 0;
                for (var i = 0; i < ProdCadenaM.length; i++) {
                    var valorDigitado = ProdCadenaM[i].idProducto;
                    var Prod = ProductosGenerales.find(a => a.id == valorDigitado);
                    total += parseFloat(Prod.Precio) * ProdCadenaM[i].Cantidad;
                }
              
                return total;
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })

            }
        }
        function CalculaSemaforo() {
            try {
                var PrecioMaquina = parseFloat($("#PrecioProductoPadre").val());
                //if ($("#Moneda").val() != "COL") {
                //    PrecioMaquina = PrecioMaquina / Rate;
                //}
                var PrecioTotalDoc = parseFloat(DevuelveTotal());

                var Semaforo = PrecioMaquina != 0 ? (PrecioTotalDoc / PrecioMaquina) * 100 : 0;
                $('#divSemaforo').css('width', Semaforo + '%');
                $('#spanSemaforo').text(Semaforo.toFixed(0) + '%');

                if (Semaforo > 0 && Semaforo < 40) {
                    $('#divSemaforo').attr('class', 'progress-bar bg-success');
                    $('#spanSemaforo').attr('class', 'badge bg-success');


                } else if (Semaforo > 40 && Semaforo < 80) {
                    $('#divSemaforo').attr('class', 'progress-bar bg-warning');
                    $('#spanSemaforo').attr('class', 'badge bg-warning');

                } else {
                    $('#divSemaforo').attr('class', 'progress-bar bg-danger');
                    $('#spanSemaforo').attr('class', 'badge bg-danger');

                }

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })

            }
        }
    </script>
    <script type="text/javascript">
        var file = document.getElementById('file');
        var preload = document.querySelector('.preload');

        var formData = new FormData();
        var documentosbase64 = [];

        function resizedataURL(datas, wantedWidth, wantedHeight) {

            return new Promise((resolve, reject) => {
                // We create an image to receive the Data URI
                var img = document.createElement('img');
                var retornar = "";
                // We put the Data URI in the image's src attribute
                img.src = datas;
                // When the event "onload" is triggered we can resize the image.
                img.onload = function () {

                    var height = this.height;
                    var width = this.width;

                    if (height > wantedHeight && width > wantedWidth) {
                        while (height > wantedHeight) {

                            height = height - 100;
                        }
                        while (width > wantedWidth) {
                            width = width - 100;
                        }
                        // We create a canvas and get its context.
                        var canvas = document.createElement('canvas');
                        var ctx = canvas.getContext('2d');

                        // We set the dimensions at the wanted size.
                        canvas.width = width;
                        canvas.height = height;

                        // We resize the image with the canvas method drawImage();
                        ctx.drawImage(this, 0, 0, width, height);

                        var dataURI = canvas.toDataURL();
                        retornar = dataURI;
                        resolve(retornar);
                    } else {
                        resolve(datas);
                    }


                };
            })






        }

        function getBase642(event, id) {
            var input = event.target;

            var reader = new FileReader();
            reader.onload = function () {
                var dataURL = reader.result;

                var imgResized = "";

                resizedataURL(dataURL, 600, 600).then((resized) => {
                    imgResized = resized;
                    var detalle = {
                        id: id,
                        base64: imgResized//dataURL
                    }
                    documentosbase64.push(detalle);
                });


            };
            reader.readAsDataURL(input.files[0]);
        }

        function eliminar(id) {
            documentosbase64.splice(documentosbase64.indexOf(documentosbase64.find(a => a.id == id)), 1)
        }

        file.addEventListener('change', function (e) {

            for (var i = 0; i < file.files.length; i++) {
                var thumbnail_id = Math.floor(Math.random() * 30000) + '_' + Date.now();
                createThumbnail(file, i, thumbnail_id);
                formData.append(thumbnail_id, file.files[i]);
            }
            getBase642(e, thumbnail_id);
            e.target.value = '';

        });



        var createThumbnail = function (file, iterator, thumbnail_id) {
            var thumbnail = document.createElement('div');
            thumbnail.classList.add('thumbnail', thumbnail_id);
            thumbnail.dataset.id = thumbnail_id;

            thumbnail.setAttribute('style', `background-image: url(${URL.createObjectURL(file.files[iterator])})`);
            document.getElementById('preview-images').appendChild(thumbnail);
            createCloseButton(thumbnail_id);
        }

        var createCloseButton = function (thumbnail_id) {
            var closeButton = document.createElement('div');
            closeButton.classList.add('close-button');
            closeButton.innerText = 'x';
            document.getElementsByClassName(thumbnail_id)[0].appendChild(closeButton);
        }

        var clearFormDataAndThumbnails = function () {
            for (var key of formData.keys()) {
                formData.delete(key);
            }

            document.querySelectorAll('.thumbnail').forEach(function (thumbnail) {
                thumbnail.remove();
            });
        }


        document.body.addEventListener('click', function (e) {
            if (e.target.classList.contains('close-button')) {
                e.target.parentNode.remove();
                formData.delete(e.target.parentNode.dataset.id);
                eliminar(e.target.parentNode.dataset.id);

            }
        });


    </script>
    <script>
        // Get the modal
        var modal = document.getElementById('myModal');


        // Get the image and insert it inside the modal - use its "alt" text as a caption
        //   var img = document.getElementById('myImg');
        var modalImg = document.getElementById("img01");
        //var captionText = document.getElementById("caption");
        function onclickImage(id) {
            modal.style.display = "block";
            modalImg.src = $("#" + id).attr('src');

        }

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }
    </script>

    <script>
        function enviarActividadSAP(id) {
            try {
                var modale = $("#divProcesando");
                $.ajax({
                    type: 'GET',

                    url: '@Url.Page("Editar", "EnviarActividadSAP")',
                    dataType: 'json',
                    data: { idB: id },
                    headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (json) {

                        modale.modal("hide");
                        $('body').removeClass('modal-open');//eliminamos la clase del body para poder hacer scroll
                        $('.modal-backdrop').remove();//eliminamos el backdrop del modal


                        console.log(json);
                        if (json.procesadaSAP) {
                            Swal.fire({
                                title: "Ha sido enviado con éxito",

                                icon: 'success',
                                showCancelButton: false,
                                customClass: {
                                    confirmButton: 'swalBtnColor',

                                },
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Ha ocurrido un error al intentar enviar a SAP, revisa la bitacora de errores'

                            })
                        }


                    },

                    beforeSend: function (xhr) {
                        modale.modal("show");
                    },
                    complete: function () {
                        modale.modal("hide");

                    },
                    error: function (error) {
                        modale.modal("hide");
                    }
                });
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }

        }

        var btn = document.getElementById('Guardar');

        function onclickModal() {
            $('#modal-xl').modal('show');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }

        function ValidaForm(recibido1) {
            if (recibido1.idLlamada == undefined || recibido1.idLlamada == "") {
                return false;
            } else if (recibido1.Detalle == undefined || recibido1.Detalle == "") {
                return false;

            }




            return true;

        }

        function onGuardar() {
            try {
                btn.disabled = true;


                var recibido1 =
                {
                    id: 0,
                    idLlamada: $("#idLlamadaActividad").val(),
                    TipoActividad: $("#tipoActividad").val(),
                    Detalle: $("#Detalle").val(),

                }

                if (!ValidaForm(recibido1)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Faltan datos por rellenar '

                    })
                } else {
                    Swal.fire({
                        title: '¿Desea guardar los cambios?',
                        showDenyButton: true,
                        showCancelButton: false,
                        confirmButtonText: `Aceptar`,
                        denyButtonText: `Cancelar`,
                        customClass: {
                            confirmButton: 'swalBtnColor',
                            denyButton: 'swalDeny'
                        },
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var recibidos = recibido1;

                            $.ajax({
                                type: 'POST',

                                url: '@Url.Page("Editar", "GenerarActividad")',
                                dataType: 'json',
                                data: { recibido: recibidos },
                                headers: {
                                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                },
                                success: function (json) {

                                    $("#divProcesando").hide();

                                    if ($('.modal-backdrop').is(':visible')) {

                                        $('body').removeClass('modal-open');
                                        $('.modal-backdrop').hide();
                                    }
                                    console.log("resultado " + json.mensaje);
                                    if (json.success == true) {
                                        Swal.fire({
                                            title: "Ha sido generado con éxito",

                                            icon: 'success',
                                            showCancelButton: false,

                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swalBtnColor',

                                            },
                                        }).then((result) => {
                                            if (result.isConfirmed) {

                                                location.reload();
                                            }
                                        })

                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                        })
                                    }
                                },

                                beforeSend: function (xhr) {

                                    $("#divProcesando").modal("show");
                                },
                                complete: function () {
                                    $("#divProcesando").modal("hide");

                                },
                                error: function (error) {
                                    $("#divProcesando").modal("hide");

                                    btn.disabled = false;

                                }
                            });
                        } else {
                            $("#divProcesando").modal("hide");

                            btn.disabled = false;
                        }
                    }
                    )
                }


                btn.disabled = false;
            } catch (e) {
                $("#divProcesando").modal("hide");

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar guardar ' + e

                })
                btn.disabled = false;

            }



        }

    </script>

}

<form method="post" id="formTipos" role="form" novalidate class="needs-validation " enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5 class="title">Editar Repuestos</h5>

                        </div>

                        <div class="col-sm-6" style="text-align: right">

                            <a asp-page="./Index" class="nav-link text-dark" style="text-decoration: underline;"><i class="fas fa-reply "></i>  Regresar</a>

                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <input hidden id="HijosDisponibles" value="@JsonConvert.SerializeObject(Model.InputHijos)" />
                    <input hidden id="RepuestosAprobados" value="@JsonConvert.SerializeObject(Model.CotizacionesAprobadas)" />

                    <input hidden id="HijosSeleccionados" value="@JsonConvert.SerializeObject(Model.Input)" />
                    <input hidden id="Errores" value="@JsonConvert.SerializeObject(Model.Errores)" />
                    <input hidden id="Control" value="@JsonConvert.SerializeObject(Model.Control)" />
                    <input hidden id="ProductosGenerales" value="@JsonConvert.SerializeObject(Model.ProductosGenerales.Select(a => new {a.id, a.codSAP, a.Precio, a.Stock, a.Nombre}))" />
                    <input hidden id="ProductoPadre" value="@JsonConvert.SerializeObject(Model.ProductoPadre)" />
                    <input id="PrecioProductoPadre" hidden type="number"  class="form-control" onchange="javascript: CalculaSemaforo()" />

                    <input hidden id="RolSolicitudNuevo" value="@string.IsNullOrEmpty(Roles.Where(a => a == "49").FirstOrDefault())" />



                    <div class="row">
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Llamada</label>
                                <input type="text" class="form-control form-control-lg" id="idLlamada" asp-for="Encabezado.idLlamada" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Producto</label>
                                <input type="text" class="form-control form-control-lg" id="desc" asp-for="Producto" readonly>
                                <input id="idGeneral" asp-for="Encabezado.id" hidden />
                            </div>


                        </div>
                        <div class="col-md-4 pl-1">

                            <div class="form-group">
                                <label>Serie</label>
                                <input type="text" class="form-control form-control-lg" id="desc" asp-for="InputLlamada.SerieFabricante" readonly> 
                            </div>


                        </div>

                        <div class="col-md-6 pr-1">

                            <div class="form-group">
                                <label>Cliente</label>
                                <input type="text" class="form-control form-control-lg" id="desc" asp-for="Cliente" readonly>

                            </div>


                        </div>

                        <div class="col-md-6 pl-1">

                            <div class="form-group">
                                <label>Asunto de la Llamada</label>
                                <input class="form-control" asp-for="InputLlamada.Asunto" readonly />

                            </div>


                        </div>



                        
                       
                    
                        <div class="col-md-3 pr-1">

                            <div class="form-group">
                                <label>Diagnóstico</label>
                                <select id="idDiag" class="form-control" asp-for="Encabezado.idDiagnostico" onchange="javascript: onChangeDiagnostico();">
                                    <option value="0" selected>Seleccione</option>

                                    @foreach (var item in Model.Diagnosticos)
                                    {

                                        <option value="@item.id"> @item.id - @item.Descripcion </option>
                                    }





                                </select>

                            </div>


                        </div>
                        <div class="col-md-3 pr-1">

                            <div class="form-group">
                                <label>Ubicación Producto</label>
                                <input type="text" class="form-control form-control-lg" id="desc" asp-for="UbicacionProd" readonly>
                            </div>


                        </div>
                        

                        <div class="col-md-3 pr-1">

                            <div class="form-group">
                                <label>Tipo de Caso</label>
                                <select id="tp" class="form-control" asp-for="InputLlamada.TipoCaso" disabled="disabled">

                                    @foreach (var item in Model.TP)
                                    {
                                        <option value="@item.idSAP">@item.Nombre</option>
                                    }
                                </select>

                            </div>


                        </div>
                        <div class="col-md-3 pl-1">

                            <div class="form-group">
                                <label>Fecha SISO</label>
                                <input type="datetime" class="form-control" asp-for="InputLlamada.FechaSISO" readonly />


                            </div>


                        </div>
                       
                    </div>





                </div>
            </div>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(Roles.Where(a => a == "56").FirstOrDefault()))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-sm-6">
                                <h5 class="title">Histórico de Llamada</h5>
                            </div>

                            <div class="col-sm-6" style="text-align: right">
                            </div>
                        </div>


                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label># Factura de Venta:</label>
                                    <input type="text" class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Factura" readonly>

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Fecha de Venta:</label>
                                    <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Fecha_Factura" readonly>

                                </div>
                            </div>
                           
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Inversión en Reparaciones:</label>
                                    <br>
                                    <label><b>@Model.Historico.Historico.FirstOrDefault().Total_Revisiones.ToString("N", formato)</b></label>

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Fecha Ult. Revisión:</label>
                                    <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().fecha_Ultima_Rev" readonly>

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Total de Revisiones:</label>
                                    <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Cantidad_Revisiones" readonly>

                                </div>
                            </div>

                          @*   <div class="col-md-4">
                                <div class="form-group">
                                    <label>Ult. Técnico:</label>
                                    <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Ultimo_Tecnico" readonly>

                                </div>
                            </div> *@

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Horas Actuales:</label>
                                    <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Horas" readonly>

                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group">
                                    <label>Observaciones Ult. Reparación:</label>
                                    <textarea class="form-control form-control-lg" asp-for="Historico.Historico.FirstOrDefault().Obse_Ultima_Repara" readonly> </textarea>

                                </div>
                                <a href="#" onclick="javascript: onAbrirModalDetallado() ">Ver más detallado</a>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Histórico Llamada Detallado</h5>

                    </div>
                    <div class="modal-body">
                        @{
                            var i = 0;
                        }
                        <div style=" overflow-y:scroll;    z-index: 5; height: 500px;">
                            <div class="panel-group" id="accordion">
                                @foreach (var item in Model.HistoricoDetallado.Historico.OrderBy(a => a.Fecha).GroupBy(a => a.Boleta))
                                {
                                    i++;
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a data-toggle="collapse" href="#collapse@(i)">Boleta # @item.Key</a>
                                            </h4>
                                        </div>
                                        <div id="collapse@(i)" class="panel-collapse collapse in">
                                            <div class="panel-body">

                                                @foreach (var item3 in item.GroupBy(a => a.DocEntryEntrega))
                                                {
                                                    <table style="width: 100%;">
                                                        <thead>
                                                            <tr>
                                                                <th align="center">Orden</th>
                                                                <th align="center">Fecha</th>
                                                                <th align="center">Artículos</th>
                                                                <th align="center">Descripción</th>
                                                                <th align="center">Garantía</th>
                                                                <th align="center">Facturado</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr id="contenido(@i)">
                                                                <td align="center">
                                                                    @item3.Key
                                                                </td>
                                                                <td align="center">@item3.FirstOrDefault().Fecha.ToString("dd/MM/yyyy")</td>
                                                                <td>
                                                                    <table style="width: 100%;">
                                                                        @foreach (var item2 in item3)
                                                                        {
                                                                            <tr>
                                                                                <td align="left">@item2.Articulo</td>


                                                                            </tr>
                                                                        }

                                                                    </table>
                                                                </td>
                                                                <td>

                                                                    <table style="width: 100%;">
                                                                        @foreach (var item2 in item3)
                                                                        {
                                                                            <tr>
                                                                                <td align="left">@item2.Descripcion</td>



                                                                            </tr>
                                                                        }

                                                                    </table>
                                                                </td>

                                                                <td>

                                                                    <table style="width: 100%;">
                                                                        @foreach (var item2 in item3)
                                                                        {
                                                                            <tr>
                                                                                <td align="right">@item2.Garantia.ToString("N",formato)</td>



                                                                            </tr>
                                                                        }

                                                                    </table>
                                                                </td>

                                                                <td>

                                                                    <table style="width: 100%;">
                                                                        @foreach (var item2 in item3)
                                                                        {
                                                                            <tr>
                                                                                <td align="right">@item2.Facturado.ToString("N",formato)</td>



                                                                            </tr>
                                                                        }

                                                                    </table>
                                                                </td>

                                                            </tr>
                                                            <tr>
                                                                <td colspan="4" align="center"><b>Total Boleta</b></td>
                                                                <td align="right">@item3.Sum(a => a.Garantia).ToString("N",formato)</td>
                                                                <td align="right">@item3.Sum(a => a.Facturado).ToString("N",formato)</td>

                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                }



                                            </div>
                                        </div>
                                    </div>

                                }
                            </div>
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#collapse0">Gran Total</a>
                                    </h4>
                                </div>
                                <div id="collapse0" class="panel-collapse collapse in show">
                                    <div class="panel-body">
                                        <table style="width: 100%;">
                                            <thead>
                                                <tr>
                                                    <th align="center"></th>
                                                    <th align="center"></th>
                                                    <th align="center"></th>
                                                    <th align="center"></th>
                                                    <th align="center">Garantía</th>
                                                    <th align="center">Facturado</th>

                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td colspan="4" style="text-align: center;"><b>Gran Total</b></td>
                                                    <td style="text-align: right;">@Model.HistoricoDetallado.Historico.Sum(a => a.Garantia).ToString("N",formato)</td>
                                                    <td style="text-align: right;">@Model.HistoricoDetallado.Historico.Sum(a => a.Facturado).ToString("N",formato)</td>

                                                </tr>
                                            </tbody>

                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>

                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-4">
                            <h5 class="title">Generar Movimiento</h5>

                        </div>

                        
                        
                    </div>
                </div>
                <div class="card-body">

                    <div class="row">



                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Tipo de Reparación</label>
                                <select id="idTraslado" class="form-control" asp-for="Encabezado.TipoReparacion" onchange="javascript: onChangeTipoMovimiento();">
                                    <option value="0">0-Reparado </option>
                                    <option value="5">1- Preliminar </option>
                                    <option value="4">2- Cotizar BackOffice </option>

                                    <option value="1">3- Solicitud </option>
                                    <option value="2">4- Devolución </option>
                                  @*  <option value="3">4- Cotizar </option>*@



                                </select>

                            </div>


                        </div>
                        <div class="col-md-3 pr-1">

                            <div class="form-group">
                                <label>Estado de la Reparación</label>
                                <select id="status" class="form-control" asp-for="Encabezado.Status" onchange="javascript: onChangeFinal()">
                                    <option value="0" selected>Abierto</option>


                                    @* <option value="1">Cerrado </option>*@
                                    <option value="2">Cerrado y Reparado </option>



                                </select>

                            </div>


                        </div>
                        <div class="col-md-3 pr-1">
                            <div class="form-group">
                                <label>Estado de la Llamada:</label>
                                <input asp-for="InputLlamada.id" id="idLlamada" hidden />
                                <select id="statusLlamada" class="form-control" asp-for="InputLlamada.Status" required>
                                    <option value="0">Seleccione</option>
                                    @foreach (var item in Model.Status.Where(a => a.idSAP == "-3" || a.idSAP == "47" || a.idSAP == "46" || a.idSAP == "48" || a.idSAP == "56"))
                                    {
                                        <option value="@item.idSAP">@item.Nombre</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2 pl-1">
                            <div class="form-group">
                                <label>Horas:</label>
                                <input type="number" min="0" step="1" class="form-control" asp-for="InputLlamada.Horas" id="horasLlamada" required />
                                 
                            </div>
                        </div>

                        <div class="col-md-4 pr-1" hidden>

                            <div class="form-group">
                                <label>Bodega Origen</label>
                                <select id="bodegaOrigen" class="form-control" asp-for="Encabezado.BodegaOrigen">
                                    <option value="0" selected>Seleccione</option>

                                    @foreach (var item in Model.Bodegas)
                                    {

                                        <option value="@item.codSAP"> @item.codSAP - @item.Nombre </option>
                                    }




                                </select>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1" hidden>

                            <div class="form-group">
                                <label>Bodega Destino</label>
                                <select id="bodegaFinal" class="form-control" asp-for="Encabezado.BodegaFinal">
                                    <option value="0" selected>Seleccione</option>


                                    @foreach (var item in Model.Bodegas)
                                    {

                                        <option value="@item.codSAP"> @item.codSAP - @item.Nombre </option>
                                    }



                                </select>

                            </div>


                        </div>

                    </div>


                </div>
            </div>
        </div>
    </div>

    <!--Empieza el sector de Generar movimiento, solicitud y devolucion-->

    <div class="row">

        <div id="rowRepAprobados" class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title" id="titleRepAprob"> Repuestos Aprobados</h5>
                        </div>

                        <div class="col-sm-4" style="text-align: right;">
                           
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad Aprobada</th>


                                </tr>

                            </thead>
                            <tbody id="tbody4">
                                @foreach (var item in Model.CotizacionesAprobadas)
                                {
                                    <tr>
                                        <td align="center">@item.ItemCode</td>
                                        <td align="right">@item.Cantidad.ToString("N",formato)</td>

                                    </tr>
                                }

                            </tbody>
                        </table>

                    </div>



                </div>
            </div>
        </div>

        <div id="rowSolicitud2" class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title" id=""> Repuestos a Solicitar</h5>
                        </div>

                        <div class="col-sm-4" style="text-align: right;">
                            <span id="spanSemaforo" style="font-weight: bold; color: white;" class="badge bg-success">0%</span>

                            <div class="progress progress-xs progress-striped active">
                                <div id="divSemaforo" class="progress-bar bg-success" style="width: 1%"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <label class="col-form-label">Seleccionar Repuesto:</label>
                    <div class="form-group row">


                        <label id="id" hidden style="line-height: 32px;">
                        </label>
                        <div class="col-sm-6">
                            <input id="Busqueda" list="prodHijos" class="form-control" type="text" />
                            <datalist id="prodHijos">
                                @foreach (var item in Model.ProductosGenerales.ToList())
                                {
                                    <option value="@item.codSAP _ @item.Nombre "> @item.codSAP - @item.Nombre </option>
                                }
                            </datalist>

                        </div>
                        <div class="col-sm-3">

                            <button title="Buscar" type="button" class="btn btn btn-primary" onclick="javascript: onChangeProducto();"> <i class="fa fa-search"></i></button>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-sm-3">

                            <div class="form-group row">
                                <input hidden id="codigoSAPProducto" />
                                <div class="col-sm-12">
                                    <label class="col-form-label">Nombre:</label>
                                </div>
                                <div class="col-sm-12">
                                    <label id="Nombre" style="line-height: 32px;">
                                    </label>

                                </div>
                            </div>




                        </div>
                        <div class="col-sm-3">

                            <div class="form-group row"> 
                                <div class="col-sm-12">
                                    <label class="col-form-label">Stock:</label>
                                </div>
                                <div class="col-sm-12">
                                    <label id="StockProd" style="line-height: 32px;">
                                    </label>

                                </div>
                            </div>




                        </div>
                        <div class="col-sm-3">
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <label class="col-form-label">Cantidad:</label>
                                </div>
                                <div class="col-sm-12">
                                    <input id="cantidad" class="form-control" type="number" step="1" />


                                </div>
                            </div>
                        </div>


                        <div class="col-sm-3" style="text-align: center;">

                            <a title="Agregar" id="Agregar" onclick="javascript: InsertarProductoTabla();" style=" color: #fff; width: 25%;" class="btn btn-rounded btn-primary">+</a>
                        </div>


                    </div>
                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad </th>
                                    <th align="center" style=" text-align: center;">Stock </th>
                                    <th align="center" style=" text-align: center;">Diagnostico </th>
                                    <th align="center" style=" text-align: center;">Opcional </th>





                                    <th align="center" style=" text-align: center;">Acción</th>
                                </tr>

                            </thead>
                            <tbody id="tbodySolicitud2">
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>

        </div>
        <div class="col-md-12" id="rowRepUti">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title"> Repuestos Utilizables</h5>
                        </div>

                        <div class="col-sm-3">
                            <a onclick="javascript: PasarTodasDerecha()" style="cursor: pointer; font-size: 25px; line-height: 0px;" title="Pasar Todos los Modulos"> >> </a>
                        </div>


                    </div>
                </div>
                <div class="card-body">

                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad </th>
                                    <th align="center" style=" text-align: center;">Stock </th>





                                    <th align="center" style=" text-align: center;">Acción</th>
                                </tr>

                            </thead>
                            <tbody id="tbody1">
                            </tbody>
                        </table>

                    </div>


                </div>
            </div>
        </div>

        <div id="rowRepUtilizados" class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title" id="titleRepUti"> Repuestos utilizados</h5>
                        </div>

                        <div class="col-sm-4" style="text-align: right;">
                            <a onclick="javascript: PasarTodasIzquierda()" style="cursor: pointer; font-size: 25px; line-height: 0px;" title="Pasar Todos los Modulos"><<</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad </th>
                                    <th align="center" style=" text-align: center;">Stock </th>
                                    <th align="center" style=" text-align: center;">Diagnostico </th>





                                    <th align="center" style=" text-align: center;">Acción</th>
                                </tr>

                            </thead>
                            <tbody id="tbody2">
                            </tbody>
                        </table>

                    </div>



                </div>
            </div>
        </div>

        <div id="rowRepDevolver" class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-8">

                            <h5 class="title" id="titleRepDevolver"> Repuestos a Devolver</h5>
                        </div>

                        <div class="col-sm-4" style="text-align: right;">
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive tableFixHead" style="padding:inherit; overflow:scroll;    z-index: 5; height: 290px;">
                        <table class="table table-striped">
                            <thead>
                                <tr>

                                    <th align="center" style=" text-align: center;">Item</th>
                                    <th align="center" style=" text-align: center;">Cantidad Devuelta</th>
                                    <th align="center" style=" text-align: center;">Cantidad Pedida </th>






                                    <th align="center" style=" text-align: center;">Acción</th>
                                </tr>

                            </thead>
                            <tbody id="tbody3">
                            </tbody>
                        </table>

                    </div>



                </div>
            </div>
        </div>





        <div class="col-sm-6">
            <div class="form-group">
                <label>Comentarios</label>

                <textarea id="comentarios" maxlength="2000" class="form-control" asp-for="Encabezado.Comentarios"></textarea>

            </div>
        </div>

        <div class="col-sm-6">
            <div class="form-group">
                <label>Comentarios Llamada</label>

                <textarea id="comentariosLlamada" readonly disabled maxlength="500" class="form-control" asp-for="InputLlamada.Comentarios"></textarea>

            </div>
        </div>
    </div>

    <!--Termina el sector de Generar movimiento, solicitud y devolucion-->



    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-8">
                            <h5>Movimientos</h5>
                        </div>
                        <div class="col-md-4">
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered first">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>DocEntry</th>

                                    <th>Tipo Movimiento</th>
                                    <th>Fecha</th>
                                    <th>Bodega Inicial</th>
                                    <th>Bodega Final</th>
                                    <th>Status</th>



                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.BTS)
                                {
                                    <tr>
                                        <td>@item.id</td>
                                        <td>@item.DocEntry</td>

                                        <td>@(item.TipoMovimiento == 1 ? "Solicitud" : "Devolución")</td>
                                        <td>@item.Fecha</td>
                                        <td>@item.BodegaInicial</td>
                                        <td>@item.BodegaFinal</td>
                                        <td>@((item.Status == "0" ? "En espera" : item.Status == "1" ? "Entregado al tecnico" : item.Status == "2" ? "Rechazado" : "Apartado y Trasladado"))</td>

                                    </tr>
                                }


                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>ID</th>
                                    <th>DocEntry</th>

                                    <th>Tipo Movimiento</th>
                                    <th>Fecha</th>
                                    <th>Bodega Inicial</th>
                                    <th>Bodega Final</th>
                                    <th>Status</th>

                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5 class="title">Subir Imágenes</h5>

                        </div>

                        <div class="col-sm-6" style="text-align: right">
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <div id="wrapper">

                        <div id="container-input">
                            <div class="wrap-file">
                                <div class="content-icon-camera">
                                    <input type="file" id="file" name="file[]" accept="image/*" multiple />
                                    <div class="icon-camera"></div>
                                </div>
                                <div id="preview-images">
                                </div>
                            </div>

                        </div>
                        <div class="preload">
                            <img src="assets/images/preload.gif" alt="preload" />
                        </div>
                        <h2 id="success"></h2>
                    </div>
                </div>
            </div>
        </div>

    </div>



    <div class="row">
        <div class="col-sm-12">
            <div class="card">

                <div class="card-body">

                    <div id="menu">
                        @foreach (var item in Model.Encabezado.Adjuntos)
                        {
                            <img src='data:image/png;base64,@item.base64' id="@item.id" name='fotos1' onclick="javascript: onclickImage(@item.id)" />

                        }



                    </div>
                </div>
            </div>
        </div>

    </div>

    <button type="button" onclick="javascript: Generar();" id="Guardar" class="btn btn-rounded btn-outline-success">Guardar Cambios</button>
</form>



<!-- The Modal -->
<div id="myModal" class="modal">
    <span class="close">×</span>
    <img class="modal-content" id="img01">

</div>
<br />
<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-6">
                        <h5>Listado de Actividades de la llamada # @Model.InputLlamada.DocEntry</h5>
                    </div>
                    <div class="col-md-4">
                        <a class="btn btn-rounded btn-outline-primary" title="Agregar" onclick="javascript: onclickModal()">+  Agregar</a>

                        <input hidden id="idLlamadaActividad" asp-for="InputLlamada.id" />
                    </div>
                    
                </div>
            </div>

            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered first">
                        <thead>
                            <tr>
                                <th>No. Actividad</th>
                                <th>Tipo</th>
                                <th>Fecha Creación</th>
                                <th>Usuario Creador</th>

                                <th>Detalle</th>
                                <th>Acción</th>



                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Actividades)
                            {
                                <tr>
                                    <td>@item.DocEntry</td>

                                    @{
                                        switch (item.TipoActividad)
                                        {
                                            case 1:
                                                {
                                                            <td> Llamada Telefónica</td>

                                                    break;
                                                }
                                            case 2:
                                                {
                                                            <td> Reunión</td>

                                                    break;
                                                }
                                            case 3:
                                                {
                                                            <td> Tarea</td>

                                                    break;
                                                }
                                            case 4:
                                                {
                                                            <td>Nota</td>

                                                    break;
                                                }
                                            case 5:
                                                {
                                                            <td> Campaña</td>

                                                    break;
                                                }
                                            case 6:
                                                {
                                                            <td> Otros</td>

                                                    break;
                                                }

                                        }
                                    }


                                    <td>

                                        @item.FechaCreacion
                                    </td>
                                    @{
                                        var cardCode = item.idLogin;
                                    }
                                    <td>@(Model.Usuarios.Where(a => a.id == cardCode).FirstOrDefault() == null ? "" : Model.Usuarios.Where(a => a.id == cardCode).FirstOrDefault().Nombre) </td>

                                    <td>@item.Detalle </td>
                                    <td>

                                        @if (!item.ProcesadaSAP)
                                        {

                                            <a onclick="javascript: enviarActividadSAP('@item.id')" title="Enviar a SAP"> <img src="~/sap.png" style="width: 20%;height: 25%;border-radius: 30%; cursor: pointer;" /></a>
                                        }&nbsp;
                                    </td>
                                </tr>
                            }


                        </tbody>
                        <tfoot>
                            <tr>
                                <th>No. Actividad</th>
                                <th>Tipo</th>
                                <th>Fecha Creación</th>
                                <th>Usuario Creador</th>

                                <th>Detalle</th>
                                <th>Acción</th>

                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="modal-xl">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Agregar Actividad</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Tipo de Actividad:</label>
                            <select id="tipoActividad" class="form-control"  required>
                                <option value="1">Llamada Telefónica</option>
                                <option value="2">Reunión</option>
                                <option value="3">Tarea</option>
                                <option value="4">Nota</option>
                                <option value="5">Campaña</option>
                                <option value="6">Otros</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label> Detalle:</label>
                            <input type="text" class="form-control form-control-lg" id="Detalle" placeholder="Detalle Actividad">

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                <button type="button" id="Guardar" onclick="javascript: onGuardar()" class="btn btn-primary">Guardar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
