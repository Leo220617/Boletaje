@page "{id}"
@model Boletaje.Pages.PlanificadorDiario.ObservarModel
@{
    ViewData["Title"] = "Observar Llamada / Planificador";
}
@section breadcrumb {

    <li class="breadcrumb-item">
        <a asp-page="./Index">BackOffice</a>
    </li>
    <li class="breadcrumb-item active">
        <a>Observar Llamada / Planificador</a>
    </li>

}
@using Newtonsoft.Json;
@section styles {
    <style>
        .input {
            width: 40%;
        }

        .input2 {
            width: 70%;
        }
    </style>

}
@section scripts {
    <script>
        function obtenerFechaActual() {
            const fecha = new Date();
            const anio = fecha.getFullYear();
            const mes = String(fecha.getMonth() + 1).padStart(2, '0'); // Los meses son 0-11
            const dia = String(fecha.getDate()).padStart(2, '0');

            return `${anio}-${mes}-${dia}`;
        }

        function check() {
            var checkbox1 = document.getElementById("check1");

            if (checkbox1.checked == true) {

                $("#fechaProximoContacto").attr("readonly", true);
                $("#fechaProximoContacto").val("");

            } else {

                $("#fechaProximoContacto").attr("readonly", false);
            }

        }
        function Generar(generar) {
            try {
                var btn = document.getElementById('Guardar');
                var checkbox1 = document.getElementById("check1");
                btn.disabled = true;
                var recibido =
                {

                    idLlamada: $("#idLlamada").val(),
                    StatusLlamada: $("#statusLlamada").val(),
                    TipoCaso: $("#tipoCaso").val(),
                    Fecha: checkbox1.checked ? obtenerFechaActual() : $("#fechaProximoContacto").val(),
                    BorrarFechaProximoContacto: checkbox1.checked
                }

                Swal.fire({
                    title: '¿Desea guardar los cambios?',
                    showDenyButton: true,
                    showCancelButton: false,
                    confirmButtonText: `Aceptar`,
                    denyButtonText: `Cancelar`,
                    customClass: {
                        confirmButton: 'swalBtnColor',
                        denyButton: 'swalDeny'
                    },
                }).then((result) => {
                    if (result.isConfirmed) {
                        var recibidos = JSON.stringify(recibido);
                        var jsonString = JSON.stringify(recibido);
                        // Comprimir la cadena JSON utilizando gzip
                        var compressedData = pako.gzip(jsonString);

                        // Convertir los datos comprimidos a un ArrayBuffer (opcional, depende de tu caso de uso)
                        var compressedArrayBuffer = compressedData.buffer;

                        $.ajax({
                            type: 'POST',

                            url: '@Url.Page("Observar", "Generar")',
                            dataType: 'json',
                            contentType: 'application/json',
                            data: compressedArrayBuffer,
                            processData: false,
                            headers: {
                                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                            },
                            success: function (json) {

                                $("#divProcesando").hide();

                                if ($('.modal-backdrop').is(':visible')) {

                                    $('body').removeClass('modal-open');
                                    $('.modal-backdrop').hide();
                                }
                                console.log("resultado " + json.mensaje);
                                if (json.success == true) {
                                    Swal.fire({
                                        title: "Ha sido generado con éxito",

                                        icon: 'success',
                                        showCancelButton: false,

                                        confirmButtonText: 'OK',
                                        customClass: {
                                            confirmButton: 'swalBtnColor',

                                        },
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            //location.reload();
                                            window.location.href = window.location.href.split("/Editar")[0];
                                        }
                                    })

                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                    })
                                }
                            },

                            beforeSend: function (xhr) {

                                $("#divProcesando").modal("show");
                            },
                            complete: function () {

                            },
                            error: function (error) {

                            }
                        });
                    }
                    else {
                        btn.disabled = false;

                    }

                }
                )







                btn.disabled = false;
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }


        }
    </script>


    <script>
        function enviarActividadSAP(id) {
            try {
                var modale = $("#divProcesando");
                $.ajax({
                    type: 'GET',

                    url: '@Url.Page("Observar", "EnviarActividadSAP")',
                    dataType: 'json',
                    data: { idB: id },
                    headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (json) {

                        modale.modal("hide");
                        $('body').removeClass('modal-open');//eliminamos la clase del body para poder hacer scroll
                        $('.modal-backdrop').remove();//eliminamos el backdrop del modal


                        console.log(json);
                        if (json.procesadaSAP) {
                            Swal.fire({
                                title: "Ha sido enviado con éxito",

                                icon: 'success',
                                showCancelButton: false,
                                customClass: {
                                    confirmButton: 'swalBtnColor',

                                },
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Ha ocurrido un error al intentar enviar a SAP, revisa la bitacora de errores'

                            })
                        }


                    },

                    beforeSend: function (xhr) {
                        modale.modal("show");
                    },
                    complete: function () {
                        modale.modal("hide");

                    },
                    error: function (error) {
                        modale.modal("hide");
                    }
                });
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }

        }

        var btn = document.getElementById('Guardar');

        function onclickModal() {
            $('#modal-xl').modal('show');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }

        function ValidaForm(recibido1) {
            if (recibido1.idLlamada == undefined || recibido1.idLlamada == "") {
                return false;
            } else if (recibido1.Detalle == undefined || recibido1.Detalle == "") {
                return false;

            }




            return true;

        }

        function onGuardar() {
            try {
                btn.disabled = true;


                var recibido1 =
                {
                    id: 0,
                    idLlamada: $("#idLlamadaActividad").val(),
                    TipoActividad: $("#tipoActividad").val(),
                    Detalle: $("#DetalleActividad").val(),

                }

                if (!ValidaForm(recibido1)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Faltan datos por rellenar '

                    })
                } else {
                    Swal.fire({
                        title: '¿Desea guardar los cambios?',
                        showDenyButton: true,
                        showCancelButton: false,
                        confirmButtonText: `Aceptar`,
                        denyButtonText: `Cancelar`,
                        customClass: {
                            confirmButton: 'swalBtnColor',
                            denyButton: 'swalDeny'
                        },
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var recibidos = recibido1;

                            $.ajax({
                                type: 'POST',

                                url: '@Url.Page("Observar", "GenerarActividad")',
                                dataType: 'json',
                                data: { recibido: recibidos },
                                headers: {
                                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                },
                                success: function (json) {

                                    $("#divProcesando").hide();

                                    if ($('.modal-backdrop').is(':visible')) {

                                        $('body').removeClass('modal-open');
                                        $('.modal-backdrop').hide();
                                    }
                                    console.log("resultado " + json.mensaje);
                                    if (json.success == true) {
                                        Swal.fire({
                                            title: "Ha sido generado con éxito",

                                            icon: 'success',
                                            showCancelButton: false,

                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swalBtnColor',

                                            },
                                        }).then((result) => {
                                            if (result.isConfirmed) {

                                                location.reload();
                                            }
                                        })

                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                        })
                                    }
                                },

                                beforeSend: function (xhr) {

                                    $("#divProcesando").modal("show");
                                },
                                complete: function () {
                                    $("#divProcesando").modal("hide");

                                },
                                error: function (error) {
                                    $("#divProcesando").modal("hide");

                                    btn.disabled = false;

                                }
                            });
                        } else {
                            $("#divProcesando").modal("hide");

                            btn.disabled = false;
                        }
                    }
                    )
                }


                btn.disabled = false;
            } catch (e) {
                $("#divProcesando").modal("hide");

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar guardar ' + e

                })
                btn.disabled = false;

            }



        }

    </script>
}
@using System.Globalization;
@{
    NumberFormatInfo formato = new CultureInfo("en-US").NumberFormat;
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";


}
@using System.Globalization;
@using Microsoft.AspNetCore.Http
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Security.Claims;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Configuration;
@using Refit;
@inject IHttpContextAccessor httpContextAccessor
@using Newtonsoft.Json;
@{
    var Roles = ((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == "Roles").Select(s1 => s1.Value).FirstOrDefault().Split("|");
}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-sm-6">
                        <h5 class="title">Datos Llamada</h5>
                    </div>

                    <div class="col-sm-6" style="text-align: right">
                    </div>
                </div>


            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label># Llamada:</label>
                            <input type="text" class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().callID" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Clase de Cliente:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Clase_CLiente" readonly>

                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Cliente:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Cliente" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Tipo de Caso:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Tipo_Caso" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Status Actual:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Status_Actual" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Dias Status Actual:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Dias_Status_Actual" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Fecha Creación:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Fecha_Creacion" readonly>

                        </div>
                    </div>  <div class="col-md-4">
                        <div class="form-group">
                            <label>Fecha Actualización:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Fecha_de_actualizacion" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Ultimo Status:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Ultimo_Status" readonly>

                        </div>
                    </div>  <div class="col-md-4">
                        <div class="form-group">
                            <label>Dias Acumulados:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Dias_acumulados" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Serie:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Serie_del_Equipo" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Codigo Producto:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Codigo_Articulo" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Producto:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Descripcion_Articulo" readonly>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Categoría Cliente:</label>
                            <input class="form-control form-control-lg" id="cardcode1" asp-for="Planificador.Planificador.FirstOrDefault().Categoria_Cliente" readonly>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-sm-6">
                        <h5 class="title">Llamada Servicio</h5>
                    </div>

                    <div class="col-sm-6" style="text-align: right">
                    </div>
                </div>


            </div>
            <div class="card-body">
                <div class="row">
                    <input id="idLlamada" hidden readonly asp-for="Llamada.id" />
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Estado de la Llamada:</label>
                            <select id="statusLlamada" class="form-control" asp-for="Llamada.Status" required>
                                <option value="0">Seleccione</option>
                                @foreach (var item in Model.Status)
                                {
                                    <option value="@item.idSAP">@item.Nombre</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Tipo de Caso:</label>
                            <select id="tipoCaso" class="form-control" required asp-for="Llamada.TipoCaso">
                                @*    <option value="0">Seleccione</option> *@


                                @foreach (var item in Model.TP)
                                {
                                    <option value="@item.id">@item.Nombre</option>
                                }


                            </select>

                        </div>
                    </div>


                    <div class="col-md-3">

                        <div class="form-group">
                            <label>Fecha Proximo Contacto:</label>
                            <input type="date" class="form-control form-control-lg" id="fechaProximoContacto" asp-for="Planificador.Planificador.FirstOrDefault().FechaProximoContacto">

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" type="checkbox" onclick="check()" id="check1">
                                <span class="form-check-sign"></span>
                                Borrar Fecha
                            </label>
                        </div>
                    </div>
                    <button type="button" onclick="javascript: Generar();" class="btn btn-rounded btn-outline-success" id="Guardar">Guardar Cambios</button>


                </div>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-6">
                        <h5>Listado de Actividades de la llamada # @Model.Llamada.DocEntry</h5>
                    </div>
                    <div class="col-md-4">
                        <a class="btn btn-rounded btn-outline-primary" title="Agregar" onclick="javascript: onclickModal()">+  Agregar</a>

                        <input hidden id="idLlamadaActividad" asp-for="Llamada.id" />
                    </div>

                </div>
            </div>

            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered first">
                        <thead>
                            <tr>
                                <th>No. Actividad</th>
                                <th>Tipo</th>
                                <th>Fecha Creación</th>
                                <th>Usuario Creador</th>

                                <th>Detalle</th>
                                <th>Acción</th>



                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Actividades)
                            {
                                <tr>
                                    <td>@item.DocEntry</td>

                                    @{
                                        switch (item.TipoActividad)
                                        {
                                            case 1:
                                                {
                                                    <td> Llamada Telefónica</td>

                                                    break;
                                                }
                                            case 2:
                                                {
                                                    <td> Reunión</td>

                                                    break;
                                                }
                                            case 3:
                                                {
                                                    <td> Tarea</td>

                                                    break;
                                                }
                                            case 4:
                                                {
                                                    <td>Nota</td>

                                                    break;
                                                }
                                            case 5:
                                                {
                                                    <td> Campaña</td>

                                                    break;
                                                }
                                            case 6:
                                                {
                                                    <td> Otros</td>

                                                    break;
                                                }

                                        }
                                    }


                                    <td>

                                        @item.FechaCreacion
                                    </td>
                                    @{
                                        var cardCode = item.idLogin;
                                    }
                                    <td>@(Model.Usuarios.Where(a => a.id == cardCode).FirstOrDefault() == null ? "" : Model.Usuarios.Where(a => a.id == cardCode).FirstOrDefault().Nombre) </td>

                                    <td>@item.Detalle </td>
                                    <td>

                                        @if (!item.ProcesadaSAP)
                                        {

                                            <a onclick="javascript: enviarActividadSAP('@item.id')" title="Enviar a SAP"> <img src="~/sap.png" style="width: 20%;height: 25%;border-radius: 30%; cursor: pointer;" /></a>
                                        }&nbsp;
                                    </td>
                                </tr>
                            }


                        </tbody>
                        <tfoot>
                            <tr>
                                <th>No. Actividad</th>
                                <th>Tipo</th>
                                <th>Fecha Creación</th>
                                <th>Usuario Creador</th>

                                <th>Detalle</th>
                                <th>Acción</th>

                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="modal-xl">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Agregar Actividad</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Tipo de Actividad:</label>
                            <select id="tipoActividad" class="form-control" required>
                                <option value="1">Llamada Telefónica</option>
                                <option value="2">Reunión</option>
                                <option value="3">Tarea</option>
                                <option value="4">Nota</option>
                                <option value="5">Campaña</option>
                                <option value="6">Otros</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label> Detalle:</label>
                            <textarea class="form-control form-control-lg" id="DetalleActividad"></textarea>

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                <button type="button" id="Guardar" onclick="javascript: onGuardar()" class="btn btn-primary">Guardar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>