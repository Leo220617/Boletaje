@page
@model Boletaje.Pages.Llamadas.NuevoModel
@{
    ViewData["Title"] = "Crear Llamada Servicio";
}
@section breadcrumb{

    <li class="breadcrumb-item">
        <a asp-page="./Index">Llamadas Servicios</a>
    </li>
    <li class="breadcrumb-item active">
        <a>Agregar</a>
    </li>

}
    @section styles{
    <style type="text/css">
        body {
            padding-top: 20px;
            padding-bottom: 20px;
        }

        #draw-canvas {
            border: 2px dotted #CCCCCC;
            border-radius: 5px;
            cursor: crosshair;
        }

        #draw-dataUrl {
            width: 100%;
        }

        h3 {
            margin: 10px 15px;
        }

        header {
            background: #273B47;
            height: 100%;
            width: 100%;
            padding: 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        section {
            flex: 1;
        }

        h1 {
            margin: 10px 15px;
        }

        header {
            color: white;
            font-weight: 500;
            padding-left: 15px;
        }




        .contenedor {
            width: 100% margin: 5px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .instrucciones {
            width: 90%;
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;
            margin-bottom: 10px;
        }

        label {
            margin: 0 15px;
        }

        footer {
            background: #273B47;
            color: white;
            height: 100%;
            width: 100%;
            margin-top: 10px;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
        }


        input[type=range] {
            -webkit-appearance: none;
            margin: 18px 0;
        }

            input[type=range]:focus {
                outline: none;
            }

            input[type=range]::-webkit-slider-runnable-track {
                width: 100%;
                height: 8.4px;
                cursor: pointer;
                animate: 0.2s;
                box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
                background: #3071a9;
                border-radius: 1.3px;
                border: 0.2px solid #010101;
            }

            input[type=range]::-webkit-slider-thumb {
                box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
                border: 1px solid #000000;
                height: 36px;
                width: 16px;
                border-radius: 3px;
                background: #ffffff;
                cursor: pointer;
                -webkit-appearance: none;
                margin-top: -14px;
            }

            input[type=range]:focus::-webkit-slider-runnable-track {
                background: #367ebd;
            }

            input[type=range]::-moz-range-track {
                width: 100%;
                height: 8.4px;
                cursor: pointer;
                animate: 0.2s;
                box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
                background: #3071a9;
                border-radius: 1.3px;
                border: 0.2px solid #010101;
            }

            input[type=range]::-moz-range-thumb {
                box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
                border: 1px solid #000000;
                height: 36px;
                width: 16px;
                border-radius: 3px;
                background: #ffffff;
                cursor: pointer;
            }

            input[type=range]::-ms-track {
                width: 100%;
                height: 8.4px;
                cursor: pointer;
                animate: 0.2s;
                background: transparent;
                border-color: transparent;
                border-width: 16px 0;
                color: transparent;
            }

            input[type=range]::-ms-fill-lower {
                background: #2a6495;
                border: 0.2px solid #010101;
                border-radius: 2.6px;
                box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
            }

            input[type=range]::-ms-fill-upper {
                background: #3071a9;
                border: 0.2px solid #010101;
                border-radius: 2.6px;
                box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
            }

            input[type=range]::-ms-thumb {
                box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
                border: 1px solid #000000;
                height: 36px;
                width: 16px;
                border-radius: 3px;
                background: #ffffff;
                cursor: pointer;
            }

            input[type=range]:focus::-ms-fill-lower {
                background: #3071a9;
            }

            input[type=range]:focus::-ms-fill-upper {
                background: #367ebd;
            }
    </style>
    <style>

        #menu {
            float: left;
            width: 100%;
            background-color: #fff;
        }

            #menu img {
                width: 12%;
                margin: 2%;
                cursor: pointer;
            }

        #principal {
            float: left;
            width: 75%;
        }

        #visor {
            width: 60%;
            margin: 10%
        }

            #visor img {
                width: 100%
            }



        h4 {
            font-size: 22px !important;
        }

        body {
            margin: 0;
        }

        img {
            border: none;
        }

        button, h1 {
            margin: 0;
            padding: 0;
        }

        #wrapper {
            width: 100%;
        }

        h1 {
            padding: 50px 0;
            text-align: center;
        }



        .preload {
            padding-top: 20px;
            text-align: center;
            display: none;
        }

        .activate-preload {
            display: block;
        }

        #container-input {
            width: 640px;
            margin: 0 auto;
            border: solid 1px #CCC;
            position: relative;
            overflow: hidden;
        }

            #container-input .wrap-file .content-icon-camera {
                width: 55px;
                overflow: hidden;
            }

                #container-input .wrap-file .content-icon-camera:hover {
                    background-color: #e6e6e6;
                }

                #container-input .wrap-file .content-icon-camera .icon-camera {
                    width: 36px;
                    height: 36px;
                    background: url('../../camera.png') no-repeat;
                    cursor: pointer;
                    position: absolute;
                    top: 8px;
                    left: 8px;
                }

                #container-input .wrap-file .content-icon-camera #file {
                    padding: 15px;
                    opacity: 0;
                    position: relative;
                    cursor: pointer;
                    left: -120px;
                    z-index: 1;
                }

            #container-input .wrap-file #preview-images .thumbnail {
                width: 120px;
                height: 120px;
                display: inline-block;
                vertical-align: middle;
                border: solid 2px #CCC;
                background-size: cover;
                position: relative;
            }

                #container-input .wrap-file #preview-images .thumbnail:not(:last-child) {
                    margin-right: 5px;
                }

                #container-input .wrap-file #preview-images .thumbnail .close-button {
                    width: 20px;
                    height: 20px;
                    background-color: black;
                    color: white;
                    text-align: center;
                    position: absolute;
                    top: 5px;
                    right: 5px;
                    border-radius: 100px;
                    cursor: pointer;
                }

            #container-input #publish {
                padding: 15px 35px;
                font-size: 1.1em;
                float: right;
                border: none;
                cursor: pointer;
                background-color: #8ECA67;
                color: #FFF;
            }

                #container-input #publish:hover {
                    background-color: #6EAD45;
                }
    </style>
}

    @section scripts{


    <script type="text/javascript">

        /*
            El siguiente codigo en JS Contiene mucho codigo
            de las siguietes 3 fuentes:
            https://stipaltamar.github.io/dibujoCanvas/
            https://developer.mozilla.org/samples/domref/touchevents.html - https://developer.mozilla.org/es/docs/DOM/Touch_events
            http://bencentra.com/canvas/signature/signature.html - https://bencentra.com/code/2014/12/05/html5-canvas-touch-events.html
        */

        (function() { // Comenzamos una funcion auto-ejecutable

            // Obtenenemos un intervalo regular(Tiempo) en la pamtalla
            window.requestAnimFrame = (function(callback) {
                return window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    window.msRequestAnimaitonFrame ||
                    function(callback) {
                        window.setTimeout(callback, 1000 / 60);
                        // Retrasa la ejecucion de la funcion para mejorar la experiencia
                    };
            })();

            // Traemos el canvas mediante el id del elemento html
            var canvas = document.getElementById("draw-canvas");
            var ctx = canvas.getContext("2d");


            // Mandamos llamar a los Elemetos interactivos de la Interfaz HTML
            //var drawText = document.getElementById("draw-dataUrl");
            //var drawImage = document.getElementById("draw-image");
            var clearBtn = document.getElementById("draw-clearBtn");
            /*  *//*  var submitBtn = document.getElementById("draw-submitBtn");*/
            clearBtn.addEventListener("click", function(e) {
                // Definimos que pasa cuando el boton draw-clearBtn es pulsado
                clearCanvas();
                // drawImage.setAttribute("src", "");
            }, false);
            // Definimos que pasa cuando el boton draw-submitBtn es pulsado
            //submitBtn.addEventListener("click", function (e) {
            //    var dataUrl = canvas.toDataURL();
            //    drawText.innerHTML = dataUrl;
            //    drawImage.setAttribute("src", dataUrl);
            //}, false);

            // Activamos MouseEvent para nuestra pagina
            var drawing = false;
            var mousePos = { x: 0, y: 0 };
            var lastPos = mousePos;
            canvas.addEventListener("mousedown", function(e) {
                /*
                  Mas alla de solo llamar a una funcion, usamos function (e){...}
                  para mas versatilidad cuando ocurre un evento
                */
                var tint = document.getElementById("color");
                var punta = document.getElementById("puntero");
                console.log(e);
                drawing = true;
                lastPos = getMousePos(canvas, e);
            }, false);
            canvas.addEventListener("mouseup", function(e) {
                drawing = false;
                $("#Firma").val(canvas.toDataURL());

            }, false);
            canvas.addEventListener("mousemove", function(e) {
                mousePos = getMousePos(canvas, e);
            }, false);

            // Activamos touchEvent para nuestra pagina
            canvas.addEventListener("touchstart", function(e) {
                mousePos = getTouchPos(canvas, e);
                console.log(mousePos);
                e.preventDefault(); // Prevent scrolling when touching the canvas
                var touch = e.touches[0];
                var mouseEvent = new MouseEvent("mousedown", {
                    clientX: touch.clientX,
                    clientY: touch.clientY
                });
                canvas.dispatchEvent(mouseEvent);
            }, false);
            canvas.addEventListener("touchend", function(e) {
                e.preventDefault(); // Prevent scrolling when touching the canvas
                var mouseEvent = new MouseEvent("mouseup", {});
                canvas.dispatchEvent(mouseEvent);
                $("#Firma").val(canvas.toDataURL());

            }, false);
            canvas.addEventListener("touchleave", function(e) {
                // Realiza el mismo proceso que touchend en caso de que el dedo se deslice fuera del canvas
                e.preventDefault(); // Prevent scrolling when touching the canvas
                var mouseEvent = new MouseEvent("mouseup", {});
                canvas.dispatchEvent(mouseEvent);
                $("#Firma").val(canvas.toDataURL());

            }, false);
            canvas.addEventListener("touchmove", function(e) {
                e.preventDefault(); // Prevent scrolling when touching the canvas
                var touch = e.touches[0];
                var mouseEvent = new MouseEvent("mousemove", {
                    clientX: touch.clientX,
                    clientY: touch.clientY
                });
                canvas.dispatchEvent(mouseEvent);
                $("#Firma").val(canvas.toDataURL());
            }, false);

            // Get the position of the mouse relative to the canvas
            function getMousePos(canvasDom, mouseEvent) {
                var rect = canvasDom.getBoundingClientRect();
                /*
                  Devuelve el tamaño de un elemento y su posición relativa respecto
                  a la ventana de visualización (viewport).
                */
                return {
                    x: mouseEvent.clientX - rect.left,
                    y: mouseEvent.clientY - rect.top
                };
            }

            // Get the position of a touch relative to the canvas
            function getTouchPos(canvasDom, touchEvent) {
                var rect = canvasDom.getBoundingClientRect();
                console.log(touchEvent);
                /*
                  Devuelve el tamaño de un elemento y su posición relativa respecto
                  a la ventana de visualización (viewport).
                */
                return {
                    x: touchEvent.touches[0].clientX - rect.left, // Popiedad de todo evento Touch
                    y: touchEvent.touches[0].clientY - rect.top
                };
            }

            // Draw to the canvas
            function renderCanvas() {
                if (drawing) {
                    var tint = document.getElementById("color");
                    var punta = document.getElementById("puntero");
                    ctx.strokeStyle = tint.value;
                    ctx.beginPath();
                    ctx.moveTo(lastPos.x, lastPos.y);
                    ctx.lineTo(mousePos.x, mousePos.y);
                    console.log(punta.value);
                    ctx.lineWidth = punta.value;
                    ctx.stroke();
                    ctx.closePath();
                    lastPos = mousePos;
                }
            }

            function clearCanvas() {
                canvas.width = canvas.width;
            }

            // Allow for animation
            (function drawLoop() {
                requestAnimFrame(drawLoop);
                renderCanvas();
            })();

        })();

    </script>

    <script>
        var btn = document.getElementById('Guardar');

        function ValidaForm(recibido1) {
            if (recibido1.PersonaContacto == undefined || recibido1.PersonaContacto == "") {
                return false;
            } else if (recibido1.NumeroPersonaContacto == undefined || recibido1.NumeroPersonaContacto == "") {
                return false;

            } else if (recibido1.EmailPersonaContacto == undefined || recibido1.EmailPersonaContacto == "") {
                return false;

            }
            else {
                return true;
            }
        }

        function onGuardar() {
            try {
                btn.disabled = true;

                var bases64 = [];

                for (var i = 0; i < documentosbase64.length; i++) {

                    var det = {
                        id: 0,
                        idEncabezado: 0,
                        base64: documentosbase64[i].base64

                    };
                    bases64.push(det);

                }
                var recibido1 =
                {
                    id: 0,
                    TipoLlamada: null,
                    Series: 0,
                    Status: $("#status").val(),
                    CardCode: $("#cardcode").val(),
                    DocEntry: 0,
                    DocNum: 0,
                    SerieFabricante: "",
                    ItemCode: $("#productos").val(),
                    Asunto: $("#asunto").val(),
                    TipoCaso: $("#tp").val(),
                    FechaSISO: null,
                    LugarReparacion: $("#lReparacion").val(),
                    SucRecibo: $("#sr").val(),
                    SucRetiro: $("#srt").val(),
                    Comentarios: $("#comentarios").val(),
                    TratadoPor: 0,
                    Garantia: 0,
                    Tecnico: $("#tecnico").val(),
                    ProcesadaSAP: false,
                    Firma: $("#Firma").val(),
                    Horas: $("#horas").val(),
                    PersonaContacto: $("#personaContacto").val(),
                    EmailPersonaContacto: $("#emailPersonaContacto").val(),
                    NumeroPersonaContacto: $("#telefonoPersonaContacto").val(),

                    Adjuntos: bases64
                }

                if (!ValidaForm(recibido1)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Faltan datos por rellenar '

                    })
                } else {
                    Swal.fire({
                        title: '¿Desea guardar los cambios?',
                        showDenyButton: true,
                        showCancelButton: false,
                        confirmButtonText: `Aceptar`,
                        denyButtonText: `Cancelar`,
                        customClass: {
                            confirmButton: 'swalBtnColor',
                            denyButton: 'swalDeny'
                        },
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var recibidos = recibido1;

                            $.ajax({
                                type: 'POST',

                                url: '@Url.Page("Nuevo", "Generar")',
                                dataType: 'json',
                                data: { recibido: recibidos },
                                headers: {
                                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                },
                                success: function(json) {

                                    $("#divProcesando").hide();

                                    if ($('.modal-backdrop').is(':visible')) {

                                        $('body').removeClass('modal-open');
                                        $('.modal-backdrop').hide();
                                    }
                                    console.log("resultado " + json.mensaje);
                                    if (json.success == true) {
                                        Swal.fire({
                                            title: "Ha sido generado con éxito",

                                            icon: 'success',
                                            showCancelButton: false,

                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swalBtnColor',

                                            },
                                        }).then((result) => {
                                            if (result.isConfirmed) {

                                                window.location.href = window.location.href.split("/Nuevo")[0];
                                            }
                                        })

                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                        })
                                    }
                                },

                                beforeSend: function(xhr) {

                                    $("#divProcesando").modal("show");
                                },
                                complete: function() {

                                },
                                error: function(error) {

                                }
                            });
                        } else {
                            btn.disabled = false;
                        }
                    }
                    )
                }


                btn.disabled = false;
                //$("#formTipos").submit();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar guardar ' + e 

                })
            }



        }
    </script>
    <script>

        $(document).ready(function() {
            $('.select2').select2({
                width: 'resolve',
                theme: "classic"
            });
        });

        function rellenaProductos(lista) {
            try
            {
                var sOptions = '';

                $("#productos").html('');
                for (var i = 0; i < lista.length; i++) {

                    sOptions += ' <option value="' + lista[i].itemCode + ' / ' + lista[i].manufSN + '">' + lista[i].itemCode + ' - ' + lista[i].itemName + ' - ' + lista[i].manufSN + '</option>';

                }
                $("#productos").html(sOptions);

            }catch(e)
            {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar guardar ' + e + ' - ' + e.stack

                })
            }
        }

        function cambiarProducto() {
            try 
            {
                var CardCode = $("#cardcode").val();
                CardCode = CardCode.split("/")[0];
                $.ajax({
                    type: 'GET',

                    url: '@Url.Page("Nuevo", "Productos")',
                    dataType: 'json',
                    data: { idB: CardCode },
                    headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function(json) {

                        console.log(json);

                        rellenaProductos(json);

                    },

                    beforeSend: function(xhr) {


                    },
                    complete: function() {

                    },
                    error: function(error) {

                    }
                });

            }catch(e)
            {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e + ' - ' + e.stack

                })
            }

        }

    </script>

    <script type="text/javascript">
        var file = document.getElementById('file');
        var preload = document.querySelector('.preload');

        var formData = new FormData();
        var documentosbase64 = [];

        //function getBase64(file, id) {
        //    var reader = new FileReader();
        //    reader.readAsDataURL(file);
        //    reader.onload = function () {
        //        console.log(reader.result);
        //        var detalle = {
        //            id: id,
        //            idEncabezado: 0,
        //            base64: reader.result
        //        }
        //        documentosbase64.push(detalle);
        //    };
        //    reader.onerror = function (error) {
        //        console.log('Error: ', error);
        //    };
        //}

        function resizedataURL(datas, wantedWidth, wantedHeight) {

            return new Promise((resolve, reject) => {
                // We create an image to receive the Data URI
                var img = document.createElement('img');
                var retornar = "";
                // We put the Data URI in the image's src attribute
                img.src = datas;
                // When the event "onload" is triggered we can resize the image.
                img.onload = function() {

                    var height = this.height;
                    var width = this.width;





                    if (height > wantedHeight && width > wantedWidth) {
                        while (height > wantedHeight) {

                            height = height - 100;
                        }
                        while (width > wantedWidth) {
                            width = width - 100;
                        }
                        // We create a canvas and get its context.
                        var canvas = document.createElement('canvas');
                        var ctx = canvas.getContext('2d');

                        // We set the dimensions at the wanted size.
                        canvas.width = width;
                        canvas.height = height;

                        // We resize the image with the canvas method drawImage();
                        ctx.drawImage(this, 0, 0, width, height);

                        var dataURI = canvas.toDataURL();
                        retornar = dataURI;
                        resolve(retornar);
                        /////////////////////////////////////////
                        // Use and treat your Data URI here !! //
                        /////////////////////////////////////////
                    } else {
                        resolve(datas);
                    }


                };
            })






        }
        function getBase642(event, id) {
            var input = event.target;

            var reader = new FileReader();
            reader.onload = function() {
                var dataURL = reader.result;


                var imgResized = "";

                resizedataURL(dataURL, 600, 600).then((resized) => {
                    imgResized = resized;
                    var detalle = {
                        id: id,
                        base64: imgResized//dataURL
                    }
                    documentosbase64.push(detalle);
                });





            };
            reader.readAsDataURL(input.files[0]);


        }

        function eliminar(id) {
            documentosbase64.splice(documentosbase64.indexOf(documentosbase64.find(a => a.id == id)), 1)
        }

        file.addEventListener('change', function(e) {

            for (var i = 0; i < file.files.length; i++) {
                var thumbnail_id = Math.floor(Math.random() * 30000) + '_' + Date.now();
                createThumbnail(file, i, thumbnail_id);
                formData.append(thumbnail_id, file.files[i]);
            }
            getBase642(e, thumbnail_id);
            e.target.value = '';

        });



        var createThumbnail = function(file, iterator, thumbnail_id) {
            var thumbnail = document.createElement('div');
            thumbnail.classList.add('thumbnail', thumbnail_id);
            thumbnail.dataset.id = thumbnail_id;

            thumbnail.setAttribute('style', `background-image: url(${URL.createObjectURL(file.files[iterator])})`);
            document.getElementById('preview-images').appendChild(thumbnail);
            createCloseButton(thumbnail_id);
        }

        var createCloseButton = function(thumbnail_id) {
            var closeButton = document.createElement('div');
            closeButton.classList.add('close-button');
            closeButton.innerText = 'x';
            document.getElementsByClassName(thumbnail_id)[0].appendChild(closeButton);
        }

        var clearFormDataAndThumbnails = function() {
            for (var key of formData.keys()) {
                formData.delete(key);
            }

            document.querySelectorAll('.thumbnail').forEach(function(thumbnail) {
                thumbnail.remove();
            });
        }


        document.body.addEventListener('click', function(e) {
            if (e.target.classList.contains('close-button')) {
                e.target.parentNode.remove();
                formData.delete(e.target.parentNode.dataset.id);
                eliminar(e.target.parentNode.dataset.id);

            }
        });


    </script>
}

    <img hidden id="imagenPrueba" />
    @*<form method="post" id="formTipos" role="form" novalidate class="needs-validation " enctype="multipart/form-data">*@
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5 class="title">Registro de Llamada</h5>
                        </div>

                        <div class="col-sm-6" style="text-align: right">

                            <a asp-page="/Llamadas/Index" class="nav-link text-dark" style="text-decoration: underline;"><i class="fas fa-reply "></i>  Regresar</a>

                        </div>
                    </div>


                </div>
                <div class="card-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Cliente:</label>

                                <input type="text" list="cardcodes" class="form-control form-control-lg" id="cardcode" placeholder="Nombre Cliente" asp-for="Input.CardCode" onchange="javascript: cambiarProducto();">

                                <datalist id="cardcodes">
                                    @foreach (var item in Model.Clientes.Clientes)
                                {
                                    <option value="@item.CardCode / @item.CardName"> </option>
                                }
                            </datalist>
                            <a asp-page="/Client/Nuevo" style="text-decoration: underline;" class="nav-link" target="_blank">Crear Cliente</a>


                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Producto:</label>
                            <select id="productos" class="form-control select2" asp-for="Input.ItemCode" required>
                                <option value="0">Seleccione</option>

                            </select>
                            <a asp-page="/Boletas/Nuevo" style="text-decoration: underline;" class="nav-link" target="_blank">Crear Tarjeta Equipo</a>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Estado:</label>
                            <select id="status" class="form-control" asp-for="Input.Status" required>
                                <!-- <option value="0">Seleccione</option>-->
                                @foreach (var item in Model.Status)
                                {
                                    if (item.Nombre.ToLower().Contains("ABRIR".ToLower()))
                                    {
                                        <option value="@item.idSAP" selected>@item.Nombre</option>

                                    }
                                    else
                                    {
                                        <option value="@item.idSAP">@item.Nombre</option>

                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Tipo de Caso:</label>
                            <select id="tp" class="form-control" asp-for="Input.TipoCaso" required>
                                <option value="0">Seleccione</option>
                                @foreach (var item in Model.TP)
                                {
                                    <option value="@item.idSAP">@item.Nombre</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Lugar Reparación:</label>
                            <select id="lReparacion" class="form-control" asp-for="Input.LugarReparacion" required>
                                <option value="1">Taller</option>
                                <option value="2">Visita</option>

                            </select>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Persona de Contacto:</label>
                            <input type="text" class="form-control form-control-lg" id="personaContacto" placeholder="Nombre Persona Contacto" asp-for="Input.PersonaContacto">

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label> Correo Persona Contacto:</label>
                            <input type="email" class="form-control form-control-lg" id="emailPersonaContacto" placeholder="Email Persona Contacto" asp-for="Input.EmailPersonaContacto">

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Telefono Persona Contacto:</label>
                            <input type="tel" class="form-control form-control-lg" id="telefonoPersonaContacto" placeholder="Telefono Persona Contacto" asp-for="Input.NumeroPersonaContacto">

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Sucursal de Recibo:</label>
                            <select id="sr" class="form-control" asp-for="Input.SucRecibo" required>
                                <option value="0">Seleccione</option>
                                @{
                                    var i = 0;
                                }
                                @foreach (var item in Model.Sucursales)
                                {
                                    @if (i == 0)
                                    {
                                        <option value="@item.idSAP" selected>@item.Nombre</option>
                                    }
                                    else
                                    {
                                        <option value="@item.idSAP">@item.Nombre</option>
                                    }
                                    i++;
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Sucursal de Retiro:</label>
                            <select id="srt" class="form-control" asp-for="Input.SucRetiro" required>
                                @{
                                    var i = 0;
                                }
                                <option value="0">Seleccione</option>
                                @foreach (var item in Model.Sucursales)
                                {
                                    @if (i == 0)
                                    {
                                        <option value="@item.idSAP" selected>@item.Nombre</option>
                                    }
                                    else
                                    {
                                        <option value="@item.idSAP">@item.Nombre</option>
                                    }



                                    i++;
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-sm-6">

                        <div class="form-group">
                            <label>Técnico:</label>
                            <select id="tecnico" class="form-control" asp-for="Input.Tecnico" required>

                                @foreach (var item in Model.Tecnicos)
                                {
                                    if (item.Nombre.ToLower().Contains("asignar"))
                                    {
                                        <option value="@item.idSAP" selected>@item.Nombre</option>

                                    }
                                    else
                                    {
                                        <option value="@item.idSAP">@item.Nombre</option>

                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Horas:</label>
                            <input type="number" min="0" step="1" class="form-control" asp-for="Input.Horas" id="horas" required />
                        </div>
                    </div>

                </div>


            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Asunto:</label>

                             <select id="asunto" class="form-control" asp-for="Input.Asunto" required>

                                @foreach (var item in Model.Asuntos)
                                {
                                    
                                        <option value="@item.Asunto">@item.Asunto</option>

                                     
                                }
                            </select>

                        @*    <input type="text" class="form-control form-control-lg" id="asunto" placeholder="Asunto" asp-for="Input.Asunto">*@


                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Comentarios:</label>

                            <textarea class="form-control form-control-lg" id="comentarios" placeholder="Comentarios" asp-for="Input.Comentarios"> </textarea>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="card">

            <div class="card-body">
                <p>Firmar a continuación:</p>
                <div class="contenedor">

                    <div class="row">
                        <div class="col-md-12">
                            <canvas id="draw-canvas" width="300" height="300">
                                No tienes un buen navegador.
                            </canvas>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">

                            <input type="button" class="btn btn-rounded btn-outline-primary" id="draw-clearBtn" value="Borrar Firma"></input>

                            <label hidden>Color</label>
                            <input type="color" id="color" hidden>
                            <label>Tamaño Puntero</label>
                            <input type="range" id="puntero" min="1" default="1" max="5" width="10%">


                        </div>

                    </div>


                </div>
                <input hidden type="text" id="Firma" asp-for="Input.Firma" />

            </div>
        </div>

    </div>

</div>
<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-sm-6">
                        <h5 class="title">Subir Imágenes</h5>

                    </div>

                    <div class="col-sm-6" style="text-align: right">
                    </div>
                </div>
            </div>
            <div class="card-body">

                <div id="wrapper">

                    <div id="container-input">
                        <div class="wrap-file">
                            <div class="content-icon-camera">
                                <input type="file" id="file" name="file[]" accept="image/*" multiple asp-for="Adjuntos" />
                                <div class="icon-camera"></div>
                            </div>
                            <div id="preview-images">
                            </div>
                        </div>

                    </div>
                    <div class="preload">
                        <img src="~/preloader.gif" alt="preload" />
                    </div>
                    <h2 id="success"></h2>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <button type="button" id="Guardar" class="btn btn-rounded btn-outline-success" onclick="javascript: onGuardar()">Guardar Cambios</button>
        </div>
    </div>
</div>
@*</form>*@