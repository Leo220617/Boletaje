@page
@model Boletaje.Pages.Bodega.ObservarModel
@{
}

@{
    ViewData["Title"] = "Observar Movimiento";
}

@section breadcrumb {

    <li class="breadcrumb-item">
        <a asp-page="./Index">Bodega</a>
    </li>


}

    @using System.Globalization;
@{
    NumberFormatInfo formato = new CultureInfo("en-US").NumberFormat;
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";


}


@section styles {

    <style>
        .tableFixHead th {
            position: sticky;
            top: 0;
            background: white;
        }

        .createPDF {
            font-size: 14px;
        }
    </style>

}
@section scripts {

    <script>

        var html = '';
        var specialElementHandlers = null;
        $(document).ready(function () {
            jQuery(document).ready(function ($) {
                specialElementHandlers = {
                    "#editor": function (element, render) {
                        return true;
                    }
                }
            });



            $(document).ready(function () {
                $('#tablita').DataTable();
            });

            Recuperar();
        });
        var Detalle = [];
        var Encabezado = [];
        var SolicitudesC = [];
        function Recuperar() {
            try {
                var det = JSON.parse($("#Detalle").val());
                Encabezado = JSON.parse($("#BTS").val());
                SolicitudesC = JSON.parse($("#SC").val());




                for (var i = 0; i < det.length; i++) {

                    var detalle =
                    {
                        id: det[i].id,
                        idEncabezado: det[i].idEncabezado,
                        idProducto: det[i].idProducto,
                        idError: det[i].idError,
                        Cantidad: det[i].Cantidad,
                        ItemCode: det[i].ItemCode,
                        CantidadEnviar: det[i].CantidadEnviar,
                        CantidadFaltante: det[i].CantidadFaltante,
                        SolicitudCompra: det[i].SolicitudCompra,
                        SolicitudProcesada: det[i].SolicitudProcesada



                    }
                    Detalle.push(detalle);
                    onChangeRevisado(i, true);
                    $("#cantidadFaltante_" + i).val(Detalle[i].CantidadFaltante);
                    detalle.SolicitudCompra ? $("#md_checkbox_Soli_" + i).prop('checked', true) : $("#md_checkbox_Soli_" + i).prop('checked', false);
                }




            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: e

                });
            }
        }
        function ImprimirPantalla() {
            try {
                // window.print();
                var margins = {
                    top: 10,
                    bottom: 10,
                    left: 10,
                    width: 595
                };


                html = $(".html").html();
                html2pdf(html, {
                    margin: 1,
                    padding: 0,
                    filename: 'Movimientos.pdf',
                    image: { type: 'jpeg', quality: 1 },
                    html2canvas: { scale: 2, logging: true },
                    jsPDF: { unit: 'in', format: 'A2', orientation: 'P' },
                    class: ImprimirPantalla
                });

            } catch (e) {
                console.log(e);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar imprimir ' + e

                })
            }
        }

        function onChangeRevisado(i, inicio) {
            try {



                if (inicio) {
                    //  $("#md_checkbox_" + i).prop('checked', Detalle[i].Enviar);

                } else {
                    var valorCheck = $("#md_checkbox_" + i).prop('checked');
                    Detalle[i].Enviar = valorCheck;
                    if (valorCheck == true) {
                        Detalle[i].CantidadEnviar = parseFloat(Detalle[i].CantidadFaltante);
                        // Detalle[i].CantidadFaltante = parseFloat(Detalle[i].CantidadFaltante) - Detalle[i].CantidadEnviar;
                        $("#cantidadEnviado_" + i).val(Detalle[i].CantidadEnviar);

                        $("#cantidadFaltante_" + i).val(Detalle[i].CantidadFaltante - Detalle[i].CantidadEnviar);

                    } else {
                        Detalle[i].CantidadEnviar = 0;
                        // Detalle[i].CantidadFaltante = parseFloat(Detalle[i].CantidadFaltante) - Detalle[i].CantidadEnviar;
                        $("#cantidadEnviado_" + i).val(Detalle[i].CantidadEnviar);

                        $("#cantidadFaltante_" + i).val(Detalle[i].CantidadFaltante - Detalle[i].CantidadEnviar);
                    }
                }




            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: e

                });
            }

        }
        function onChangeSolicitud(i) {
            try {




                var valorCheck = $("#md_checkbox_Soli_" + i).prop('checked');
                if (valorCheck == true) {
                    if (Detalle[i].SolicitudProcesada) {
                        throw new Error("Este articulo ya fue procesada en una solicitud de compra previamente");
                    } else {

                        Detalle[i].SolicitudCompra = true;
                    }


                } else {
                    Detalle[i].SolicitudCompra = false;

                }





            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: e

                });
            }

        }
        function onChangeCantidadEnviar(i) {
            try {

                if (Detalle[i].CantidadFaltante >= parseFloat($("#cantidadEnviado_" + i).val())) {
                    Detalle[i].CantidadEnviar = parseFloat($("#cantidadEnviado_" + i).val());
                    //  Detalle[i].CantidadFaltante = parseFloat(Detalle[i].CantidadFaltante) - Detalle[i].CantidadEnviar;

                    $("#cantidadFaltante_" + i).val(Detalle[i].CantidadFaltante - Detalle[i].CantidadEnviar);
                } else {
                    var cantidad = parseFloat($("#cantidadEnviado_" + i).val());
                    $("#cantidadEnviado_" + i).val(0);
                    Detalle[i].CantidadEnviar = parseFloat($("#cantidadEnviado_" + i).val());
                    // Detalle[i].CantidadFaltante = parseFloat(Detalle[i].Cantidad) - Detalle[i].CantidadEnviar;


                    $("#cantidadFaltante_" + i).val(Detalle[i].CantidadFaltante - Detalle[i].CantidadEnviar);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: "No se puede enviar mas de lo acordado"

                    });
                }

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: e

                });
            }
        }
        function Generar() {
            try {
                var btn = document.getElementById('Guardar');
                var status = $("#status").val();

                var BTS = {
                    BodegaFinal: $("#bodF").val(),
                    BodegaInicial: $("#bodI").val(),
                    DocEntry: Encabezado.DocEntry,
                    Fecha: $("#Fecha").val(),
                    StatusLlamada: $("#statusLlamada").val(),
                    Status: $("#status").val(),
                    TipoMovimiento: $("#idTraslado").val(),
                    id: Encabezado.id,
                    idLlamada: $("#idLlamada").val(),
                    idEncabezado: Encabezado.idEncabezado,
                    idTecnico: Encabezado.idTecnico,

                    Detalle: Detalle
                };



                Swal.fire({
                    title: '¿Desea guardar la bitacora?',
                    showDenyButton: true,
                    showCancelButton: false,
                    confirmButtonText: `Aceptar`,
                    denyButtonText: `Cancelar`,
                    customClass: {
                        confirmButton: 'swalBtnColor',
                        denyButton: 'swalDeny'
                    },
                }).then((result) => {
                    if (result.isConfirmed) {
                        btn.disabled = true;


                        $.ajax({
                            type: 'POST',

                            url: '@Url.Page("Observar", "AgregarBTS")',
                            dataType: 'json',
                            data: { recibidos: BTS },
                            headers: {
                                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                            },
                            success: function (json) {
                                $("#divProcesando").hide();


                                if (json.success == true) {
                                    Swal.fire({
                                        title: "Ha sido generado con éxito",

                                        icon: 'success',
                                        showCancelButton: false,

                                        confirmButtonText: 'OK',
                                        customClass: {
                                            confirmButton: 'swalBtnColor',

                                        },
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            //Despues de insertar, ocupariamos el id del cliente en la bd
                                            //para entonces setearlo en el array de clientes

                                            window.location.href = window.location.href.split("/Observar")[0];


                                        }
                                    })

                                } else {
                                    btn.disabled = false;
                                    $("#divProcesando").hide();
                                    $('.modal-backdrop').remove();
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Ha ocurrido un error al intentar guardar ' + json.exon

                                    })
                                }
                            },

                            beforeSend: function (xhr) {
                                $("#divProcesando").modal("show");

                            },
                            complete: function () {
                                $('.modal-backdrop').remove();
                                $("#divProcesando").hide();
                            },
                            error: function (error) {
                                $('.modal-backdrop').remove();
                                $("#divProcesando").hide();
                            }
                        });
                    }
                })


            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar agregar ' + e

                })
            }
        }

        function AbrirModalSC(id) {
            try {
                var Solicitud = SolicitudesC.find(a => a.id == id);
                if (Solicitud != undefined) {
                    $('#solicitudId').val(Solicitud.id);
                    $('#proveedor').val(Solicitud.CardCode);
                    $('#fechaSolicitud').val(Solicitud.Fecha);
                    $('#fechaEntrega').val(Solicitud.DocNum);

                    // Limpiar la tabla antes de agregar nuevas filas
                    $('#articulosTabla tbody').empty();

                    // Agregar las filas de artículos a la tabla
                    Solicitud.Detalle.forEach(function (articulo) {
                        var fila = `<tr>
                                                                <td>${articulo.ItemCode}</td>
                                                                <td>${articulo.Cantidad}</td>

                                                    </tr>`;
                        $('#articulosTabla tbody').append(fila);
                    });


                    $('#solicitudModal').modal('show');
                    $('.modal-backdrop').remove();
                } else {
                    throw new Error("No se encuentra la solicitud");
                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: e

                });
            }
        }



    </script>

    <script>
        function enviarActividadSAP(id) {
            try {
                var modale = $("#divProcesando");
                $.ajax({
                    type: 'GET',

                    url: '@Url.Page("Observar", "EnviarActividadSAP")',
                    dataType: 'json',
                    data: { idB: id },
                    headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (json) {

                        modale.modal("hide");
                        $('body').removeClass('modal-open');//eliminamos la clase del body para poder hacer scroll
                        $('.modal-backdrop').remove();//eliminamos el backdrop del modal


                        console.log(json);
                        if (json.procesadaSAP) {
                            Swal.fire({
                                title: "Ha sido enviado con éxito",

                                icon: 'success',
                                showCancelButton: false,
                                customClass: {
                                    confirmButton: 'swalBtnColor',

                                },
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Ha ocurrido un error al intentar enviar a SAP, revisa la bitacora de errores'

                            })
                        }


                    },

                    beforeSend: function (xhr) {
                        modale.modal("show");
                    },
                    complete: function () {
                        modale.modal("hide");

                    },
                    error: function (error) {
                        modale.modal("hide");
                    }
                });
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }

        }

        var btn = document.getElementById('GuardarActividad');

        function onclickModal() {
            $('#modal-xl').modal('show');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }

        function ValidaForm(recibido1) {
            if (recibido1.idLlamada == undefined || recibido1.idLlamada == "") {
                return false;
            } else if (recibido1.Detalle == undefined || recibido1.Detalle == "") {
                return false;

            }




            return true;

        }

        function onGuardar() {
            try {
                btn.disabled = true;


                var recibido1 =
                {
                    id: 0,
                    idLlamada: $("#idLlamadaActividad").val(),
                    TipoActividad: $("#tipoActividad").val(),
                    Detalle: $("#DetalleActividad").val(),

                }

                if (!ValidaForm(recibido1)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Faltan datos por rellenar '

                    })
                } else {
                    Swal.fire({
                        title: '¿Desea guardar los cambios?',
                        showDenyButton: true,
                        showCancelButton: false,
                        confirmButtonText: `Aceptar`,
                        denyButtonText: `Cancelar`,
                        customClass: {
                            confirmButton: 'swalBtnColor',
                            denyButton: 'swalDeny'
                        },
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var recibidos = recibido1;

                            $.ajax({
                                type: 'POST',

                                url: '@Url.Page("Observar", "GenerarActividad")',
                                dataType: 'json',
                                data: { recibido: recibidos },
                                headers: {
                                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                },
                                success: function (json) {

                                    $("#divProcesando").hide();

                                    if ($('.modal-backdrop').is(':visible')) {

                                        $('body').removeClass('modal-open');
                                        $('.modal-backdrop').hide();
                                    }
                                    console.log("resultado " + json.mensaje);
                                    if (json.success == true) {
                                        Swal.fire({
                                            title: "Ha sido generado con éxito",

                                            icon: 'success',
                                            showCancelButton: false,

                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swalBtnColor',

                                            },
                                        }).then((result) => {
                                            if (result.isConfirmed) {

                                                location.reload();
                                            }
                                        })

                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                        })
                                    }
                                },

                                beforeSend: function (xhr) {

                                    $("#divProcesando").modal("show");
                                },
                                complete: function () {
                                    $("#divProcesando").modal("hide");

                                },
                                error: function (error) {
                                    $("#divProcesando").modal("hide");

                                    btn.disabled = false;

                                }
                            });
                        } else {
                            $("#divProcesando").modal("hide");

                            btn.disabled = false;
                        }
                    }
                    )
                }


                btn.disabled = false;
            } catch (e) {
                $("#divProcesando").modal("hide");

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar guardar ' + e

                })
                btn.disabled = false;

            }



        }

    </script>
}
    @using Microsoft.AspNetCore.Http
    @using System;
    @using System.Collections.Generic;
    @using System.IO;
    @using System.Linq;
    @using System.Security.Claims;
    @using System.Threading.Tasks;
    @using Microsoft.AspNetCore.Mvc;
    @using Microsoft.AspNetCore.Mvc.RazorPages;
    @using Microsoft.Extensions.Configuration;
@using Newtonsoft.Json
    @using Refit;
    @using Sicsoft.Checkin.Web.Models;
    @inject IHttpContextAccessor httpContextAccessor
<form method="post" id="formTipos" role="form" novalidate class="needs-validation " enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="text" class="form-control form-control-lg" id="id" asp-for="BTS.id" hidden>
    <input hidden id="Detalle" value="@JsonConvert.SerializeObject(Model.BTS.Detalle)" />
    <input hidden id="BTS" value="@JsonConvert.SerializeObject(Model.BTS)" />
    <input hidden id="SC" value="@JsonConvert.SerializeObject(Model.SolicitudesCompras)" />


    <div class="row ">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5 class="title">Observar Movimiento</h5>

                        </div>

                        <div class="col-sm-6" style="text-align: right">

                            <a asp-page="./Index" class="nav-link text-dark" style="text-decoration: underline;"><i class="fas fa-reply "></i>  Regresar</a>

                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Producto</label>
                                <input type="text" class="form-control form-control-lg" id="desc" asp-for="Producto" readonly>

                            </div>


                        </div>




                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Status</label>

                                @if (Model.BTS.Status != "1")
                                {
                                    <select id="status" class="form-control" asp-for="BTS.Status">




                                        <option value="0">Abierta </option>
                                        <option value="3">Apartado y Trasladado </option>

                                        <option value="1"> Entregado al tecnico </option>
                                        <option value="2">Rechazado </option>
                                        <option value="4">Devolucion/Apartado</option>
                                        <option value="5">Solicitado a Fabrica</option>


                                    </select>
                                }
                                else
                                {
                                    <select id="status" class="form-control" asp-for="BTS.Status" readonly disabled>




                                        <option value="0">Abierta </option>
                                        <option value="3">Apartado y Trasladado </option>

                                        <option value="1"> Entregado al tecnico </option>
                                        <option value="2">Rechazado </option>
                                        <option value="4">Devolucion/Apartado</option>
                                        <option value="5">Solicitado a Fabrica</option>


                                    </select>
                                }





                            </div>


                        </div>

                        <div class="col-md-4 pl-1">

                            <div class="form-group">
                                <label>Fecha Creación</label>
                                <input type="date" class="form-control form-control-lg" id="Fecha" asp-for="BTS.Fecha" readonly>


                            </div>


                        </div>

                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Tipo Movimiento</label>
                                <select id="idTraslado" class="form-control" asp-for="BTS.TipoMovimiento" disabled="disabled">
                                    <option value="0">Seleccione</option>


                                    <option value="1">1- Solicitud </option>
                                    <option value="2">2- Devolución </option>


                                </select>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Técnico</label>
                                <input type="text" class="form-control form-control-lg" id="desc" asp-for="Tecnico" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pl-1">

                            <div class="form-group">
                                <label>Llamada</label>
                                <input type="text" class="form-control form-control-lg" id="idLlamada" asp-for="Encabezado.idLlamada" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Cliente</label>
                                <input type="text" class="form-control form-control-lg" id="cliente" asp-for="Cliente" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Oferta Aprobada</label>
                                <input type="text" class="form-control form-control-lg" id="oAprobada" asp-for="DocNumOfertaAprobada" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Bodega Inicial</label>
                                <input type="text" class="form-control form-control-lg" id="bodI" asp-for="BTS.BodegaInicial" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pl-1">

                            <div class="form-group">
                                <label>Bodega Destino</label>
                                <input type="text" class="form-control form-control-lg" id="bodF" asp-for="BTS.BodegaFinal" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1">
                            <div class="form-group">
                                <label>Estado de la Llamada:</label>
                                <select id="statusLlamada" class="form-control" asp-for="InputLlamada.Status" required>
                                    <option value="0">Seleccione</option>
                                    @foreach (var item in Model.Status.Where(a => a.idSAP == "7" || a.idSAP == "10" || a.idSAP == "56"))
                                    {
                                        <option value="@item.idSAP">@item.Nombre</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-8">
                            <h5>Materiales</h5>
                        </div>
                        <div class="col-md-4">
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered first">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Producto</th>
                                    <th>Cantidad</th>
                                    <th>Stock</th>
                                    <th>Ubicación</th>
                                    <th>Cantidad Enviar</th>
                                    <th>Cantidad Faltante</th>
                                    <th>Cantidad Enviado</th>
                                    <th>Enviar Todo</th>
                                    <th>Solicitud Compra</th>
                                    <th>Solicitud</th>





                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var i = 0;

                                }
                                @foreach (var item in Model.BTS.Detalle)
                                {
                                    <tr>
                                        <td>@item.id</td>
                                        <td>@(item.ItemCode)</td>


                                        <td>@item.Cantidad.ToString("N", formato)</td>
                                        @{

                                            var itemCode = item.ItemCode.Trim().Split('|')[0].ToString().Trim();
                                        }
                                        <td>@(Model.ProductosHijos.Where(a => a.codSAP == itemCode).FirstOrDefault() == null ? "0" : Model.ProductosHijos.Where(a => a.codSAP == itemCode).FirstOrDefault().Stock.ToString("N", formato))</td>

                                        <td>@(Model.ProductosHijos.Where(a => a.codSAP == itemCode).FirstOrDefault() == null ? "" : Model.ProductosHijos.Where(a => a.codSAP == itemCode).FirstOrDefault().Localizacion)</td>

                                        <td>
                                            <input class="form-control form-control-lg" type="number" id="cantidadEnviado_@i" onchange="javascript: onChangeCantidadEnviar('@i')" />
                                        </td>
                                        <td>
                                            <input class="form-control form-control-lg" type="number" value="@item.CantidadFaltante" id="cantidadFaltante_@i" readonly disabled />
                                        </td>
                                        @{
                                            var CantidadEnviado = 0.0m;

                                           CantidadEnviado = Model.BTSHistorico.Sum(a => a.Detalle.Where(c => c.idProducto == item.idProducto).Sum(c => c.Cantidad - c.CantidadFaltante));
                                        }
                                        <td>
                                            <input class="form-control form-control-lg" type="text" value="@CantidadEnviado.ToString()" id="cantidadEnviado_@i" readonly disabled />
                                        </td>
                                        <td style="text-align: center">
                                            <input type="checkbox" id="md_checkbox_@i" class="chk-col-green" onchange="javascript: onChangeRevisado('@i', false)">
                                            <label for="md_checkbox_@i"></label>

                                        </td>
                                        <td style="text-align: center">
                                            @if (Model.SolicitudesCompras.Where(a => a.Detalle.Where(x => x.ItemCode == itemCode).FirstOrDefault() != null).FirstOrDefault() != null)
                                            {
                                                <input type="checkbox" id="md_checkbox_Soli_@i" class="chk-col-green" onchange="javascript: onChangeSolicitud('@i', false)" disabled>

                                            }
                                            else
                                            {
                                                <input type="checkbox" id="md_checkbox_Soli_@i" class="chk-col-green" onchange="javascript: onChangeSolicitud('@i', false)">

                                            }
                                            <label for="md_checkbox_Soli_@i"></label>

                                        </td>
                                        <td>

                                            @if (Model.SolicitudesCompras.Where(a => a.Detalle.Where(x => x.ItemCode == itemCode).FirstOrDefault() != null).FirstOrDefault() != null)
                                            {

                                                <a href="javascript:void(0);" onclick="javascript: AbrirModalSC('@Model.SolicitudesCompras.Where(a => a.Detalle.Where(x => x.ItemCode == itemCode).FirstOrDefault() != null).FirstOrDefault().id');" id="openModalButton">
                                                    <i class="fas fa-info-circle" style="font-size: 30px; color: #007bff;"></i>
                                                </a>
                                            }
                                        </td>
                                    </tr>
                                    i++;
                                }


                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>ID</th>
                                    <th>Producto</th>
                                    <th>Cantidad</th>
                                    <th>Stock</th>

                                    <th>Ubicación</th>
                                    <th>Cantidad Enviar</th>
                                    <th>Cantidad Faltante</th>
                                    <th>Cantidad Enviado</th>
                                    <th>Enviar Todo</th>
                                    <th>Solicitud Compra</th>
                                    <th>Solicitud</th>

                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <br />
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Listado de Actividades de la llamada # @Model.InputLlamada.DocEntry</h5>
                        </div>
                        <div class="col-md-4">
                            <a class="btn btn-rounded btn-outline-primary" title="Agregar" onclick="javascript: onclickModal()">+  Agregar</a>

                            <input hidden id="idLlamadaActividad" asp-for="InputLlamada.id" />
                        </div>

                    </div>
                </div>

                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered first">
                            <thead>
                                <tr>
                                    <th>No. Actividad</th>
                                    <th>Tipo</th>
                                    <th>Fecha Creación</th>
                                    <th>Usuario Creador</th>

                                    <th>Detalle</th>
                                    <th>Acción</th>



                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Actividades)
                                {
                                    <tr>
                                        <td>@item.DocEntry</td>

                                        @{
                                            switch (item.TipoActividad)
                                            {
                                                case 1:
                                                    {
                                                        <td> Llamada Telefónica</td>

                                                        break;
                                                    }
                                                case 2:
                                                    {
                                                        <td> Reunión</td>

                                                        break;
                                                    }
                                                case 3:
                                                    {
                                                        <td> Tarea</td>

                                                        break;
                                                    }
                                                case 4:
                                                    {
                                                        <td>Nota</td>

                                                        break;
                                                    }
                                                case 5:
                                                    {
                                                        <td> Campaña</td>

                                                        break;
                                                    }
                                                case 6:
                                                    {
                                                        <td> Otros</td>

                                                        break;
                                                    }

                                            }
                                        }


                                        <td>

                                            @item.FechaCreacion
                                        </td>
                                        @{
                                            var cardCode = item.idLogin;
                                        }
                                        <td>@(Model.Usuarios.Where(a => a.id == cardCode).FirstOrDefault() == null ? "" : Model.Usuarios.Where(a => a.id == cardCode).FirstOrDefault().Nombre) </td>

                                        <td>@item.Detalle </td>
                                        <td>

                                            @if (!item.ProcesadaSAP)
                                            {

                                                <a onclick="javascript: enviarActividadSAP('@item.id')" title="Enviar a SAP"> <img src="~/sap.png" style="width: 20%;height: 25%;border-radius: 30%; cursor: pointer;" /></a>
                                            }&nbsp;
                                        </td>
                                    </tr>
                                }


                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>No. Actividad</th>
                                    <th>Tipo</th>
                                    <th>Fecha Creación</th>
                                    <th>Usuario Creador</th>

                                    <th>Detalle</th>
                                    <th>Acción</th>

                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="modal-xl">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Agregar Actividad</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Tipo de Actividad:</label>
                                <select id="tipoActividad" class="form-control" required>
                                    <option value="1">Llamada Telefónica</option>
                                    <option value="2">Reunión</option>
                                    <option value="3">Tarea</option>
                                    <option value="4">Nota</option>
                                    <option value="5">Campaña</option>
                                    <option value="6">Otros</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label> Detalle:</label>
                                <textarea class="form-control form-control-lg" id="DetalleActividad"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="button" id="GuardarActividad" onclick="javascript: onGuardar()" class="btn btn-primary">Guardar</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>


    <button type="button" onclick="javascript: ImprimirPantalla()" class="btn btn-rounded btn-outline-brand"> Imprimir</button> &nbsp;

    <button type="button" id="Guardar" onclick="javascript: Generar();" class="btn btn-rounded btn-outline-success">Guardar Cambios</button>


</form>

<!-- Modal -->
<div class="modal" id="solicitudModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="solicitudModalLabel">Detalles de la Solicitud de Compra</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Información de la solicitud de compra -->
                <div class="form-group">
                    <label for="solicitudId">ID de la Solicitud:</label>
                    <input type="text" class="form-control" id="solicitudId" readonly>
                </div>
                <div class="form-group">
                    <label for="proveedor">Proveedor:</label>
                    <input type="text" class="form-control" id="proveedor" readonly>
                </div>
                <div class="form-group">
                    <label for="fechaSolicitud">Fecha de la Solicitud:</label>
                    <input type="text" class="form-control" id="fechaSolicitud" readonly>
                </div>
                <div class="form-group">
                    <label for="fechaEntrega">Consecutivo SAP:</label>
                    <input type="text" class="form-control" id="fechaEntrega" readonly>
                </div>

                <!-- Tabla con los artículos de la solicitud -->
                <table class="table table-bordered" id="articulosTabla">
                    <thead>
                        <tr>
                            <th>Código de Artículo</th>
                            <th>Cantidad</th>
                        </tr>
                    </thead>
                    <tbody id="tbodyModalSC">

                        <!-- Puedes agregar más filas aquí según la solicitud -->
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>


<!--HTML PARA IMPRIMIR-->


<div class="html" hidden>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-8">
                            <h2>Traslado # @Model.BTS.DocEntry</h2>
                        </div>
                        <div class="col-md-4">
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-6 pr-1">

                            <div class="form-group">
                                <label>Producto</label>
                                <input type="text" class="form-control form-control-lg" asp-for="Producto" readonly>

                            </div>


                        </div>




                        <div class="col-md-6 pr-1">

                            <div class="form-group">
                                <label>Fecha Creación</label>
                                <input type="date" class="form-control form-control-lg" id="" asp-for="BTS.Fecha" readonly>


                            </div>


                        </div>

                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Tipo Movimiento</label>
                                <select id="idTraslado" class="form-control" asp-for="BTS.TipoMovimiento" disabled="disabled">
                                    <option value="0">Seleccione</option>


                                    <option value="1">1- Solicitud </option>
                                    <option value="2">2- Devolución </option>


                                </select>

                            </div>


                        </div>


                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Técnico</label>
                                <input type="text" class="form-control form-control-lg" id="" asp-for="Tecnico" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pl-1">

                            <div class="form-group">
                                <label>Llamada</label>
                                <input type="text" class="form-control form-control-lg" id="" asp-for="Encabezado.idLlamada" readonly>

                            </div>


                        </div>

                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Cliente</label>
                                <input type="text" class="form-control form-control-lg" id="" asp-for="Cliente" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Bodega Inicial</label>
                                <input type="text" class="form-control form-control-lg" id="" asp-for="BTS.BodegaInicial" readonly>

                            </div>


                        </div>
                        <div class="col-md-4 pl-1">

                            <div class="form-group">
                                <label>Bodega Destino</label>
                                <input type="text" class="form-control form-control-lg" id="" asp-for="BTS.BodegaFinal" readonly>

                            </div>


                        </div>

                        <div class="col-md-4 pr-1">

                            <div class="form-group">
                                <label>Oferta Aprobada</label>
                                <input type="text" class="form-control form-control-lg" id="oAprobada" asp-for="DocNumOfertaAprobada" readonly>

                            </div>


                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-8">
                            <h5>Materiales</h5>
                        </div>
                        <div class="col-md-4">
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table ">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Producto</th>
                                    <th>Cantidad</th>
                                    <th>Ubicación</th>

                                    <th>Cantidad Faltante</th>
                                    <th>Stock</th>


                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.BTS.Detalle)
                                {
                                    <tr>
                                        <td>@item.id</td>
                                        <td>@(item.ItemCode)</td>


                                        <td>@item.Cantidad</td>
                                        @{
                                            var itemCode = item.ItemCode.Trim().Split('|')[0].ToString().Trim();
                                        }
                                        <td>@(Model.ProductosHijos.Where(a => a.codSAP == itemCode).FirstOrDefault() == null ? "" : Model.ProductosHijos.Where(a => a.codSAP == itemCode).FirstOrDefault().Localizacion)</td>

                                        <td>@item.CantidadFaltante.ToString("N", formato)</td>
                                        <td>@(Model.ProductosHijos.Where(a => a.codSAP == itemCode).FirstOrDefault() == null ? "0" : Model.ProductosHijos.Where(a => a.codSAP == itemCode).FirstOrDefault().Stock.ToString("N", formato))</td>

                                    </tr>
                                }


                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>ID</th>
                                    <th>Producto</th>
                                    <th>Cantidad</th>
                                    <th>Ubicación</th>
                                    <th>Cantidad Faltante</th>
                                    <th>Stock</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <br />
    <br />
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 pr-1">

                            _________________________________
                            <br />
                            <h5>Firma Entregado</h5>


                        </div>


                        <div class="col-md-6 pl-1">

                            _________________________________
                            <br />
                            <h5>Firma Recibido</h5>


                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
</div>