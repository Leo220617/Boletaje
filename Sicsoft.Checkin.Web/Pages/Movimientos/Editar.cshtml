@page "{id}"
@model Boletaje.Pages.Movimientos.EditarModel
@{
    ViewData["Title"] = "Generar Movimiento";
}

@section breadcrumb {

    <li class="breadcrumb-item">
        <a asp-page="./Index">BackOffice</a>
    </li>
    <li class="breadcrumb-item active">
        <a>Generar Movimiento</a>
    </li>

}
@using Newtonsoft.Json;
@section styles {
    <style>
        .input {
            width: 40%;
        }

        .input2 {
        }

        .badge {
            background-color: green;
            color: white;
            padding: 4px 8px;
            text-align: center;
            border-radius: 5px;
        }
    </style>

}
 @using System.Globalization;
@{
    NumberFormatInfo formato = new CultureInfo("en-US").NumberFormat;
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";


}
@section scripts
{

    <script>
        $(document).ready(function () {

            jQuery(document).ready(function ($) {
                $(document).ready(function () {
                });
            });

            Recuperar();
            //selectOpcional();

            //ModificaMoneda();
        });

        var Detalles = [];
        var ProductosHijos = [];
        var ProductosHijosInsertar = [];
        var ImpuestosS = [];
        var ManoObra = "";
        var RolAceptacion = false;
        var Rate = 0;
        var banderaConversion = false;
        var regenerar = false;
        var ProductoPadre = [];
        var Errores = [];
        function onAbrirModalDetallado() {
            try {
                $("#exampleModal").modal("show");
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar abrir el modal ' + e

                })
            }
        }
        function Recuperar() {
            try {
                var detalles = JSON.parse($("#Detalle").val());
                ManoObra = JSON.parse($("#ManoObra").val());
                ImpuestosS = JSON.parse($("#Impuestos").val());
                ProductosHijos = JSON.parse($("#ProductosHijos").val());
                ProductosHijosInsertar = JSON.parse($("#ProductosHijosInsertar").val());
                ProductoPadre = JSON.parse($("#ProductoPadre").val());
                Errores = JSON.parse($("#Errores").val());

                for (var i = 0; i < ProductosHijos.length; i++) {
                    if(ProductosHijos[i] != undefined)
                    {
                        if (ProductosHijosInsertar.indexOf(ProductosHijosInsertar.find(a => a.id == ProductosHijos[i].id)) > 0)
                        {
                            ProductosHijosInsertar.splice(ProductosHijosInsertar.indexOf(ProductosHijosInsertar.find(a => a.id == ProductosHijos[i].id)), 1);

                        }
                    }
                    
                }

                if (ProductoPadre.Precio == 0) {
                    $('#PrecioProductoPadre').prop('readonly', false);
                    Swal.fire({
                        icon: 'warning',
                        title: 'Precio Producto',
                        text: 'El Precio del Producto a Reparar es 0, por lo tanto, se debe investigar para poder calcular el precio contra el total del documento '

                    })
                } else {
                    $('#PrecioProductoPadre').prop('readonly', true);
                }
                $("#PrecioProductoPadre").val(parseFloat(ProductoPadre.Precio));

                RolAceptacion = '@Model.RolAceptacion' == 'True';
                $("#Moneda").val("@Model.Input.Moneda");
                console.log(detalles);
                for (var i = 0; i < detalles.length; i++) {
                    var detalle = {
                        id: detalles[i].id,
                        idError: detalles[i].idError,
                        NumLinea: i + 1,
                        idEncabezado: 0,
                        idImpuesto: detalles[i].idImpuesto,
                        ItemCode: detalles[i].ItemCode,
                        ItemName: detalles[i].ItemName,
                        PrecioUnitario: detalles[i].PrecioUnitario,
                        Cantidad: detalles[i].Cantidad,
                        PorDescuento: detalles[i].PorDescuento,
                        Descuento: detalles[i].Descuento,
                        Impuestos: detalles[i].Impuestos,
                        TotalLinea: detalles[i].TotalLinea,
                        Garantia: detalles[i].Garantia,
                        Opcional: detalles[i].Opcional
                    };
                    Detalles.push(detalle);

                }
                if ("@Model.Input.DocEntry" != "0") {
                    regenerar = true;
                }
                RellenaTabla();
                ModificaMoneda(true);
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }



        }

        function RellenaTabla() {
            try {
                var btn = document.getElementById('agregaManoObra');

                var sOptions = '';

                $("#tbody").html('');

                for (var i = 0; i < Detalles.length; i++) {
                    var producto = ProductosHijos.filter(a => a.codSAP == Detalles[i].ItemCode)[0];
                    if (producto == undefined) {
                        producto = ProductosHijosInsertar.filter(a => a.codSAP == Detalles[i].ItemCode)[0];
                    }
                    var ganancia = 0;
                    var gananciaBruta = 0;
                    Rate = producto.Rate;



                    gananciaBruta = parseFloat(Detalles[i].PrecioUnitario) - producto.Costo;

                    ganancia = (gananciaBruta / parseFloat(Detalles[i].PrecioUnitario)) * 100;

                    sOptions += '<tr>'
                    sOptions += '<td align="center "> <a style="margin-left: -1%; position: inherit !important;" onclick="javascript: EliminarLinea(' + i + ')" title="Eliminar" class="fa fa-trash icono"></a> </td>'
                    sOptions += '<td align="left ">' + Detalles[i].ItemCode + ' - ' + Detalles[i].ItemName + '</td>';

                    sOptions += '<td align="right"> <input class="form-control input2" value="' + Detalles[i].PrecioUnitario + '" type="number" step="1" id="' + i + 'PrecioU" onchange="javascript: ModificaLinea(' + i + ', false)"/> </td>';
                    if (producto.Nombre.toUpperCase().includes("mano de obra".toUpperCase()) || ProductosHijos.filter(a => a.codSAP == Detalles[i].ItemCode)[0] == undefined) {
                        if (producto.Nombre.toUpperCase().includes("mano de obra".toUpperCase())) {
                            btn.disabled = true;

                        }
                        sOptions += '<td align="center"> <input class="form-control input2" value="' + Detalles[i].Cantidad + '" type="number" step="1" id="' + i + 'Cantidad" onchange="javascript: ModificaLinea(' + i + ', false)"/></td>';
                    } else {
                        sOptions += '<td align="center"> <input class="form-control input2" value="' + Detalles[i].Cantidad + '" type="number" step="1" id="' + i + 'Cantidad" onchange="javascript: ModificaLinea(' + i + ', false)"/></td>';

                        // sOptions += '<td align="center"> <p id="' + i + 'Cantidad">' + Detalles[i].Cantidad + '</p></td>';
                    }
                    sOptions += '<td align="center"><b>' + producto.Stock + '</b></td>';

                    sOptions += '<td align="center"> <select class=" form-control " id="' + i + 'impSelector" onchange="javascript: ModificaLinea(' + i + ', false)"> <option value="0"> Seleccione </option>';
                    for (var z = 0; z < ImpuestosS.length; z++) {
                        if (Detalles[i].idImpuesto == ImpuestosS[z].id) {
                            sOptions += '<option value="' + ImpuestosS[z].id + '" selected> ' + ImpuestosS[z].CodSAP + '</option>'

                        } else {
                            if (ImpuestosS[z].Tarifa == 13) {
                                sOptions += '<option selected value="' + ImpuestosS[z].id + '" > ' + ImpuestosS[z].CodSAP + '</option>'

                            } else {
                                sOptions += '<option value="' + ImpuestosS[z].id + '" > ' + ImpuestosS[z].CodSAP + '</option>'

                            }

                        }
                    }
                    sOptions += '</select> </td>';



                    sOptions += '<td align="right"> <p id="' + i + 'Imp">' + Detalles[i].Impuestos + '</p></td>';
                    sOptions += '<td align="right"> <input class="form-control input2" disabled readonnly value="' + Detalles[i].PorDescuento + '" type="number" step="1" id="' + i + 'PorDesc" onchange="javascript: ModificaLinea(' + i + ', false)"/> </td>';

                    sOptions += '<td align="right"> <p id="' + i + 'Desc">' + Detalles[i].Descuento + '</p></td>';
                    sOptions += '<td align="right"><p id="' + i + 'TLinea">' + Detalles[i].TotalLinea + '</p></td>';
                    sOptions += '<td align="center">  <input class="form-check-input" type="checkbox" onclick="javascript: ModificaLinea(' + i + ', false)" style="position: unset;" id="' + i + 'check"><span class="form-check-sign"></span> </td>';
                    if (Detalles[i].Opcional) {

                        sOptions += '<td align="center">  <input class="form-check-input" type="checkbox" checked = "true" onclick="javascript: ModificaLinea(' + i + ', false)" style="position: unset;" id="' + i + 'checkOpcional"><span class="form-check-sign"></span> </td>';


                    } else {

                        sOptions += '<td align="center">  <input class="form-check-input" type="checkbox" onclick="javascript: ModificaLinea(' + i + ', false)" style="position: unset;" id="' + i + 'checkOpcional"><span class="form-check-sign"></span> </td>';
                    }

                    sOptions += '<td align="right"><p id="' + i + 'ganancia"> ' + Math.round(ganancia * 100) / 100 + ' %</p> </td>';
                    sOptions += '<td align="right"><p id="' + i + 'gananciaM">' + producto.PorMinimo + ' %</p></td>';


                    sOptions += '</tr>'

                    if (Errores.filter(a => a.id == Detalles[i].idError)[0] != undefined) {
                        sOptions += '<tr> <td colspan="14"><b>Diagnóstico:</b> ' + Errores.filter(a => a.id == Detalles[i].idError)[0].Descripcion + ' -> ' + Errores.filter(a => a.id == Detalles[i].idError)[0].Diagnostico + ' </td></tr>';

                    } else {
                        sOptions += '<tr> <td colspan="14"><b>Diagnóstico:</b> </td></tr>';
                    }

                }
                $("#tbody").html(sOptions);

                // selectOpcional();


            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }



        }
        function selectOpcional() {
            try {
                for (var i = 0; i < Detalles.length; i++) {
                    if (Detalles[i].Opcional) {
                        var checkbox2 = document.getElementById(i + "checkOpcional");
                        checkbox2.checked = true;
                    }
                    ModificaLinea(i, "false");

                }

                ModificaTodo();

            }
            catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }
        }
        function ModificaLinea(i, ban) {
            try {
                var Impuestos = 0;
                var Descuentos = 0;
                var TotalLinea = 0;
                var Subtotal = 0;
                try {
                    var checkbox1 = document.getElementById(i + "check");
                    var checkbox2 = document.getElementById(i + "checkOpcional");
                    Detalles[i].Garantia = checkbox1.checked;
                    Detalles[i].Opcional = checkbox2.checked;
                } catch (e) {
                    Detalles[i].Garantia = false;
                    Detalles[i].Opcional = false;
                    console.log(e);
                }


                var producto = ProductosHijos.filter(a => a.codSAP == Detalles[i].ItemCode)[0];
                if (producto == undefined) {
                    producto = ProductosHijosInsertar.filter(a => a.codSAP == Detalles[i].ItemCode)[0];
                }
                var ganancia = 0;
                var gananciaBruta = 0;
                var banderaConverAntes = banderaConversion;
                if (ban == 'false' || ban == false) {
                    banderaConversion = false;
                }




                if (banderaConversion) {
                    var PrecioUnitario = parseFloat($("#" + i + "PrecioU").val());
                    if ($("#Moneda").val() == "COL") {
                        $("#" + i + "PrecioU").val((PrecioUnitario * Rate).toFixed(2))
                    } else {
                        $("#" + i + "PrecioU").val((PrecioUnitario / Rate).toFixed(4))

                    }
                }

                if (producto.Nombre.toUpperCase().includes("mano de obra".toUpperCase()) || ProductosHijos.filter(a => a.codSAP == Detalles[i].ItemCode)[0] == undefined) {
                    Subtotal = $("#" + i + "PrecioU").val() * $("#" + i + "Cantidad").val();

                } else {
                    Subtotal = $("#" + i + "PrecioU").val() * $("#" + i + "Cantidad").val();

                    // Subtotal = $("#" + i + "PrecioU").val() * $("#" + i + "Cantidad").text();

                }




                //if (banderaConversion) {
                if ($("#Moneda").val() == "COL") {
                    gananciaBruta = parseFloat($("#" + i + "PrecioU").val()) - (producto.Costo);

                } else {
                    gananciaBruta = parseFloat($("#" + i + "PrecioU").val()) - (producto.Costo / Rate);


                }
                //} else {
                //    gananciaBruta = parseFloat($("#" + i + "PrecioU").val()) - (producto.Costo);
                //}

                ganancia = (gananciaBruta / parseFloat($("#" + i + "PrecioU").val())) * 100;

                Descuentos = ($("#" + i + "PorDesc").val() / 100) * Subtotal;
                var idImpuesto = ImpuestosS.find(a => a.id == $("#" + i + "impSelector").val());
                if (idImpuesto != undefined) {
                    Detalles[i].idImpuesto = idImpuesto.id;
                    Impuestos = (Subtotal - Descuentos) * (idImpuesto.Tarifa / 100);

                } else {
                    Impuestos = 0;
                }
                TotalLinea = (Subtotal - Descuentos) + Impuestos;

                Detalles[i].PrecioUnitario = $("#" + i + "PrecioU").val();
                if (producto.Nombre.toUpperCase().includes("mano de obra".toUpperCase()) || ProductosHijos.filter(a => a.codSAP == Detalles[i].ItemCode)[0] == undefined) {
                    Detalles[i].Cantidad = $("#" + i + "Cantidad").val();

                } else {
                    Detalles[i].Cantidad = $("#" + i + "Cantidad").val();

                    // Detalles[i].Cantidad = $("#" + i + "Cantidad").text();

                }
                Detalles[i].PorDescuento = $("#" + i + "PorDesc").val();
                Detalles[i].Descuento = Descuentos;
                Detalles[i].Impuestos = Impuestos;
                Detalles[i].TotalLinea = TotalLinea;

                $("#" + i + "TLinea").text(TotalLinea.toFixed(2));
                $("#" + i + "Desc").text(Descuentos.toFixed(2));
                $("#" + i + "Imp").text(Impuestos.toFixed(2));
                $("#" + i + "ganancia").text(ganancia.toFixed(2) + " %");

                if (ganancia < producto.PorMinimo) {
                    $("#" + i + "ganancia").css("color", "red");
                } else {
                    $("#" + i + "ganancia").css("color", "green");

                }
                banderaConversion = banderaConverAntes;
                ModificaTodo();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }

        }

        function ModificaTodo() {
            try {
                var SubTotal = 0;
                var Descuentos = 0;
                var Impuestos = 0;
                var Total = 0;
                var PorDescuento = 0;

                PorDescuento = $("#descGeneral").val();
                for (var i = 0; i < Detalles.length; i++) {
                    var ImpLocal = parseFloat($("#" + i + "Imp").text());


                    var DescuentoLocal = parseFloat($("#" + i + "Desc").text());

                    var TotalLocal = parseFloat($("#" + i + "TLinea").text());

                    var subtotalLocal = (TotalLocal - ImpLocal);

                    var checkbox1 = document.getElementById(i + "check");
                    if (Detalles[i].Garantia) {
                        checkbox1.checked = true;
                    } else {
                        SubTotal += subtotalLocal;
                        Impuestos += ImpLocal;
                        Total += subtotalLocal + ImpLocal;
                    }
                }

                if (PorDescuento > 0) {
                    Descuentos = SubTotal * (PorDescuento / 100);
                    Impuestos = (SubTotal - Descuentos) * 0.13;
                    Total = (SubTotal - Descuentos) + Impuestos;
                }

                $("#SubtotalGeneral").text(SubTotal.toFixed(2));
                $("#DescGeneral").text(Descuentos.toFixed(2));
                $("#ImpGeneral").text(Impuestos.toFixed(2));
                $("#TotalGeneral").text(Total.toFixed(2));
                CalculaSemaforo();
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }

        }

        function Validar(Detalles) {
            try {
                var bandera = true;
                for (var i = 0; i < Detalles.length; i++) {
                    var producto = ProductosHijos.filter(a => a.codSAP == Detalles[i].ItemCode)[0];
                    if (producto == undefined) {
                        producto = ProductosHijosInsertar.filter(a => a.codSAP == Detalles[i].ItemCode)[0];
                    }
                    var ganancia = 0;
                    var gananciaBruta = 0;

                    gananciaBruta = parseFloat($("#" + i + "PrecioU").val()) - producto.Costo;

                    ganancia = (gananciaBruta / parseFloat($("#" + i + "PrecioU").val())) * 100;
                    if (ganancia < producto.PorMinimo) {
                        bandera = false;
                    }

                    if (Detalles[i].TotalLinea < 1 && Detalles[i].Garantia == false) { 
                        bandera = false;
                    }
                }

                return bandera;
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }

        }

        function Generar(generar) {
            try {
                var btn = document.getElementById('Guardar1');
                var btn2 = document.getElementById('Guardar2');

                btn.disabled = true;
                btn2.disabled = true;
                var recibido =
                {
                    id: $("#idGeneral").val(),
                    CardCode: "",
                    CardName: "",
                    NumLlamada: "",
                    Fecha: new Date(),
                    TipoMovimiento: 0,
                    Comentarios: $("#comentarios").val(),
                    CreadoPor: "0",
                    Subtotal: $("#SubtotalGeneral").text(),
                    PorDescuento: $("#descGeneral").val(),
                    Descuento: $("#DescGeneral").text(),
                    Impuestos: $("#ImpGeneral").text(),
                    TotalComprobante: $("#TotalGeneral").text(),
                    Moneda: $("#Moneda").val(),
                    idCondPago: $("#condPago").val(),
                    idGarantia: $("#tipoGarantia").val(),
                    idTiemposEntregas: $("#tiemposEntrega").val(),
                    idDiasValidos: $("#DiasValidos").val(),
                    Generar: generar,
                    Regenerar: regenerar,
                    idLlamada: $("#idLlamada").val(),
                    StatusLlamada: $("#statusLlamada").val(),
                    TipoCaso: $("#tipoCaso").val(),
                    Detalle: Detalles

                }

                if (generar) {
                    if (!RolAceptacion) {
                        if (Validar(Detalles)) {
                            Swal.fire({
                                title: '¿Desea guardar los cambios?',
                                showDenyButton: true,
                                showCancelButton: false,
                                confirmButtonText: `Aceptar`,
                                denyButtonText: `Cancelar`,
                                customClass: {
                                    confirmButton: 'swalBtnColor',
                                    denyButton: 'swalDeny'
                                },
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    var recibidos = JSON.stringify(recibido);
                                    var jsonString = JSON.stringify(recibido);
                                    // Comprimir la cadena JSON utilizando gzip
                                    var compressedData = pako.gzip(jsonString);

                                    // Convertir los datos comprimidos a un ArrayBuffer (opcional, depende de tu caso de uso)
                                    var compressedArrayBuffer = compressedData.buffer;

                                    $.ajax({
                                        type: 'POST',

                                        url: '@Url.Page("Editar", "Generar")',
                                        dataType: 'json',
                                        contentType: 'application/json',
                                        data: compressedArrayBuffer,
                                        processData: false,
                                        headers: {
                                            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                        },
                                        success: function (json) {

                                            $("#divProcesando").hide();

                                            if ($('.modal-backdrop').is(':visible')) {

                                                $('body').removeClass('modal-open');
                                                $('.modal-backdrop').hide();
                                            }
                                            console.log("resultado " + json.mensaje);
                                            if (json.success == true) {
                                                Swal.fire({
                                                    title: "Ha sido generado con éxito",

                                                    icon: 'success',
                                                    showCancelButton: false,

                                                    confirmButtonText: 'OK',
                                                    customClass: {
                                                        confirmButton: 'swalBtnColor',

                                                    },
                                                }).then((result) => {
                                                    if (result.isConfirmed) {
                                                        //location.reload();
                                                        window.location.href = window.location.href.split("/Editar")[0];
                                                    }
                                                })

                                            } else {
                                                Swal.fire({
                                                    icon: 'error',
                                                    title: 'Oops...',
                                                    text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                                })
                                            }
                                        },

                                        beforeSend: function (xhr) {

                                            $("#divProcesando").modal("show");
                                        },
                                        complete: function () {

                                        },
                                        error: function (error) {

                                        }
                                    });
                                }
                                else {
                                    btn.disabled = false;
                                    btn2.disabled = false;

                                }

                            }
                            )
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Los margenes de ganancia no son correcto, favor verificar '

                            })
                        }
                    } else {
                        if (Validar(Detalles)) {
                            Swal.fire({
                                title: '¿Desea guardar los cambios?',
                                showDenyButton: true,
                                showCancelButton: false,
                                confirmButtonText: `Aceptar`,
                                denyButtonText: `Cancelar`,
                                customClass: {
                                    confirmButton: 'swalBtnColor',
                                    denyButton: 'swalDeny'
                                },
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    var recibidos = JSON.stringify(recibido);
                                    var jsonString = JSON.stringify(recibido);
                                    // Comprimir la cadena JSON utilizando gzip
                                    var compressedData = pako.gzip(jsonString);

                                    // Convertir los datos comprimidos a un ArrayBuffer (opcional, depende de tu caso de uso)
                                    var compressedArrayBuffer = compressedData.buffer;
                                    $.ajax({
                                        type: 'POST',

                                        url: '@Url.Page("Editar", "Generar")',
                                        dataType: 'json',
                                        contentType: 'application/json',
                                        data: compressedArrayBuffer,
                                        processData: false,
                                        headers: {
                                            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                        },
                                        success: function (json) {

                                            $("#divProcesando").hide();

                                            if ($('.modal-backdrop').is(':visible')) {

                                                $('body').removeClass('modal-open');
                                                $('.modal-backdrop').hide();
                                            }
                                            console.log("resultado " + json.mensaje);
                                            if (json.success == true) {
                                                Swal.fire({
                                                    title: "Ha sido generado con éxito",

                                                    icon: 'success',
                                                    showCancelButton: false,

                                                    confirmButtonText: 'OK',
                                                    customClass: {
                                                        confirmButton: 'swalBtnColor',

                                                    },
                                                }).then((result) => {
                                                    if (result.isConfirmed) {
                                                        //location.reload();
                                                        window.location.href = window.location.href.split("/Editar")[0];
                                                    }
                                                })

                                            } else {
                                                Swal.fire({
                                                    icon: 'error',
                                                    title: 'Oops...',
                                                    text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                                })
                                            }
                                        },

                                        beforeSend: function (xhr) {

                                            $("#divProcesando").modal("show");
                                        },
                                        complete: function () {

                                        },
                                        error: function (error) {

                                        }
                                    });
                                }
                                else {
                                    btn.disabled = false;
                                    btn2.disabled = false;

                                }

                            }
                            )
                        } else {
                            Swal.fire({
                                title: '¿Desea aprobar los margenes actuales?',
                                showDenyButton: true,
                                showCancelButton: false,
                                confirmButtonText: `Aceptar`,
                                denyButtonText: `Cancelar`,
                                customClass: {
                                    confirmButton: 'swalBtnColor',
                                    denyButton: 'swalDeny'
                                },
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    Swal.fire({
                                        title: '¿Desea guardar los cambios?',
                                        showDenyButton: true,
                                        showCancelButton: false,
                                        confirmButtonText: `Aceptar`,
                                        denyButtonText: `Cancelar`,
                                        customClass: {
                                            confirmButton: 'swalBtnColor',
                                            denyButton: 'swalDeny'
                                        },
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                             
                                            var recibidos = JSON.stringify(recibido);
                                            var jsonString = JSON.stringify(recibido);
                                            // Comprimir la cadena JSON utilizando gzip
                                            var compressedData = pako.gzip(jsonString);

                                            // Convertir los datos comprimidos a un ArrayBuffer (opcional, depende de tu caso de uso)
                                            var compressedArrayBuffer = compressedData.buffer;
                                            $.ajax({
                                                type: 'POST',

                                                url: '@Url.Page("Editar", "Generar")',
                                                dataType: 'json',
                                                contentType: 'application/json',
                                                data: compressedArrayBuffer,
                                                processData: false,
                                                headers: {
                                                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                                },
                                                success: function (json) {

                                                    $("#divProcesando").hide();

                                                    if ($('.modal-backdrop').is(':visible')) {

                                                        $('body').removeClass('modal-open');
                                                        $('.modal-backdrop').hide();
                                                    }
                                                    console.log("resultado " + json.mensaje);
                                                    if (json.success == true) {
                                                        Swal.fire({
                                                            title: "Ha sido generado con éxito",

                                                            icon: 'success',
                                                            showCancelButton: false,

                                                            confirmButtonText: 'OK',
                                                            customClass: {
                                                                confirmButton: 'swalBtnColor',

                                                            },
                                                        }).then((result) => {
                                                            if (result.isConfirmed) {
                                                                //location.reload();
                                                                window.location.href = window.location.href.split("/Editar")[0];
                                                            }
                                                        })

                                                    } else {
                                                        Swal.fire({
                                                            icon: 'error',
                                                            title: 'Oops...',
                                                            text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                                        })
                                                    }
                                                },

                                                beforeSend: function (xhr) {

                                                    $("#divProcesando").modal("show");
                                                },
                                                complete: function () {

                                                },
                                                error: function (error) {

                                                }
                                            });
                                        }
                                        else {
                                            btn.disabled = false;
                                            btn2.disabled = false;

                                        }

                                    })
                                } else {
                                    btn.disabled = false;
                                    btn2.disabled = false;
                                }

                            }
                            )
                        }
                    }

                } else {
                    Swal.fire({
                        title: '¿Desea guardar los cambios?',
                        showDenyButton: true,
                        showCancelButton: false,
                        confirmButtonText: `Aceptar`,
                        denyButtonText: `Cancelar`,
                        customClass: {
                            confirmButton: 'swalBtnColor',
                            denyButton: 'swalDeny'
                        },
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var recibidos = JSON.stringify(recibido);

                            $.ajax({
                                type: 'POST',

                                url: '@Url.Page("Editar", "Generar")',
                                dataType: 'json',
                                data: { recibidos: recibidos.toString() },
                                headers: {
                                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                },
                                success: function (json) {

                                    $("#divProcesando").hide();

                                    if ($('.modal-backdrop').is(':visible')) {

                                        $('body').removeClass('modal-open');
                                        $('.modal-backdrop').hide();
                                    }
                                    console.log("resultado " + json.mensaje);
                                    if (json.success == true) {
                                        Swal.fire({
                                            title: "Ha sido generado con éxito",

                                            icon: 'success',
                                            showCancelButton: false,

                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swalBtnColor',

                                            },
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                //location.reload();
                                                window.location.href = window.location.href.split("/Editar")[0];
                                            }
                                        })

                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                        })
                                    }
                                },

                                beforeSend: function (xhr) {

                                    $("#divProcesando").modal("show");
                                },
                                complete: function () {

                                },
                                error: function (error) {

                                }
                            });
                        }
                        else {
                            btn.disabled = false;
                            btn2.disabled = false;

                        }

                    }
                    )
                }


                btn.disabled = false;
                btn2.disabled = false;
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }


        }

        function ModificaMoneda(ban) {
            try {
                if ($("#Moneda").val() == "COL") {
                    banderaConversion = true;

                    $(".moneda").text("₡");
                } else {
                    banderaConversion = true;
                    $(".moneda").text("$")
                }
                if (!ban) {
                    for (var i = 0; i < Detalles.length; i++) {
                        ModificaLinea(i, "true");

                    }
                } else {
                    for (var i = 0; i < Detalles.length; i++) {
                        ModificaLinea(i, "false");

                    }
                }

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }

        }

        function MeterManoObra() {
            try {
                var btn = document.getElementById('agregaManoObra');
                btn.disabled = true;
                var Precio = 0;
                if ($("#Moneda").val() != "COL") {
                    Precio = ManoObra.Precio / ManoObra.Rate;
                } else {
                    Precio = ManoObra.Precio;
                }
                var detalle = {
                    id: ManoObra.id,
                    idError: 0,
                    NumLinea: Detalles.length + 1,
                    idEncabezado: 0,
                    ItemCode: ManoObra.codSAP,
                    ItemName: ManoObra.Nombre,
                    PrecioUnitario: Precio,
                    Cantidad: 1,
                    PorDescuento: 0,
                    Descuento: 0,
                    Impuestos: 0,
                    TotalLinea: 0,
                    Garantia: false,
                    Opcional: false
                };
                Detalles.push(detalle);
                RellenaTabla();

                var posicion = Detalles.indexOf(Detalles.find(a => a.ItemCode == detalle.ItemCode));
                ModificaLinea(posicion, "false");

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
            }

        }

    </script>


    <script>
        function onChangeProducto() {
            try {
                var idB = $("#Busqueda").val().toString().split("_")[0].trim();

                var Prod = ProductosHijosInsertar.find(a => a.id == parseInt(idB));
                $("#id").text(idB);
                $("#Nombre").text(Prod.codSAP + " - " + Prod.Nombre);
                $("#cantidad").text(Prod.Stock);

                $("#Busqueda").val("");
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }

        }
        function LimpiarDatos() {
            try {
                $("#id").text("");
                $("#Nombre").text("");
                $("#cantidad").text("");

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e + ' - ' + e.stack

                })
            }
        }

        function InsertarProductoTabla() {
            try {

                if (ValidarAntesTabla()) {

                    var idB = $("#id").text();
                    var Prod = ProductosHijosInsertar.find(a => a.id == parseInt(idB));


                    var detalle = {
                        id: 0,
                        idError: 0,
                        NumLinea: Detalles.length + 1,
                        idEncabezado: 0,
                        idImpuesto: 0,
                        ItemCode: Prod.codSAP,
                        ItemName: Prod.Nombre,
                        PrecioUnitario: $("#Moneda").val() == "COL" ? Prod.Precio.toFixed(2) : (Prod.Precio / Rate).toFixed(2),
                        Cantidad: 1,
                        PorDescuento: 0,
                        Descuento: 0,
                        Impuestos: 0,
                        TotalLinea: 0,
                        Garantia: false,
                        Opcional: false
                    };
                    Detalles.push(detalle);

                    RellenaTabla();
                    LimpiarDatos();

                    var posicion = Detalles.indexOf(Detalles.find(a => a.ItemCode == detalle.ItemCode));
                    ModificaLinea(posicion, "false");
                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e + ' - ' + e.stack

                })
            }

        }
        function ValidarAntesTabla() {
            try {
                if ($("#Nombre").text().trim() == "") {
                    return false;
                }
                //else if (parseInt($("#cantidad").text()) <= 0) {
                //    Swal.fire({
                //        icon: 'error',
                //        title: 'Oops...',
                //        text: 'Producto sin stock'

                //    })
                //    return false;
                //}
                else {
                    return true;
                }

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })
                return false;
            }
        }

        function EliminarLinea(i) {
            try {
                var btn = document.getElementById('agregaManoObra');

                var producto = ProductosHijos.filter(a => a.codSAP == Detalles[i].ItemCode)[0];
                if (producto != undefined) {
                    if (producto.Nombre.toUpperCase().includes("mano de obra".toUpperCase())) {
                        btn.disabled = false;
                    }
                }
                Detalles.splice(i, 1);
                RellenaTabla();
                for (var i = 0; i < Detalles.length; i++) {
                    ModificaLinea(i, "false");

                }
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })

            }
        }

        function DevuelveTotal() {
            try {
                var total = 0;
                for (var i = 0; i < Detalles.length; i++) {
                    total += Detalles[i].TotalLinea;
                }
                var descuento = parseFloat($("#DescGeneral").text());
                total = parseFloat($("#TotalGeneral").text());
                return total;
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })

            }
        }
        function CalculaSemaforo() {
            try {
                var PrecioMaquina = parseFloat($("#PrecioProductoPadre").val());
                if ($("#Moneda").val() != "COL") {
                    PrecioMaquina = PrecioMaquina / Rate;
                }
                var PrecioTotalDoc = parseFloat(DevuelveTotal());

                var Semaforo = PrecioMaquina != 0 ? (PrecioTotalDoc / PrecioMaquina) * 100 : 0;
                $('#divSemaforo').css('width', Semaforo + '%');
                $('#spanSemaforo').text(Semaforo.toFixed(0) + '%');

                if (Semaforo > 0 && Semaforo < 40) {
                    $('#divSemaforo').attr('class', 'progress-bar bg-success');
                    $('#spanSemaforo').attr('class', 'badge bg-success');


                } else if (Semaforo > 40 && Semaforo < 80) {
                    $('#divSemaforo').attr('class', 'progress-bar bg-warning');
                    $('#spanSemaforo').attr('class', 'badge bg-warning');

                } else {
                    $('#divSemaforo').attr('class', 'progress-bar bg-danger');
                    $('#spanSemaforo').attr('class', 'badge bg-danger');

                }

            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error  ' + e

                })

            }
        }
    </script>
    <script>
        function enviarActividadSAP(id) {
            try {
                var modale = $("#divProcesando");
                $.ajax({
                    type: 'GET',

                    url: '@Url.Page("Editar", "EnviarActividadSAP")',
                    dataType: 'json',
                    data: { idB: id },
                    headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (json) {

                        modale.modal("hide");
                        $('body').removeClass('modal-open');//eliminamos la clase del body para poder hacer scroll
                        $('.modal-backdrop').remove();//eliminamos el backdrop del modal


                        console.log(json);
                        if (json.procesadaSAP) {
                            Swal.fire({
                                title: "Ha sido enviado con éxito",

                                icon: 'success',
                                showCancelButton: false,
                                customClass: {
                                    confirmButton: 'swalBtnColor',

                                },
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Ha ocurrido un error al intentar enviar a SAP, revisa la bitacora de errores'

                            })
                        }


                    },

                    beforeSend: function (xhr) {
                        modale.modal("show");
                    },
                    complete: function () {
                        modale.modal("hide");

                    },
                    error: function (error) {
                        modale.modal("hide");
                    }
                });
            } catch (e) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error ' + e

                })
            }

        }

        var btn = document.getElementById('Guardar');

        function onclickModal() {
            $('#modal-xl').modal('show');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }

        function ValidaForm(recibido1) {
            if (recibido1.idLlamada == undefined || recibido1.idLlamada == "") {
                return false;
            } else if (recibido1.Detalle == undefined || recibido1.Detalle == "") {
                return false;

            }




            return true;

        }

        function onGuardar() {
            try {
                btn.disabled = true;


                var recibido1 =
                {
                    id: 0,
                    idLlamada: $("#idLlamadaActividad").val(),
                    TipoActividad: $("#tipoActividad").val(),
                    Detalle: $("#DetalleActividad").val(),

                }

                if (!ValidaForm(recibido1)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Faltan datos por rellenar '

                    })
                } else {
                    Swal.fire({
                        title: '¿Desea guardar los cambios?',
                        showDenyButton: true,
                        showCancelButton: false,
                        confirmButtonText: `Aceptar`,
                        denyButtonText: `Cancelar`,
                        customClass: {
                            confirmButton: 'swalBtnColor',
                            denyButton: 'swalDeny'
                        },
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var recibidos = recibido1;

                            $.ajax({
                                type: 'POST',

                                url: '@Url.Page("Editar", "GenerarActividad")',
                                dataType: 'json',
                                data: { recibido: recibidos },
                                headers: {
                                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                                },
                                success: function (json) {

                                    $("#divProcesando").hide();

                                    if ($('.modal-backdrop').is(':visible')) {

                                        $('body').removeClass('modal-open');
                                        $('.modal-backdrop').hide();
                                    }
                                    console.log("resultado " + json.mensaje);
                                    if (json.success == true) {
                                        Swal.fire({
                                            title: "Ha sido generado con éxito",

                                            icon: 'success',
                                            showCancelButton: false,

                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swalBtnColor',

                                            },
                                        }).then((result) => {
                                            if (result.isConfirmed) {

                                                location.reload();
                                            }
                                        })

                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: 'Ha ocurrido un error al intentar guardar ' + json.mensaje

                                        })
                                    }
                                },

                                beforeSend: function (xhr) {

                                    $("#divProcesando").modal("show");
                                },
                                complete: function () {
                                    $("#divProcesando").modal("hide");

                                },
                                error: function (error) {
                                    $("#divProcesando").modal("hide");

                                    btn.disabled = false;

                                }
                            });
                        } else {
                            $("#divProcesando").modal("hide");

                            btn.disabled = false;
                        }
                    }
                    )
                }


                btn.disabled = false;
            } catch (e) {
                $("#divProcesando").modal("hide");

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar guardar ' + e

                })
                btn.disabled = false;

            }



        }

    </script>
}
@using System.Globalization;
@using Microsoft.AspNetCore.Http
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Security.Claims;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Configuration;
@using Refit;
@inject IHttpContextAccessor httpContextAccessor
@using Newtonsoft.Json;
@{
    var Roles = ((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == "Roles").Select(s1 => s1.Value).FirstOrDefault().Split("|");
}

@if (!string.IsNullOrEmpty(Roles.Where(a => a == "56").FirstOrDefault()) && (Model.Input.TipoMovimiento == 1 || Model.Input.TipoMovimiento == 3))
{
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5 class="title">Histórico de Llamada</h5>
                        </div>

                        <div class="col-sm-6" style="text-align: right">
                        </div>
                    </div>


                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label># Factura de Venta:</label>
                                <input type="text" class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Factura" readonly>

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Fecha de Venta:</label>
                                <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Fecha_Factura" readonly>

                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Inversión en Reparaciones:</label>
                                <br>
                                <label><b>@Model.Historico.Historico.FirstOrDefault().Total_Revisiones.ToString("N", formato)</b></label>

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Fecha Ult. Revisión:</label>
                                <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().fecha_Ultima_Rev" readonly>

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Total de Revisiones:</label>
                                <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Cantidad_Revisiones" readonly>

                            </div>
                        </div>
                        @*
                    <div class="col-md-4">
                    <div class="form-group">
                    <label>Ult. Técnico:</label>
                    <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Ultimo_Tecnico" readonly>

                    </div>
                    </div>*@
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Horas Actuales:</label>
                                <input class="form-control form-control-lg" id="cardcode1" asp-for="Historico.Historico.FirstOrDefault().Horas" readonly>

                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="form-group">
                                <label>Observaciones Ult. Reparación:</label>
                                <textarea class="form-control form-control-lg" asp-for="Historico.Historico.FirstOrDefault().Obse_Ultima_Repara" readonly> </textarea>

                            </div>
                            <a href="#" onclick="javascript: onAbrirModalDetallado() ">Ver más detallado</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Histórico Llamada Detallado</h5>

                </div>
                <div class="modal-body">
                    @{
                        var i = 0;
                    }
                    <div style=" overflow-y:scroll;    z-index: 5; height: 500px;">
                        <div class="panel-group" id="accordion">
                            @foreach (var item in Model.HistoricoDetallado.Historico.OrderBy(a => a.Fecha).GroupBy(a => a.Boleta))
                            {
                                i++;
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h4 class="panel-title">
                                            <a data-toggle="collapse" href="#collapse@(i)">Boleta # @item.Key</a>
                                        </h4>
                                    </div>
                                    <div id="collapse@(i)" class="panel-collapse collapse in">
                                        <div class="panel-body">

                                            @foreach (var item3 in item.GroupBy(a => a.DocEntryEntrega))
                                            {
                                                <table style="width: 100%;">
                                                    <thead>
                                                        <tr>
                                                            <th align="center">Orden</th>
                                                            <th align="center">Fecha</th>
                                                            <th align="center">Artículos</th>
                                                            <th align="center">Descripción</th>
                                                            <th align="center">Garantía</th>
                                                            <th align="center">Facturado</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr id="contenido(@i)">
                                                            <td align="center">
                                                                @item3.Key
                                                            </td>
                                                            <td align="center">@item3.FirstOrDefault().Fecha.ToString("dd/MM/yyyy")</td>
                                                            <td>
                                                                <table style="width: 100%;">
                                                                    @foreach (var item2 in item3)
                                                                    {
                                                                        <tr>
                                                                            <td align="left">@item2.Articulo</td>


                                                                        </tr>
                                                                    }

                                                                </table>
                                                            </td>
                                                            <td>

                                                                <table style="width: 100%;">
                                                                    @foreach (var item2 in item3)
                                                                    {
                                                                        <tr>
                                                                            <td align="left">@item2.Descripcion</td>



                                                                        </tr>
                                                                    }

                                                                </table>
                                                            </td>

                                                            <td>

                                                                <table style="width: 100%;">
                                                                    @foreach (var item2 in item3)
                                                                    {
                                                                        <tr>
                                                                            <td align="right">@item2.Garantia.ToString("N", formato)</td>



                                                                        </tr>
                                                                    }

                                                                </table>
                                                            </td>

                                                            <td>

                                                                <table style="width: 100%;">
                                                                    @foreach (var item2 in item3)
                                                                    {
                                                                        <tr>
                                                                            <td align="right">@item2.Facturado.ToString("N", formato)</td>



                                                                        </tr>
                                                                    }

                                                                </table>
                                                            </td>

                                                        </tr>
                                                        <tr>
                                                            <td colspan="4" align="center"><b>Total Boleta</b></td>
                                                            <td align="right">@item3.Sum(a => a.Garantia).ToString("N", formato)</td>
                                                            <td align="right">@item3.Sum(a => a.Facturado).ToString("N", formato)</td>

                                                        </tr>
                                                    </tbody>
                                                </table>
                                            }



                                        </div>
                                    </div>
                                </div>

                            }
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    <a data-toggle="collapse" href="#collapse0">Gran Total</a>
                                </h4>
                            </div>
                            <div id="collapse0" class="panel-collapse collapse in show">
                                <div class="panel-body">
                                    <table style="width: 100%;">
                                        <thead>
                                            <tr>
                                                <th align="center"></th>
                                                <th align="center"></th>
                                                <th align="center"></th>
                                                <th align="center"></th>
                                                <th align="center">Garantía</th>
                                                <th align="center">Facturado</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td colspan="4" style="text-align: center;"><b>Gran Total</b></td>
                                                <td style="text-align: right;">@Model.HistoricoDetallado.Historico.Sum(a => a.Garantia).ToString("N", formato)</td>
                                                <td style="text-align: right;">@Model.HistoricoDetallado.Historico.Sum(a => a.Facturado).ToString("N", formato)</td>

                                            </tr>
                                        </tbody>

                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>

                </div>
            </div>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Roles.Where(a => a == "62").FirstOrDefault()))
{
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5 class="title">Condiciones de Venta</h5>
                        </div>

                        <div class="col-sm-6" style="text-align: right">
                        </div>
                    </div>


                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Condiciones de Pago:</label>
                                <select id="condPago" class="form-control" required asp-for="Input.idCondPago">
                                    <option value="0">Seleccione</option>

                                    @foreach (var item in Model.Condiciones)
                                    {
                                        <option value="@item.id">@item.Nombre</option>
                                    }

                                </select>

                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Tipo de Garantia:</label>
                                <select id="tipoGarantia" class="form-control" required asp-for="Input.idGarantia">
                                    <option value="0">Seleccione</option>


                                    @foreach (var item in Model.Garantias)
                                    {
                                        <option value="@item.id">@item.Nombre</option>
                                    }


                                </select>

                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Tiempos de Entrega:</label>
                                <select id="tiemposEntrega" class="form-control" required asp-for="Input.idTiemposEntregas">
                                    <option value="0">Seleccione</option>

                                    @foreach (var item in Model.Tiempos)
                                    {
                                        <option value="@item.id">@item.Nombre</option>
                                    }


                                </select>

                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Dias Valido:</label>
                                <select id="DiasValidos" class="form-control" required asp-for="Input.idDiasValidos">
                                    <option value="0">Seleccione</option>
                                    @foreach (var item in Model.DiasValidos)
                                    {
                                        <option value="@item.id">@item.Nombre</option>
                                    }


                                </select>

                            </div>
                        </div>





                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-sm-6">
                        <h5 class="title">Llamada Servicio</h5>
                    </div>

                    <div class="col-sm-6" style="text-align: right">
                    </div>
                </div>


            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Estado de la Llamada:</label>
                            <select id="statusLlamada" class="form-control" asp-for="Llamada.Status" required>
                                <option value="0">Seleccione</option>
                                @foreach (var item in Model.Status)
                                {
                                    <option value="@item.idSAP">@item.Nombre</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Tipo de Caso:</label>
                            <select id="tipoCaso" class="form-control" required asp-for="Llamada.TipoCaso">
                             @*    <option value="0">Seleccione</option> *@


                                @foreach (var item in Model.TP)
                                {
                                    <option value="@item.id">@item.Nombre</option>
                                }


                            </select>

                        </div>
                    </div>






                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class=" col-md-12 col-sm-12 col-12">
        <div class="card">
            <div class="card-header p-4">
                <a asp-page="/Movimientos/Index" class="nav-link text-dark" style="text-decoration: underline;"><i class="fas fa-reply "></i>  Regresar</a>
                <input hidden id="Detalle" value="@JsonConvert.SerializeObject(Model.Input.Detalle)" />
                <input hidden id="ProductosHijos" value="@JsonConvert.SerializeObject(Model.ProductosHijos)" />
                <input hidden id="ManoObra" value="@JsonConvert.SerializeObject(Model.ManoObra)" />
                <input hidden id="Impuestos" value="@JsonConvert.SerializeObject(Model.Imp)" />
                <input hidden id="ProductosHijosInsertar" value="@JsonConvert.SerializeObject(Model.ProductosHijosInsertar)" />
                <input hidden id="ProductoPadre" value="@JsonConvert.SerializeObject(Model.ProductoPadre)" />
                <input hidden id="Errores" value="@JsonConvert.SerializeObject(Model.Errores)" />
                <input hidden id="idLlamada" value="@Model.Llamada.id" />





                <input hidden id="idGeneral" value="@Model.Input.id" />



                <div class="float-right">
                    <h3 class="mb-0">Llamada #@Model.Input.NumLlamada</h3>
                    Tipo Caso: @(Model.Llamada == null ? "0" : Model.TP.Where(b => b.idSAP == Model.Llamada.TipoCaso.Value.ToString()).FirstOrDefault() == null ? "Sin Tipo Caso" : Model.TP.Where(b => b.idSAP == Model.Llamada.TipoCaso.Value.ToString()).FirstOrDefault().Nombre) <br />
                    Status: @(Model.Llamada == null ? "0" : Model.Status.Where(b => b.idSAP == Model.Llamada.Status.Value.ToString()).FirstOrDefault() == null ? "Sin Status" : Model.Status.Where(b => b.idSAP == Model.Llamada.Status.Value.ToString()).FirstOrDefault().Nombre)<br />
                    Fecha: @Model.Input.Fecha.ToString("dd/MMMM/yyyy")
                </div>
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-sm-6">

                        @{
                            switch (Model.Input.TipoMovimiento)
                            {
                                case 1:
                                    {
                                            <h3 class="text-dark mb-1">Oferta de Venta</h3>
                                        break;
                                    }
                                case 2:
                                    {
                                            <h3 class="text-dark mb-1">Entrega</h3>
                                        break;
                                    }
                                case 3:
                                    {
                                            <h3 class="text-dark mb-1">Cotización BackOffice</h3>
                                        break;
                                    }
                            }
                        }

                        <div>CardCode: @Model.Input.CardCode</div>
                        <div>Cliente: @Model.Input.CardName</div>

                        <div>Telefono: @Model.Llamada.NumeroPersonaContacto</div>
                        <div>Persona Contacto: @Model.Llamada.PersonaContacto</div>
                        <div>Email Persona Contacto: @Model.Llamada.EmailPersonaContacto</div>
                        <div>Producto: @Model.ProductoPadre.codSAP - @Model.ProductoPadre.Nombre</div>

                        <div class="row col-sm-4">

                            <div class="form-group">
                                <label>Moneda</label>
                                <select id="Moneda" class="form-control" asp-for="Input.Moneda" required onchange="javascript: ModificaMoneda()">
                                    <option value="COL" selected>Colones</option>
                                    <option value="USD">Dólares</option>

                                </select>

                            </div>
                        </div>
                        <div class="row col-sm-4">

                            <div class="form-group">
                                <label>Precio Producto Padre</label>
                                <input id="PrecioProductoPadre" type="number" class="form-control" onchange="javascript: CalculaSemaforo()" />

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <h3 class="text-dark mb-1">Información del Producto</h3>
                        <div>Cod Articulo: @Model.Llamada.ItemCode</div>
                        <div>Descripción: @Model.ProductoPadre.Nombre</div>

                        <div># Serie: @Model.Llamada.SerieFabricante</div>
                        <div>Ubicación: @Model.UbicacionProd</div>
                        <br />
                        @if(Model.Cliente.Exonerado == "1")
                        {
                            <div><span class="badge">CLIENTE EXONERADO</span></div>

                        }
                        <br />
                        <button id="agregaManoObra" class="btn btn-rounded btn-outline-danger" style="margin-top: 27%;" onclick="javascript: MeterManoObra()"> <i class="fas fa-plus "></i> Mano De Obra</button>
                    </div>
                </div>

                <hr />

                <div class="row">
                    <div class="col-sm-12">
                        <label class="col-form-label">Producto Hijo:</label>
                        <div class="form-group row">


                            <label id="id" hidden style="line-height: 32px;">
                            </label>
                            <div class="col-sm-6">
                                <input id="Busqueda" list="prodHijos" class="form-control" type="text" />
                                <datalist id="prodHijos">
                                    @foreach (var item in Model.ProductosHijosInsertar.ToList())
                                    {
                                        <option value="@item.id _ @item.codSAP "> @item.codSAP - @item.Nombre </option>
                                    }
                                </datalist>

                            </div>
                            <div class="col-sm-3">

                                <button title="Buscar" type="submit" class="btn btn btn-primary" onclick="javascript: onChangeProducto();"> <i class="fa fa-search"></i></button>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-sm-4">

                                <div class="form-group row">
                                    <div class="col-sm-12">
                                        <label class="col-form-label">Nombre:</label>
                                    </div>
                                    <div class="col-sm-12">
                                        <label id="Nombre" style="line-height: 32px;">
                                        </label>

                                    </div>
                                </div>




                            </div>
                            <div class="col-sm-4">
                                <div class="form-group row">
                                    <div class="col-sm-12">
                                        <label class="col-form-label">Stock:</label>
                                    </div>
                                    <div class="col-sm-12">
                                        <label id="cantidad" style="line-height: 32px;">
                                        </label>


                                    </div>
                                </div>
                            </div>


                            <div class="col-sm-4" style="text-align: center;">

                                <a title="Agregar" id="Agregar" onclick="javascript: InsertarProductoTabla();" style=" color: #fff; width: 25%;" class="btn btn-rounded btn-primary">+</a>
                            </div>


                        </div>

                    </div>
                </div>
                <div class="row">
                </div>
                <hr />

                <div class="table-responsive-sm">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Acción</th>
                                <th>Producto</th>
                                <th class="center">Precio Unitario</th>
                                <th class="center">Cantidad</th>
                                <th class="center">Stock</th>
                                <th class="center">Imp</th>

                                <th class="center">Impuestos</th>
                                <th class="center">% Descuento</th>

                                <th class="center">Descuentos</th>
                                <th class="center">Total</th>
                                <th class="center">Garantia</th>
                                <th class="center">Opcional</th>

                                <th class="center">% Ganancia</th>
                                <th class="center">% Ganancia Minima</th>



                            </tr>
                        </thead>
                        <tbody id="tbody">
                        </tbody>
                    </table>

                </div>

                <div class="row">
                    <div class="col-lg-4 col-sm-5">
                    </div>
                    <div class="col-lg-4 col-sm-5 ml-auto">
                        <table class="table table-clear">
                            <tbody>
                                <tr>
                                    <td align="left">
                                        <strong class="text-dark">Subtotal</strong>
                                    </td>
                                    <td align="right">
                                        <span class="moneda"></span>

                                        <strong style="font-weight: inherit;" id="SubtotalGeneral"></strong>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left">
                                        <strong class="text-dark">% Descuento</strong>
                                    </td>
                                    <td align="right"><input class="form-control input" value="@(Convert.ToInt32(Model.Input.PorDescuento))" type="number" step="1" id="descGeneral" onchange="javascript: ModificaTodo()"></td>
                                </tr>
                                <tr>
                                    <td align="left">
                                        <strong class="text-dark">Descuento</strong>
                                    </td>
                                    <td align="right">
                                        <span class="moneda"></span>

                                        <strong style="font-weight: inherit;" id="DescGeneral"></strong>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left">
                                        <strong class="text-dark">Impuestos</strong>
                                    </td>

                                    <td align="right">
                                        <span class="moneda"></span>

                                        <strong style="font-weight: inherit;" id="ImpGeneral"></strong>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left">
                                        <strong class="text-dark">Total</strong>
                                    </td>
                                    <td align="right">
                                        <span class="moneda"></span>
                                        <strong class="text-dark" id="TotalGeneral"></strong>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <span id="spanSemaforo" style="font-weight: bold; color: white;" class="badge bg-success">0%</span>
                                    </td>
                                    <td>
                                        <div class="progress progress-xs progress-striped active">
                                            <div id="divSemaforo" class="progress-bar bg-success" style="width: 1%"></div>
                                        </div>

                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>


                <div class="col-sm-6">
                    <div class="form-group">
                        <label>Comentarios</label>

                        <textarea id="comentarios" maxlength="500" class="form-control" asp-for="Input.Comentarios"></textarea>

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-6">
                        <h5>Listado de Actividades de la llamada # @Model.Llamada.DocEntry</h5>
                    </div>
                    <div class="col-md-4">
                        <a class="btn btn-rounded btn-outline-primary" title="Agregar" onclick="javascript: onclickModal()">+  Agregar</a>

                        <input hidden id="idLlamadaActividad" asp-for="Llamada.id" />
                    </div>

                </div>
            </div>

            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered first">
                        <thead>
                            <tr>
                                <th>No. Actividad</th>
                                <th>Tipo</th>
                                <th>Fecha Creación</th>
                                <th>Usuario Creador</th>

                                <th>Detalle</th>
                                <th>Acción</th>



                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Actividades)
                            {
                                <tr>
                                    <td>@item.DocEntry</td>

                                    @{
                                        switch (item.TipoActividad)
                                        {
                                            case 1:
                                                {
                                                        <td> Llamada Telefónica</td>

                                                    break;
                                                }
                                            case 2:
                                                {
                                                        <td> Reunión</td>

                                                    break;
                                                }
                                            case 3:
                                                {
                                                        <td> Tarea</td>

                                                    break;
                                                }
                                            case 4:
                                                {
                                                        <td>Nota</td>

                                                    break;
                                                }
                                            case 5:
                                                {
                                                        <td> Campaña</td>

                                                    break;
                                                }
                                            case 6:
                                                {
                                                        <td> Otros</td>

                                                    break;
                                                }

                                        }
                                    }


                                    <td>

                                        @item.FechaCreacion
                                    </td>
                                    @{
                                        var cardCode = item.idLogin;
                                    }
                                    <td>@(Model.Usuarios.Where(a => a.id == cardCode).FirstOrDefault() == null ? "" : Model.Usuarios.Where(a => a.id == cardCode).FirstOrDefault().Nombre) </td>

                                    <td>@item.Detalle </td>
                                    <td>

                                        @if (!item.ProcesadaSAP)
                                        {

                                            <a onclick="javascript: enviarActividadSAP('@item.id')" title="Enviar a SAP"> <img src="~/sap.png" style="width: 20%;height: 25%;border-radius: 30%; cursor: pointer;" /></a>
                                        }&nbsp;
                                    </td>
                                </tr>
                            }


                        </tbody>
                        <tfoot>
                            <tr>
                                <th>No. Actividad</th>
                                <th>Tipo</th>
                                <th>Fecha Creación</th>
                                <th>Usuario Creador</th>

                                <th>Detalle</th>
                                <th>Acción</th>

                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="modal-xl">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Agregar Actividad</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Tipo de Actividad:</label>
                            <select id="tipoActividad" class="form-control" required>
                                <option value="1">Llamada Telefónica</option>
                                <option value="2">Reunión</option>
                                <option value="3">Tarea</option>
                                <option value="4">Nota</option>
                                <option value="5">Campaña</option>
                                <option value="6">Otros</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label> Detalle:</label>
                            <input type="text" class="form-control form-control-lg" id="DetalleActividad" placeholder="Detalle Actividad">

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                <button type="button" id="Guardar" onclick="javascript: onGuardar()" class="btn btn-primary">Guardar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<button type="button" onclick="javascript: Generar(false);" class="btn btn-rounded btn-outline-success" id="Guardar1">Guardar Cambios</button>
&nbsp;
<button type="button" onclick="javascript: Generar(true);" class="btn btn-rounded btn-outline-secondary" id="Guardar2">Guardar y Generar</button>

